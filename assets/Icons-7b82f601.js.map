{"version":3,"file":"Icons-7b82f601.js","sources":["../../node_modules/@ui5/webcomponents-base/dist/assets-meta/IconCollectionsAlias.js","../../node_modules/@ui5/webcomponents-base/dist/config/Icons.js","../../node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js"],"sourcesContent":["/**\n * Supported icon collection aliases.\n *\n * Users might specify a collection, using both the key and the value in the following key-value pairs,\n * e.g the following pairs are completely exchangeable:\n *\n * - \"SAP-icons/accept\" and \"SAP-icons-v4/accept\"\n * - \"horizon/accept\" and \"SAP-icons-v5/accept\"\n * - \"SAP-icons-TNT/actor\" and \"tnt/actor\"\n * - \"BusinessSuiteInAppSymbols/3d\" and \"business-suite/3d\"\n */\nvar IconCollectionsAlias;\n(function (IconCollectionsAlias) {\n    IconCollectionsAlias[\"SAP-icons\"] = \"SAP-icons-v4\";\n    IconCollectionsAlias[\"horizon\"] = \"SAP-icons-v5\";\n    IconCollectionsAlias[\"SAP-icons-TNT\"] = \"tnt\";\n    IconCollectionsAlias[\"BusinessSuiteInAppSymbols\"] = \"business-suite\";\n})(IconCollectionsAlias || (IconCollectionsAlias = {}));\n/**\n * Returns the mapped collection name for a given alias.\n *\n * <b>For example</b>:\n * - \"SAP-icons-TNT\"resolves to \"tnt\"\n * - \"BusinessSuiteInAppSymbols\" resolves to \"business-suite\"\n * - \"horizon\" resolves to \"SAP-icons-v5\"\n *\n * @param { string } collectionName\n * @return { string } the normalized collection name\n */\nconst getIconCollectionByAlias = (collectionName) => {\n    if (IconCollectionsAlias[collectionName]) {\n        return IconCollectionsAlias[collectionName];\n    }\n    return collectionName;\n};\nexport default IconCollectionsAlias;\nexport { getIconCollectionByAlias, };\n//# sourceMappingURL=IconCollectionsAlias.js.map","import { getTheme, isThemeFamily } from \"./Theme.js\";\nimport { getIconCollectionByAlias } from \"../assets-meta/IconCollectionsAlias.js\";\nconst IconCollectionConfiguration = new Map();\n// All registered icon collections - all icon collections resolves to these options at the end\nvar RegisteredIconCollection;\n(function (RegisteredIconCollection) {\n    RegisteredIconCollection[\"SAPIconsV4\"] = \"SAP-icons-v4\";\n    RegisteredIconCollection[\"SAPIconsV5\"] = \"SAP-icons-v5\";\n    RegisteredIconCollection[\"SAPIconsTNTV2\"] = \"tnt-v2\";\n    RegisteredIconCollection[\"SAPIconsTNTV3\"] = \"tnt-v3\";\n    RegisteredIconCollection[\"SAPBSIconsV1\"] = \"business-suite-v1\";\n    RegisteredIconCollection[\"SAPBSIconsV2\"] = \"business-suite-v2\";\n})(RegisteredIconCollection || (RegisteredIconCollection = {}));\n/**\n * Sets the default icon collection for a given theme.\n *\n * SAP Icons is the default icon collection (that resolves to SAP-icons version 5.x in Horizon theme family and SAP-icons version 4.x in all other themes)\n * and to display icons from other collections, you have to specify the icon collection in addition to the icon name, for example: \"tnt/actor\", \"business-suite/1x2-grid-layout\", etc.\n * This method allows setting another (built-in or custom) icon collection as default per theme.\n *\n * <b>Usage</b>\n * <b>For example</b>, to make \"SAP-icons version 5.x\" the default icon collection in \"sap_fiori_3\":\n *\n * <pre>\n * setDefaultIconCollection(\"sap_fiori_3\", \"SAP-icons-v5\");\n *\n * <ui5-icon name=\"home\"></ui5-icon>\n * </pre>\n *\n * <b>For example</b>, to make a custom icon collection (with name \"my-custom-collection\") the default icon collection in \"sap_fiori_3\":\n *\n * <pre>\n * setDefaultIconCollection(\"sap_fiori_3\", \"my-custom-collection\");\n *\n * <ui5-icon name=\"custom-icon-name\"></ui5-icon>\n * </pre>\n *\n * @public\n * @param { string } theme\n * @param { string } collectionName\n */\nconst setDefaultIconCollection = (theme, collectionName) => {\n    IconCollectionConfiguration.set(theme, collectionName);\n};\n/**\n * Returns the configured default icon collection for a given theme.\n *\n * @param { string } theme\n * @public\n * @returns { string | undefined }\n */\nconst getDefaultIconCollection = (theme) => {\n    return IconCollectionConfiguration.get(theme);\n};\n/**\n * Returns the effective icon collection,\n * based on the default icon collection configuration and the current theme:\n * @param { IconCollection } collectionName\n * @returns { IconCollection } the effective collection name\n */\nconst getEffectiveIconCollection = (collectionName) => {\n    const currentTheme = getTheme();\n    const currentThemeConfiguration = IconCollectionConfiguration.get(currentTheme);\n    // when no collection is set and default collection is configured - return the configured icon collection\n    if (!collectionName && currentThemeConfiguration) {\n        return getIconCollectionByAlias(currentThemeConfiguration);\n    }\n    // when collection is set - return the theme dependant icon collection\n    // when collection is not set and there is no default icon collection configured - return theme dependant icon collection\n    return getIconCollectionByTheme(collectionName);\n};\n/**\n * Returns the icon theme dependant collection, based on the collection name and current theme as follows:\n *\n * - \"no collection\" resolves to \"SAP-icons-v4\" in \"Quartz\" and \"Belize\", and to \"SAP-icons-v5\" in \"Horizon\" (or as confugred via setDefaultIconCollection)\n * - \"SAP-icons-v4\" (and its alias \"SAP-icons\") forces \"SAP-icons v4\" in any theme and resolves to itself \"SAP-icons-v4\"\n * - \"SAP-icons-v5\" (and its alias \"horizon\") forces  \"SAP-icons v5\" in any theme and resolves to itself \"SAP-icons-v5\"\n * - \"tnt\" (and its alias \"SAP-icons-TNT\") resolves to \"tnt-v2\" in \"Quartz\", \"Belize\", and resolves to \"tnt-v3\" in \"Horizon\"\n * - \"tnt-v2\" forces \"TNT icons v2\" in any theme and resolves to itself \"tnt-v2\"\n * - \"tnt-v3\" forces \"TNT icons v3\" in any theme and resolves to itself \"tnt-v3\"\n * - \"business-suite\" (and its alias \"BusinessSuiteInAppSymbols\") resolves to \"business-suite-v1\" in \"Quartz\", \"Belize\", and resolves to \"business-suite-v2\" in \"Horizon\"\n * - \"business-suite-v1\" forces \"Business Suite icons v1\" in any theme and resolves to itself \"business-suite-v1\"\n * - \"business-suite-v2\" forces \"Business Suite icons v2\" in any theme and resolves to itself \"business-suite-v2\"\n *\n * <b>Note:</b> \"SAP-icons-v4\", \"SAP-icons-v5\", \"tnt-v2\", \"tnt-v3\", \"business-suite-v1\" and \"business-suite-v2\" are just returned\n * @param { IconCollection } collectionName\n * @returns { RegisteredIconCollection } the registered collection name\n */\nconst getIconCollectionByTheme = (collectionName) => {\n    const horizonThemeFamily = isThemeFamily(\"sap_horizon\");\n    if (!collectionName) {\n        return horizonThemeFamily ? RegisteredIconCollection.SAPIconsV5 : RegisteredIconCollection.SAPIconsV4;\n    }\n    if (collectionName === \"tnt\") {\n        return horizonThemeFamily ? RegisteredIconCollection.SAPIconsTNTV3 : RegisteredIconCollection.SAPIconsTNTV2;\n    }\n    if (collectionName === \"business-suite\") {\n        return horizonThemeFamily ? RegisteredIconCollection.SAPBSIconsV2 : RegisteredIconCollection.SAPBSIconsV1;\n    }\n    return collectionName;\n};\nexport { setDefaultIconCollection, getDefaultIconCollection, getEffectiveIconCollection, RegisteredIconCollection, };\n//# sourceMappingURL=Icons.js.map","import getSharedResource from \"../getSharedResource.js\";\nimport { getIconCollectionByAlias } from \"../assets-meta/IconCollectionsAlias.js\";\nimport { getEffectiveIconCollection } from \"../config/Icons.js\";\nconst loaders = new Map();\nconst registry = getSharedResource(\"SVGIcons.registry\", new Map());\nconst iconCollectionPromises = getSharedResource(\"SVGIcons.promises\", new Map());\nconst ICON_NOT_FOUND = \"ICON_NOT_FOUND\";\nconst registerIconLoader = (collectionName, loader) => {\n    loaders.set(collectionName, loader);\n};\nconst _loadIconCollectionOnce = async (collectionName) => {\n    if (!iconCollectionPromises.has(collectionName)) {\n        if (!loaders.has(collectionName)) {\n            throw new Error(`No loader registered for the ${collectionName} icons collection. Probably you forgot to import the \"AllIcons.js\" module for the respective package.`);\n        }\n        const loadIcons = loaders.get(collectionName);\n        iconCollectionPromises.set(collectionName, loadIcons(collectionName));\n    }\n    return iconCollectionPromises.get(collectionName);\n};\nconst _fillRegistry = (bundleData) => {\n    Object.keys(bundleData.data).forEach(iconName => {\n        const iconData = bundleData.data[iconName];\n        registerIcon(iconName, {\n            pathData: iconData.path || iconData.paths,\n            ltr: iconData.ltr,\n            accData: iconData.acc,\n            collection: bundleData.collection,\n            packageName: bundleData.packageName,\n        });\n    });\n};\n// set\nconst registerIcon = (name, iconData) => {\n    const key = `${iconData.collection}/${name}`;\n    registry.set(key, {\n        pathData: iconData.pathData,\n        ltr: iconData.ltr,\n        accData: iconData.accData,\n        packageName: iconData.packageName,\n        customTemplate: iconData.customTemplate,\n        viewBox: iconData.viewBox,\n        collection: iconData.collection,\n    });\n};\n/**\n * Processes the full icon name and splits it into - \"name\", \"collection\"\n * to form the proper registry key (\"collection/name\") under which the icon is registered:\n *\n * - removes legacy protocol (\"sap-icon://\")\n * - resolves aliases (f.e \"SAP-icons-TNT/actor\" => \"tnt/actor\")\n * - determines theme dependant icon collection (f.e \"home\" => \"SAP-icons-v4/home\" in Quartz | \"SAP-icons-v5/home\" in Horizon)\n *\n * @param { string } name\n * @return { object }\n */\nconst processName = (name) => {\n    // silently support ui5-compatible URIs\n    if (name.startsWith(\"sap-icon://\")) {\n        name = name.replace(\"sap-icon://\", \"\");\n    }\n    let collection;\n    [name, collection] = name.split(\"/\").reverse();\n    name = name.replace(\"icon-\", \"\");\n    if (collection) {\n        collection = getIconCollectionByAlias(collection);\n    }\n    collection = getEffectiveIconCollection(collection);\n    const registryKey = `${collection}/${name}`;\n    return { name, collection, registryKey };\n};\nconst getIconDataSync = (name) => {\n    const { registryKey } = processName(name);\n    return registry.get(registryKey);\n};\nconst getIconData = async (name) => {\n    const { collection, registryKey } = processName(name);\n    let iconData = ICON_NOT_FOUND;\n    try {\n        iconData = (await _loadIconCollectionOnce(collection));\n    }\n    catch (error) {\n        const e = error;\n        console.error(e.message); /* eslint-disable-line */\n    }\n    if (iconData === ICON_NOT_FOUND) {\n        return iconData;\n    }\n    if (!registry.has(registryKey)) {\n        // not filled by another await. many getters will await on the same loader, but fill only once\n        _fillRegistry(iconData);\n    }\n    return registry.get(registryKey);\n};\n// test page usage only\nconst _getRegisteredNames = async () => {\n    // fetch one icon of each collection to trigger the bundle load\n    await getIconData(\"edit\");\n    await getIconData(\"tnt/arrow\");\n    await getIconData(\"business-suite/3d\");\n    return Array.from(registry.keys());\n};\nexport { registerIconLoader, getIconData, getIconDataSync, registerIcon, _getRegisteredNames, };\n//# sourceMappingURL=Icons.js.map"],"names":["IconCollectionsAlias","getIconCollectionByAlias","collectionName","IconCollectionConfiguration","RegisteredIconCollection","getEffectiveIconCollection","currentTheme","getTheme","currentThemeConfiguration","getIconCollectionByTheme","horizonThemeFamily","isThemeFamily","loaders","registry","getSharedResource","iconCollectionPromises","ICON_NOT_FOUND","registerIconLoader","loader","_loadIconCollectionOnce","loadIcons","_fillRegistry","bundleData","iconName","iconData","registerIcon","name","key","processName","collection","registryKey","getIconDataSync","getIconData","error"],"mappings":"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"}