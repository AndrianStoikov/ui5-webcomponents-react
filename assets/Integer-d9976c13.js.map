{"version":3,"file":"Integer-d9976c13.js","sources":["../../node_modules/@ui5/webcomponents-base/dist/util/getActiveElement.js","../../node_modules/@ui5/webcomponents-base/dist/types/DataType.js","../../node_modules/@ui5/webcomponents-base/dist/types/Integer.js"],"sourcesContent":["const getActiveElement = () => {\n    let element = document.activeElement;\n    while (element && element.shadowRoot && element.shadowRoot.activeElement) {\n        element = element.shadowRoot.activeElement;\n    }\n    return element;\n};\nexport default getActiveElement;\n//# sourceMappingURL=getActiveElement.js.map","/**\n * Base class for all data types.\n *\n * @class\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webc.base.types.DataType\n * @public\n */\nclass DataType {\n    /**\n     * Checks if the value is valid for its data type.\n     * @public\n     * @abstract\n     * @returns {Boolean}\n     */\n    // eslint-disable-next-line\n    static isValid(value) {\n        return false;\n    }\n    static attributeToProperty(attributeValue) {\n        return attributeValue;\n    }\n    static propertyToAttribute(propertyValue) {\n        return propertyValue === null ? null : String(propertyValue);\n    }\n    static valuesAreEqual(value1, value2) {\n        return value1 === value2;\n    }\n    static generateTypeAccessors(types) {\n        Object.keys(types).forEach(type => {\n            Object.defineProperty(this, type, {\n                get() {\n                    return types[type];\n                },\n            });\n        });\n    }\n    static get isDataTypeClass() {\n        return true;\n    }\n}\nexport default DataType;\n//# sourceMappingURL=DataType.js.map","import DataType from \"./DataType.js\";\n/**\n * @class\n * Integer data type.\n *\n * @constructor\n * @extends sap.ui.webc.base.types.DataType\n * @author SAP SE\n * @alias sap.ui.webc.base.types.Integer\n * @public\n * @enum {number}\n */\nclass Integer extends DataType {\n    static isValid(value) {\n        return Number.isInteger(value);\n    }\n    static attributeToProperty(attributeValue) {\n        return parseInt(attributeValue);\n    }\n}\nexport default Integer;\n//# sourceMappingURL=Integer.js.map"],"names":["getActiveElement","element","DataType","value","attributeValue","propertyValue","value1","value2","types","type","Integer"],"mappings":"AAAK,MAACA,EAAmB,IAAM,CAC3B,IAAIC,EAAU,SAAS,cACvB,KAAOA,GAAWA,EAAQ,YAAcA,EAAQ,WAAW,eACvDA,EAAUA,EAAQ,WAAW,cAEjC,OAAOA,CACX,ECGA,MAAMC,CAAS,CAQX,OAAO,QAAQC,EAAO,CAClB,MAAO,EACV,CACD,OAAO,oBAAoBC,EAAgB,CACvC,OAAOA,CACV,CACD,OAAO,oBAAoBC,EAAe,CACtC,OAAOA,IAAkB,KAAO,KAAO,OAAOA,CAAa,CAC9D,CACD,OAAO,eAAeC,EAAQC,EAAQ,CAClC,OAAOD,IAAWC,CACrB,CACD,OAAO,sBAAsBC,EAAO,CAChC,OAAO,KAAKA,CAAK,EAAE,QAAQC,GAAQ,CAC/B,OAAO,eAAe,KAAMA,EAAM,CAC9B,KAAM,CACF,OAAOD,EAAMC,CAAI,CACpB,CACjB,CAAa,CACb,CAAS,CACJ,CACD,WAAW,iBAAkB,CACzB,MAAO,EACV,CACL,CC7BA,MAAMC,UAAgBR,CAAS,CAC3B,OAAO,QAAQC,EAAO,CAClB,OAAO,OAAO,UAAUA,CAAK,CAChC,CACD,OAAO,oBAAoBC,EAAgB,CACvC,OAAO,SAASA,CAAc,CACjC,CACL"}