{"version":3,"file":"Icons-5bcf1e3f.js","sources":["../../node_modules/@ui5/webcomponents-base/dist/assets-meta/IconCollectionsAlias.js","../../node_modules/@ui5/webcomponents-base/dist/config/Icons.js","../../node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js"],"sourcesContent":["/**\n * Supported icon collection names and aliases.\n *\n * Users might specify a collection, using both the key and the value in the following key-value pairs,\n * e.g the following pairs are completely exchangeable:\n * \"SAP-icons-TNT/actor\" and \"tnt/actor\", \"BusinessSuiteInAppSymbols/3d\" and \"business-suite/3d\",\n * \"SAP-icons-v5/accept\" and \"horizon/accept\".\n *\n * Note: technically, in the code we maintain the collections under the \"value\" name - \"tnt\", \"business-suite\",\n * SAP-icons-v5\" and \"SAP-icons\"(which does not have an alias).\n */\nconst IconCollectionsAlias = {\n    \"SAP-icons-TNT\": \"tnt\",\n    \"BusinessSuiteInAppSymbols\": \"business-suite\",\n    \"horizon\": \"SAP-icons-v5\",\n};\nexport default IconCollectionsAlias;\n//# sourceMappingURL=IconCollectionsAlias.js.map","import { getTheme, isThemeFamily } from \"./Theme.js\";\nconst IconCollectionConfiguration = new Map();\nvar IconCollection;\n(function (IconCollection) {\n    IconCollection[\"v4\"] = \"SAP-icons\";\n    IconCollection[\"v5\"] = \"SAP-icons-v5\";\n})(IconCollection || (IconCollection = {}));\n/**\n * Sets the default icon collection (SAP-icons font v4 or SAP-icons font v5) per theme,\n * which will be applied in case icon collection is not specified.\n *\n * Note: by default SAP-icons-v5 is used in all SAP Horizon variants and SAP-icons-v4 for all the rest.\n * @public\n * @param {string} theme\n * @param {IconCollection} collectionName\n */\nconst setDefaultIconCollection = (theme, collectionName) => {\n    if (collectionName === \"horizon\") {\n        collectionName = IconCollection.v5;\n    }\n    IconCollectionConfiguration.set(theme, collectionName);\n};\n/**\n * Returns the default icon collection (v4 or v5) for given theme,\n * that is configured.\n *\n * @param {string} theme\n * @public\n * @returns {string | undefined}\n */\nconst getDefaultIconCollection = (theme) => {\n    return IconCollectionConfiguration.get(theme);\n};\n/**\n * Returns the effective icon collection that will be applied for icon web components\n * whenever namespace is not specified.\n * @returns {string}\n */\nconst getEffectiveDefaultIconCollection = () => {\n    const currentTheme = getTheme();\n    const currentThemeConfiguration = IconCollectionConfiguration.get(currentTheme);\n    if (currentThemeConfiguration) {\n        return currentThemeConfiguration;\n    }\n    return isThemeFamily(\"sap_horizon\") ? IconCollection.v5 : IconCollection.v4;\n};\nexport { setDefaultIconCollection, getDefaultIconCollection, getEffectiveDefaultIconCollection, };\n//# sourceMappingURL=Icons.js.map","import getSharedResource from \"../getSharedResource.js\";\nimport IconCollectionsAlias from \"../assets-meta/IconCollectionsAlias.js\";\nimport { getEffectiveDefaultIconCollection } from \"../config/Icons.js\";\nconst loaders = new Map();\nconst registry = getSharedResource(\"SVGIcons.registry\", new Map());\nconst iconCollectionPromises = getSharedResource(\"SVGIcons.promises\", new Map());\nconst ICON_NOT_FOUND = \"ICON_NOT_FOUND\";\nconst registerIconLoader = (collectionName, loader) => {\n    loaders.set(collectionName, loader);\n};\nconst _loadIconCollectionOnce = async (collectionName) => {\n    if (!iconCollectionPromises.has(collectionName)) {\n        if (!loaders.has(collectionName)) {\n            throw new Error(`No loader registered for the ${collectionName} icons collection. Probably you forgot to import the \"AllIcons.js\" module for the respective package.`);\n        }\n        const loadIcons = loaders.get(collectionName);\n        iconCollectionPromises.set(collectionName, loadIcons(collectionName));\n    }\n    return iconCollectionPromises.get(collectionName);\n};\nconst _fillRegistry = (bundleData) => {\n    Object.keys(bundleData.data).forEach(iconName => {\n        const iconData = bundleData.data[iconName];\n        registerIcon(iconName, {\n            pathData: iconData.path || iconData.paths,\n            ltr: iconData.ltr,\n            accData: iconData.acc,\n            collection: bundleData.collection,\n            packageName: bundleData.packageName,\n        });\n    });\n};\n// set\nconst registerIcon = (name, iconData) => {\n    if (!iconData.collection) {\n        iconData.collection = getEffectiveDefaultIconCollection();\n    }\n    const key = `${iconData.collection}/${name}`;\n    registry.set(key, {\n        pathData: iconData.pathData,\n        ltr: iconData.ltr,\n        accData: iconData.accData,\n        packageName: iconData.packageName,\n        customTemplate: iconData.customTemplate,\n        viewBox: iconData.viewBox,\n    });\n};\nconst _parseName = (name) => {\n    // silently support ui5-compatible URIs\n    if (name.startsWith(\"sap-icon://\")) {\n        name = name.replace(\"sap-icon://\", \"\");\n    }\n    let collection;\n    [name, collection] = name.split(\"/\").reverse();\n    collection = collection || getEffectiveDefaultIconCollection();\n    // Normalize collection name.\n    // - resolve `SAP-icons-TNT` to `tnt`.\n    // - resolve `BusinessSuiteInAppSymbols` to `business-suite`.\n    // - resolve `horizon` to `SAP-icons-v5`,\n    // Note: aliases can be made as a feature, if more collections need it or more aliases are needed.\n    collection = _normalizeCollection(collection);\n    name = name.replace(\"icon-\", \"\");\n    const registryKey = `${collection}/${name}`;\n    return { name, collection, registryKey };\n};\nconst getIconDataSync = (name) => {\n    const { registryKey } = _parseName(name);\n    return registry.get(registryKey);\n};\nconst getIconData = async (name) => {\n    const { collection, registryKey } = _parseName(name);\n    let iconData = ICON_NOT_FOUND;\n    try {\n        iconData = (await _loadIconCollectionOnce(collection));\n    }\n    catch (error) {\n        const e = error;\n        console.error(e.message); /* eslint-disable-line */\n    }\n    if (iconData === ICON_NOT_FOUND) {\n        return iconData;\n    }\n    if (!registry.has(registryKey)) {\n        // not filled by another await. many getters will await on the same loader, but fill only once\n        _fillRegistry(iconData);\n    }\n    return registry.get(registryKey);\n};\n// test page usage only\nconst _getRegisteredNames = async () => {\n    // fetch one icon of each collection to trigger the bundle load\n    await getIconData(\"edit\");\n    await getIconData(\"tnt/arrow\");\n    await getIconData(\"business-suite/3d\");\n    return Array.from(registry.keys());\n};\nconst _normalizeCollection = (collectionName) => {\n    if (IconCollectionsAlias[collectionName]) {\n        return IconCollectionsAlias[collectionName];\n    }\n    return collectionName;\n};\nexport { registerIconLoader, getIconData, getIconDataSync, registerIcon, _getRegisteredNames, };\n//# sourceMappingURL=Icons.js.map"],"names":["IconCollectionsAlias","IconCollectionConfiguration","IconCollection","getEffectiveDefaultIconCollection","currentTheme","getTheme","currentThemeConfiguration","isThemeFamily","loaders","registry","getSharedResource","iconCollectionPromises","ICON_NOT_FOUND","registerIconLoader","collectionName","loader","_loadIconCollectionOnce","loadIcons","_fillRegistry","bundleData","iconName","iconData","registerIcon","name","key","_parseName","collection","_normalizeCollection","registryKey","getIconDataSync","getIconData","error"],"mappings":"2DAWA,MAAMA,EAAuB,CACzB,gBAAiB,MACjB,0BAA6B,iBAC7B,QAAW,cACf,ECdMC,EAA8B,IAAI,IACxC,IAAIC,GACH,SAAUA,EAAgB,CACvBA,EAAe,GAAQ,YACvBA,EAAe,GAAQ,cAC3B,GAAGA,IAAmBA,EAAiB,CAAE,EAAC,EAgC1C,MAAMC,EAAoC,IAAM,CAC5C,MAAMC,EAAeC,IACfC,EAA4BL,EAA4B,IAAIG,CAAY,EAC9E,OAAIE,IAGGC,EAAc,aAAa,EAAIL,EAAe,GAAKA,EAAe,GAC7E,EC1CMM,EAAU,IAAI,IACdC,EAAWC,EAAkB,oBAAqB,IAAI,GAAK,EAC3DC,EAAyBD,EAAkB,oBAAqB,IAAI,GAAK,EACzEE,EAAiB,iBACjBC,EAAqB,CAACC,EAAgBC,IAAW,CACnDP,EAAQ,IAAIM,EAAgBC,CAAM,CACtC,EACMC,EAA0B,MAAOF,GAAmB,CACtD,GAAI,CAACH,EAAuB,IAAIG,CAAc,EAAG,CAC7C,GAAI,CAACN,EAAQ,IAAIM,CAAc,EAC3B,MAAM,IAAI,MAAM,gCAAgCA,wGAAqH,EAEzK,MAAMG,EAAYT,EAAQ,IAAIM,CAAc,EAC5CH,EAAuB,IAAIG,EAAgBG,EAAUH,CAAc,CAAC,CACvE,CACD,OAAOH,EAAuB,IAAIG,CAAc,CACpD,EACMI,EAAiBC,GAAe,CAClC,OAAO,KAAKA,EAAW,IAAI,EAAE,QAAQC,GAAY,CAC7C,MAAMC,EAAWF,EAAW,KAAKC,CAAQ,EACzCE,EAAaF,EAAU,CACnB,SAAUC,EAAS,MAAQA,EAAS,MACpC,IAAKA,EAAS,IACd,QAASA,EAAS,IAClB,WAAYF,EAAW,WACvB,YAAaA,EAAW,WACpC,CAAS,CACT,CAAK,CACL,EAEMG,EAAe,CAACC,EAAMF,IAAa,CAChCA,EAAS,aACVA,EAAS,WAAalB,KAE1B,MAAMqB,EAAM,GAAGH,EAAS,cAAcE,IACtCd,EAAS,IAAIe,EAAK,CACd,SAAUH,EAAS,SACnB,IAAKA,EAAS,IACd,QAASA,EAAS,QAClB,YAAaA,EAAS,YACtB,eAAgBA,EAAS,eACzB,QAASA,EAAS,OAC1B,CAAK,CACL,EACMI,EAAcF,GAAS,CAErBA,EAAK,WAAW,aAAa,IAC7BA,EAAOA,EAAK,QAAQ,cAAe,EAAE,GAEzC,IAAIG,EACJ,CAACH,EAAMG,CAAU,EAAIH,EAAK,MAAM,GAAG,EAAE,UACrCG,EAAaA,GAAcvB,IAM3BuB,EAAaC,EAAqBD,CAAU,EAC5CH,EAAOA,EAAK,QAAQ,QAAS,EAAE,EAC/B,MAAMK,EAAc,GAAGF,KAAcH,IACrC,MAAO,CAAE,KAAAA,EAAM,WAAAG,EAAY,YAAAE,EAC/B,EACMC,EAAmBN,GAAS,CAC9B,KAAM,CAAE,YAAAK,CAAW,EAAKH,EAAWF,CAAI,EACvC,OAAOd,EAAS,IAAImB,CAAW,CACnC,EACME,EAAc,MAAOP,GAAS,CAChC,KAAM,CAAE,WAAAG,EAAY,YAAAE,CAAa,EAAGH,EAAWF,CAAI,EACnD,IAAIF,EAAWT,EACf,GAAI,CACAS,EAAY,MAAML,EAAwBU,CAAU,CACvD,OACMK,EAAP,CAEI,QAAQ,MADEA,EACM,OAAO,CAC1B,CACD,OAAIV,IAAaT,EACNS,GAENZ,EAAS,IAAImB,CAAW,GAEzBV,EAAcG,CAAQ,EAEnBZ,EAAS,IAAImB,CAAW,EACnC,EASMD,EAAwBb,GACtBd,EAAqBc,CAAc,EAC5Bd,EAAqBc,CAAc,EAEvCA"}