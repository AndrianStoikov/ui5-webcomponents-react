{"version":3,"file":"Loader.stories-ccb2e260.js","sources":["../../packages/main/src/components/Loader/Loader.stories.mdx"],"sourcesContent":["import { ArgsTableWithNote, DocsHeader, Footer } from '@sb/components';\nimport { Canvas, Meta, Story } from '@storybook/addon-docs';\nimport '@ui5/webcomponents-icons/dist/activate.js';\nimport { spacing } from '@ui5/webcomponents-react-base';\nimport { useEffect, useRef, useState } from 'react';\nimport { Card, CardHeader, FlexBox, FlexBoxDirection, Icon, Loader, LoaderType, Text } from '../..';\n\n<Meta\n  title=\"User Feedback / Loader\"\n  component={Loader}\n  args={{\n    type: LoaderType.Indeterminate,\n    progress: '60%'\n  }}\n/>\n\n<DocsHeader />\n\n<br />\n\n## Example\n\n<Canvas>\n  <Story name=\"Default\">\n    {(args) => {\n      return <Loader {...args} />;\n    }}\n  </Story>\n</Canvas>\n\n## Properties\n\n<ArgsTableWithNote story=\"Default\" />\n\n<br />\n\n# More Examples\n\n<br />\n\n## Card with Loader\n\n<Canvas>\n  <Story name=\"with Card\">\n    {(args) => {\n      const initialText =\n        'This is a text that will be updated 5 seconds after the header is clicked. The text will be visible until the new text has been fetched. To let the user know that the text is updating, the Loader will be displayed.';\n      const [text, setText] = useState(initialText);\n      const [loading, setLoading] = useState(false);\n      const counter = useRef(0);\n      const onHeaderClick = () => {\n        setLoading(true);\n      };\n      useEffect(() => {\n        if (loading) {\n          setTimeout(() => {\n            if (counter.current < 10) {\n              setText((prev) => (prev === initialText ? 'Updated (⌐■_■)' : initialText));\n            } else {\n              setText('You really must be bored ಠ_ಠ');\n            }\n            counter.current++;\n            setLoading(false);\n          }, 5000);\n        }\n      }, [loading]);\n      return (\n        <Card\n          header={\n            <CardHeader\n              titleText=\"Click the header to update the text below.\"\n              interactive\n              avatar={<Icon name=\"activate\" />}\n              onClick={onHeaderClick}\n            />\n          }\n          style={{ width: '400px' }}\n        >\n          <FlexBox direction={FlexBoxDirection.Column}>\n            {loading && <Loader {...args} />}\n            <Text style={spacing.sapUiContentPadding}>{text}</Text>\n          </FlexBox>\n        </Card>\n      );\n    }}\n  </Story>\n</Canvas>\n\n```jsx\nconst LoaderComponent = () => {\n  const initialText =\n    'This is a text that will be updated 5 seconds after the header is clicked. The text will be visible until the new text has been fetched. To let the user know that the text is updating, the Loader will be displayed.';\n  const [text, setText] = useState(initialText);\n  const [loading, setLoading] = useState(false);\n  const onHeaderClick = () => {\n    setLoading(true);\n  };\n  useEffect(() => {\n    if (loading) {\n      setTimeout(() => {\n        setText((prev) => (prev === initialText ? 'Updated (⌐■_■)' : initialText));\n        setLoading(false);\n      }, 5000);\n    }\n  }, [loading]);\n  return (\n    <Card\n      header={\n        <CardHeader\n          titleText=\"Click the header to update the text below.\"\n          interactive\n          avatar={<Icon name=\"activate\" />}\n          onClick={onHeaderClick}\n        />\n      }\n      style={{ width: '400px' }}\n    >\n      <FlexBox direction={FlexBoxDirection.Column}>\n        {loading && <Loader />}\n        <Text style={spacing.sapUiContentPadding}>{text}</Text>\n      </FlexBox>\n    </Card>\n  );\n};\n```\n\n<Footer />\n"],"names":["MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","Loader","LoaderType","DocsHeader","Canvas","Story","args","ArgsTableWithNote","initialText","text","setText","useState","loading","setLoading","counter","useRef","onHeaderClick","useEffect","prev","Card","CardHeader","Icon","FlexBox","FlexBoxDirection","Text","spacing.sapUiContentPadding","Footer","defaultStory","withCard","componentMeta","__namedExportsOrder"],"mappings":"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"}