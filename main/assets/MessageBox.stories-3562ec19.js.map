{"version":3,"file":"MessageBox.stories-3562ec19.js","sources":["../../packages/main/src/components/MessageBox/CodeGen.tsx","../../packages/main/src/components/MessageBox/MessageBox.stories.mdx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { DialogDomRef } from '../../webComponents';\nimport { MessageBox as OriginalMessageBox, MessageBoxPropTypes } from './index';\nimport React from 'react';\n\nexport const MessageBox = forwardRef<DialogDomRef, MessageBoxPropTypes>((args, ref) =>\n  createPortal(<OriginalMessageBox {...args} ref={ref} />, document.body)\n);\n\nMessageBox.displayName = 'MessageBox';\n","import { ArgsTableWithNote, DocsHeader, DomRefTable, Footer } from '@sb/components';\nimport { Canvas, Meta, Story } from '@storybook/addon-docs';\nimport { useEffect, useState } from 'react';\nimport { Button, MessageBox as OriginalMessageBox, MessageBoxActions, MessageBoxTypes } from '../..';\n// todo remove once portals are supported inline, or general popovers are supported w/o having to mount them to the body\nimport { MessageBox } from './CodeGen';\nimport { isChromatic } from '@sb/utils';\nimport DialogDomRef from '../../webComponents/Dialog/DialogDomRef.json';\n\n<Meta\n  title=\"Modals & Popovers / MessageBox\"\n  component={OriginalMessageBox}\n  argTypes={{\n    header: {\n      control: { disable: true }\n    },\n    actions: {\n      control: { disable: true }\n    },\n    icon: {\n      control: { disable: true }\n    }\n  }}\n  args={{\n    open: false,\n    type: MessageBoxTypes.Confirm,\n    children: 'Press \"Escape\" to close the MessageBox.'\n  }}\n  parameters={{\n    chromatic: { delay: 1000 }\n  }}\n/>\n\n<DocsHeader />\n\n<br />\n\n## Example\n\n<Canvas>\n  <Story name=\"Default\">\n    {(args) => {\n      const [open, setOpen] = useState(isChromatic || args.open);\n      const onButtonClick = () => {\n        setOpen(true);\n      };\n      const handleClose = (e) => {\n        setOpen(false);\n        args.onClose(e);\n      };\n      useEffect(() => {\n        setOpen(args.open);\n      }, [args.open]);\n      return (\n        <>\n          <Button onClick={onButtonClick}>Open Messagebox</Button>\n          <MessageBox {...args} open={open} onClose={handleClose} />\n        </>\n      );\n    }}\n  </Story>\n</Canvas>\n\n## Properties\n\n<ArgsTableWithNote story=\"Default\" />\n\n<DomRefTable rows={DialogDomRef} />\n\n## Opening and Closing MessageBoxes\n\nUnlike `Popovers` or `Dialogs`, `MessageBoxes` do not need to be provided with a `ref` to be opened or closed. Instead, the `open` prop can be used for this.\n\n**Note:** `onClose` is either called by clicking on one of the action buttons in the footer or by pressing the `ESC` key.\n\n```jsx\nconst MessageBoxComponent = () => {\n  const [open, setOpen] = useState(false);\n  const onButtonClick = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <>\n      <Button onClick={onButtonClick}>Open Messagebox</Button>\n      <MessageBox open={open} onClose={handleClose}>\n        Content\n      </MessageBox>\n    </>\n  );\n};\n```\n\n## Accessing actions in the onClose callback\n\nTo add some logic to the respective actions you can use `event.detail.action` inside `onClose` which contains the name of the clicked action.\n\n```jsx\nconst MessageBoxComponent = () => {\n  const [open, setOpen] = useState(false);\n  const onButtonClick = () => {\n    setOpen(true);\n  };\n  const handleClose = (event) => {\n    if (event.detail.action === MessageBoxActions.OK) {\n      // do something on \"Ok\" button click\n    } else if (event.detail.action === 'Custom Action') {\n      // do something on \"Custom Action\" click\n    } else {\n      // do something on \"Cancel\" or \"Abort\" button click\n    }\n    setOpen(false);\n  };\n  return (\n    <>\n      <Button onClick={onButtonClick}>Open Messagebox</Button>\n      <MessageBox\n        open={open}\n        onClose={handleClose}\n        actions={[MessageBoxActions.OK, 'Custom Action', MessageBoxActions.Cancel, MessageBoxActions.Abort]}\n      >\n        Content\n      </MessageBox>\n    </>\n  );\n};\n```\n\n## Using MessageBoxes inside other components\n\n`MessageBoxes` are often used within other components, when opened this could sometimes have unwanted side effects.\nIn this case, we recommend using [createPortal](https://reactjs.org/docs/portals.html) to mount the `MessageBox` outside of the DOM hierarchy of the parent component.\n\n```JSX\nconst MessageBoxComponent = () => {\n  const [open, setOpen] = useState(false);\n  const onButtonClick = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <>\n      <Button onClick={onButtonClick}>Open Messagebox</Button>\n      {createPortal(\n        <MessageBox open={open} onClose={handleClose}>\n          Content\n        </MessageBox>,\n        document.body\n      )}\n    </>\n  );\n};\n```\n\n# More Examples\n\n<br />\n\n## MessageBox with custom actions\n\n<Canvas>\n  <Story\n    name=\"With Custom Action\"\n    args={{\n      actions: [\n        MessageBoxActions.OK,\n        'Custom Action',\n        MessageBoxActions.Cancel,\n        <Button key=\"0\" id=\"custom-action\">\n          Custom Button\n        </Button>\n      ]\n    }}\n  >\n    {(args) => {\n      const [open, setOpen] = useState(false);\n      const onButtonClick = () => {\n        setOpen(true);\n      };\n      const handleClose = (e) => {\n        if (e.detail.action === 'Custom Action') {\n          // do something on \"Custom Action\" button click\n        }\n        setOpen(false);\n        args.onClose(e);\n      };\n      return (\n        <>\n          <Button onClick={onButtonClick}>Open Messagebox</Button>\n          <MessageBox {...args} open={open} onClose={handleClose} />\n        </>\n      );\n    }}\n  </Story>\n</Canvas>\n\n<Footer />\n"],"names":["MessageBox","forwardRef","args","ref","createPortal","jsx","OriginalMessageBox","MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","MessageBoxTypes","DocsHeader","Canvas","Story","open","setOpen","useState","onButtonClick","handleClose","e","useEffect","Button","ArgsTableWithNote","DomRefTable","DialogDomRef","MessageBoxActions","Footer","defaultStory","withCustomAction","componentMeta","__namedExportsOrder"],"mappings":"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"}