{"version":3,"file":"Tree.stories-907bc94f.js","sources":["../../packages/main/src/webComponents/Tree/index.tsx","../../packages/main/src/webComponents/TreeItem/index.tsx","../../packages/main/src/webComponents/TreeItemCustom/index.tsx","../../packages/main/src/webComponents/Tree/TreeDescription.md?raw","../../node_modules/@ui5/webcomponents-icons/dist/v4/copy.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/copy.js","../../node_modules/@ui5/webcomponents-icons/dist/copy.js","../../node_modules/@ui5/webcomponents-icons/dist/v4/paste.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/paste.js","../../node_modules/@ui5/webcomponents-icons/dist/paste.js","../../node_modules/@ui5/webcomponents-icons/dist/v4/download-from-cloud.js","../../node_modules/@ui5/webcomponents-icons/dist/v5/download-from-cloud.js","../../node_modules/@ui5/webcomponents-icons/dist/download-from-cloud.js","../../packages/main/src/webComponents/TreeItem/TreeItemDescription.md?raw","../../packages/main/src/webComponents/TreeItemCustom/TreeItemCustomDescription.md?raw","../../packages/main/src/webComponents/Tree/Tree.stories.mdx"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/Tree.js';\nimport { ReactNode } from 'react';\nimport { ListMode } from '../../enums';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { Ui5CustomEvent } from '../../interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '../../interfaces/Ui5DomRef';\nimport { withWebComponent } from '../../internal/withWebComponent';\nimport { UI5WCSlotsNode } from '../../types';\n\ninterface TreeAttributes {\n  /**\n   * Defines the accessible name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the IDs of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines the component footer text.\n   */\n  footerText?: string;\n  /**\n   * Defines the component header text.\n   *\n   * **Note:** If the `header` slot is set, this property is ignored.\n   */\n  headerText?: string;\n  /**\n   * Defines the mode of the component. Since the tree uses a `List` to display its structure, the tree modes are exactly the same as the list modes, and are all applicable.\n   *\n   * **Note:**\n   *\n   * *   `None`\n   * *   `SingleSelect`\n   * *   `SingleSelectBegin`\n   * *   `SingleSelectEnd`\n   * *   `MultiSelect`\n   * *   `Delete`\n   */\n  mode?: ListMode | keyof typeof ListMode;\n  /**\n   * Defines the text that is displayed when the component contains no items.\n   */\n  noDataText?: string;\n}\n\nexport interface TreeDomRef extends TreeAttributes, Ui5DomRef {\n  /**\n   * Perform Depth-First-Search walk on the tree and run a callback on each node\n   * @param {(treeNode: HTMLElement, level: number) => void} callback - function to execute on each node of the tree with 3 arguments: the node, the level and the index\n   */\n  walk: (callback: (treeNode: HTMLElement, level: number) => void) => void;\n}\n\nexport interface TreePropTypes extends TreeAttributes, CommonProps {\n  /**\n   * Defines the items of the component. Tree items may have other tree items as children.\n   *\n   * **Note:** Use `TreeItem` for the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the component header.\n   *\n   * **Note:** When the `header` slot is set, the `headerText` property is ignored.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"header\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--page).\n   */\n  header?: UI5WCSlotsNode | UI5WCSlotsNode[];\n  /**\n   * Fired when a tree item is activated.\n   */\n  onItemClick?: (event: Ui5CustomEvent<TreeDomRef, { item: HTMLElement }>) => void;\n  /**\n   * Fired when the Delete button of any tree item is pressed.\n   *\n   * **Note:** A Delete button is displayed on each item, when the component `mode` property is set to `Delete`.\n   */\n  onItemDelete?: (event: Ui5CustomEvent<TreeDomRef, { item: HTMLElement }>) => void;\n  /**\n   * Fired when the mouse cursor leaves the tree item borders.\n   */\n  onItemMouseout?: (event: Ui5CustomEvent<TreeDomRef, { item: HTMLElement }>) => void;\n  /**\n   * Fired when the mouse cursor enters the tree item borders.\n   */\n  onItemMouseover?: (event: Ui5CustomEvent<TreeDomRef, { item: HTMLElement }>) => void;\n  /**\n   * Fired when a tree item is expanded or collapsed. _Note:_ You can call `preventDefault()` on the event object to suppress the event, if needed. This may be handy for example if you want to dynamically load tree items upon the user expanding a node. Even if you prevented the event's default behavior, you can always manually call `toggle()` on a tree item.\n   */\n  onItemToggle?: (event: Ui5CustomEvent<TreeDomRef, { item: HTMLElement }>) => void;\n  /**\n   * Fired when selection is changed by user interaction in `SingleSelect`, `SingleSelectBegin`, `SingleSelectEnd` and `MultiSelect` modes.\n   */\n  onSelectionChange?: (\n    event: Ui5CustomEvent<\n      TreeDomRef,\n      { selectedItems: unknown[]; previouslySelectedItems: unknown[]; targetItem: HTMLElement }\n    >\n  ) => void;\n}\n\n/**\n * The `Tree` component provides a tree structure for displaying data in a hierarchy.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Tree\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst Tree = withWebComponent<TreePropTypes, TreeDomRef>(\n  'ui5-tree',\n  ['accessibleName', 'accessibleNameRef', 'footerText', 'headerText', 'mode', 'noDataText'],\n  [],\n  ['header'],\n  ['item-click', 'item-delete', 'item-mouseout', 'item-mouseover', 'item-toggle', 'selection-change'],\n  () => import('@ui5/webcomponents/dist/Tree.js')\n);\n\nTree.displayName = 'Tree';\n\nTree.defaultProps = {\n  mode: ListMode.None\n};\n\nexport { Tree };\n","'use client';\n\nimport '@ui5/webcomponents/dist/TreeItem.js';\nimport { ReactNode } from 'react';\nimport { ValueState, ListItemType } from '../../enums';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { Ui5CustomEvent } from '../../interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '../../interfaces/Ui5DomRef';\nimport { withWebComponent } from '../../internal/withWebComponent';\nimport { UI5WCSlotsNode } from '../../types';\n\ninterface TreeItemAttributes {\n  /**\n   * Defines the `additionalText`, displayed in the end of the tree item.\n   */\n  additionalText?: string;\n  /**\n   * Defines the state of the `additionalText`.\n   * Available options are: `\"None\"` (by default), `\"Success\"`, `\"Warning\"`, `\"Information\"` and `\"Error\"`.\n   */\n  additionalTextState?: ValueState | keyof typeof ValueState;\n  /**\n   * Defines the text of the tree item.\n   */\n  text?: string;\n  /**\n   * Defines the accessible name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines whether the tree list item will show a collapse or expand icon inside its toggle button.\n   */\n  expanded?: boolean;\n  /**\n   * Defines whether the tree node has children, even if currently no other tree nodes are slotted inside.\n   * _Note:_ This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons. Set this to `true` for nodes you intend to load lazily, when the user clicks the expand button. It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n   */\n  hasChildren?: boolean;\n  /**\n   * If set, an icon will be displayed before the text of the tree list item.\n   */\n  icon?: string;\n  /**\n   * Defines whether the selection of a tree node is displayed as partially selected.\n   *\n   * **Note:** The indeterminate state can be set only programmatically and can’t be achieved by user interaction, meaning that the resulting visual state depends on the values of the `indeterminate` and `selected` properties:\n   *\n   * *   If a tree node has both `selected` and `indeterminate` set to `true`, it is displayed as partially selected.\n   * *   If a tree node has `selected` set to `true` and `indeterminate` set to `false`, it is displayed as selected.\n   * *   If a tree node has `selected` set to `false`, it is displayed as not selected regardless of the value of the `indeterminate` property.\n   *\n   *\n   * **Note:** This property takes effect only when the `Tree` is in `MultiSelect` mode.\n   */\n  indeterminate?: boolean;\n  /**\n   * The navigated state of the list item. If set to `true`, a navigation indicator is displayed at the end of the list item.\n   */\n  navigated?: boolean;\n  /**\n   * Defines the visual indication and behavior of the list items. Available options are `Active` (by default), `Inactive`, `Detail` and `Navigation`.\n   *\n   * **Note:** When set to `Active` or `Navigation`, the item will provide visual response upon press and hover, while with type `Inactive` and `Detail` - will not.\n   */\n  type?: ListItemType | keyof typeof ListItemType;\n  /**\n   * Defines the selected state of the `ListItem`.\n   */\n  selected?: boolean;\n}\n\nexport interface TreeItemDomRef extends TreeItemAttributes, Ui5DomRef {\n  /**\n   * Call this method to manually switch the `expanded` state of a tree item.\n   */\n  toggle: () => void;\n}\n\nexport interface TreeItemPropTypes extends TreeItemAttributes, CommonProps {\n  /**\n   * Defines the items of the component.\n   *\n   * **Note:** Use `TreeItem` or `TreeItemCustom`\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the delete button, displayed in \"Delete\" mode. **Note:** While the slot allows custom buttons, to match design guidelines, please use the `Button` component. **Note:** When the slot is not present, a built-in delete button will be displayed.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"deleteButton\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--page).\n   */\n  deleteButton?: UI5WCSlotsNode;\n  /**\n   * Fired when the user clicks on the detail button when type is `Detail`.\n   */\n  onDetailClick?: (event: Ui5CustomEvent<TreeItemDomRef>) => void;\n}\n\n/**\n * The `TreeItem` represents a node in a tree structure, shown as a `List`.\n * This is the item to use inside a `Tree`. You can represent an arbitrary tree structure by recursively nesting tree items.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Tree\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst TreeItem = withWebComponent<TreeItemPropTypes, TreeItemDomRef>(\n  'ui5-tree-item',\n  ['additionalText', 'additionalTextState', 'text', 'accessibleName', 'icon', 'type'],\n  ['expanded', 'hasChildren', 'indeterminate', 'navigated', 'selected'],\n  ['deleteButton'],\n  ['detail-click'],\n  () => import('@ui5/webcomponents/dist/TreeItem.js')\n);\n\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.defaultProps = {\n  additionalTextState: ValueState.None,\n  type: ListItemType.Active\n};\n\nexport { TreeItem };\n","'use client';\n\nimport '@ui5/webcomponents/dist/TreeItemCustom.js';\nimport { ReactNode } from 'react';\nimport { ValueState, ListItemType } from '../../enums';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { Ui5CustomEvent } from '../../interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '../../interfaces/Ui5DomRef';\nimport { withWebComponent } from '../../internal/withWebComponent';\nimport { UI5WCSlotsNode } from '../../types';\n\ninterface TreeItemCustomAttributes {\n  /**\n   * Defines whether the tree list item should display the selection element.\n   */\n  hideSelectionElement?: boolean;\n  /**\n   * Defines the accessible name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Defines the state of the `additionalText`.\n   * Available options are: `\"None\"` (by default), `\"Success\"`, `\"Warning\"`, `\"Information\"` and `\"Error\"`.\n   */\n  additionalTextState?: ValueState | keyof typeof ValueState;\n  /**\n   * Defines whether the tree list item will show a collapse or expand icon inside its toggle button.\n   */\n  expanded?: boolean;\n  /**\n   * Defines whether the tree node has children, even if currently no other tree nodes are slotted inside.\n   * _Note:_ This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons. Set this to `true` for nodes you intend to load lazily, when the user clicks the expand button. It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n   */\n  hasChildren?: boolean;\n  /**\n   * If set, an icon will be displayed before the text of the tree list item.\n   */\n  icon?: string;\n  /**\n   * Defines whether the selection of a tree node is displayed as partially selected.\n   *\n   * **Note:** The indeterminate state can be set only programmatically and can’t be achieved by user interaction, meaning that the resulting visual state depends on the values of the `indeterminate` and `selected` properties:\n   *\n   * *   If a tree node has both `selected` and `indeterminate` set to `true`, it is displayed as partially selected.\n   * *   If a tree node has `selected` set to `true` and `indeterminate` set to `false`, it is displayed as selected.\n   * *   If a tree node has `selected` set to `false`, it is displayed as not selected regardless of the value of the `indeterminate` property.\n   *\n   *\n   * **Note:** This property takes effect only when the `Tree` is in `MultiSelect` mode.\n   */\n  indeterminate?: boolean;\n  /**\n   * The navigated state of the list item. If set to `true`, a navigation indicator is displayed at the end of the list item.\n   */\n  navigated?: boolean;\n  /**\n   * Defines the visual indication and behavior of the list items. Available options are `Active` (by default), `Inactive`, `Detail` and `Navigation`.\n   *\n   * **Note:** When set to `Active` or `Navigation`, the item will provide visual response upon press and hover, while with type `Inactive` and `Detail` - will not.\n   */\n  type?: ListItemType | keyof typeof ListItemType;\n  /**\n   * Defines the selected state of the `ListItem`.\n   */\n  selected?: boolean;\n}\n\nexport interface TreeItemCustomDomRef extends TreeItemCustomAttributes, Ui5DomRef {\n  /**\n   * Call this method to manually switch the `expanded` state of a tree item.\n   */\n  toggle: () => void;\n}\n\nexport interface TreeItemCustomPropTypes extends TreeItemCustomAttributes, CommonProps {\n  /**\n   * Defines the content of the `TreeItem`.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"content\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--page).\n   */\n  content?: UI5WCSlotsNode | UI5WCSlotsNode[];\n  /**\n   * Defines the items of the component.\n   *\n   * **Note:** Use `TreeItem` or `TreeItemCustom`\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the delete button, displayed in \"Delete\" mode. **Note:** While the slot allows custom buttons, to match design guidelines, please use the `Button` component. **Note:** When the slot is not present, a built-in delete button will be displayed.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"deleteButton\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--page).\n   */\n  deleteButton?: UI5WCSlotsNode;\n  /**\n   * Fired when the user clicks on the detail button when type is `Detail`.\n   */\n  onDetailClick?: (event: Ui5CustomEvent<TreeItemCustomDomRef>) => void;\n}\n\n/**\n * The `TreeItemCustom` represents a node in a tree structure, shown as a `List`.\n * This is the item to use inside a `Tree`. You can represent an arbitrary tree structure by recursively nesting tree items. You can use this item to put any custom content inside the tree item.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/Tree\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst TreeItemCustom = withWebComponent<TreeItemCustomPropTypes, TreeItemCustomDomRef>(\n  'ui5-tree-item-custom',\n  ['accessibleName', 'additionalTextState', 'icon', 'type'],\n  ['hideSelectionElement', 'expanded', 'hasChildren', 'indeterminate', 'navigated', 'selected'],\n  ['content', 'deleteButton'],\n  ['detail-click'],\n  () => import('@ui5/webcomponents/dist/TreeItemCustom.js')\n);\n\nTreeItemCustom.displayName = 'TreeItemCustom';\n\nTreeItemCustom.defaultProps = {\n  additionalTextState: ValueState.None,\n  type: ListItemType.Active\n};\n\nexport { TreeItemCustom };\n","export default \"## Usage\\n\\n### When to use:\\n\\n*   To display hierarchically structured items.\\n*   To select one or more items out of a set of hierarchically structured items.\\n\\n### When not to use:\\n\\n*   To display items not hierarchically strcutured. In this case, use the List component.\\n*   To select one item from a very small number of non-hierarchical items. Select or ComboBox might be more appropriate.\\n*   The hierarchy turns out to have only two levels. In this case, use List with group items.\\n\\n## Keyboard Handling\\n\\nThe `Tree` provides advanced keyboard handling. The user can use the following keyboard shortcuts in order to navigate trough the tree:\\n\\n*   \\\\[UP/DOWN\\\\] - Navigates up and down the tree items that are currently visible.\\n*   \\\\[RIGHT\\\\] - Drills down the tree by expanding the tree nodes.\\n*   \\\\[LEFT\\\\] - Goes up the tree and collapses the tree nodes.\\n\\n  \\nThe user can use the following keyboard shortcuts to perform selection, when the `mode` property is in use:\\n\\n*   \\\\[SPACE\\\\] - Selects the currently focused item upon keyup.\\n*   \\\\[ENTER\\\\] - Selects the currently focused item upon keydown.\"","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"copy\";\nconst pathData = \"M32 192l96-96h224q13 0 22.5 9t9.5 23v352q0 14-9 23t-23 9H65q-14 0-23.5-9T32 480V192zm320 288V128H160v64q0 14-9.5 23t-23.5 9H65v256h287zM159 64l65-64h224q12 0 22 9t10 23v352q0 14-9 23t-23 9h-32v-32h32V32H256v32h-97zm-15 256h128q16 0 16 16 0 6-4.5 11t-11.5 5H144q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5zm-16 80q0-7 5-11.5t11-4.5h128q16 0 16 16 0 6-4.5 11t-11.5 5H144q-6 0-11-5t-5-11z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/copy\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"copy\";\nconst pathData = \"M409.5 103q33 0 55 22.5t22 54.5v256q0 32-22 54t-55 22h-204q-33 0-55-22t-22-54V180q0-32 22-54.5t55-22.5h204zm26 77q0-11-7.5-18.5t-18.5-7.5h-204q-12 0-19 7.5t-7 18.5v256q0 25 26 25h204q11 0 18.5-7t7.5-18V180zm-77 179q11 0 18.5 7t7.5 18q0 12-7.5 19t-18.5 7h-102q-26 0-26-26 0-25 26-25h102zm0-77q11 0 18.5 7t7.5 19q0 11-7.5 18t-18.5 7h-102q-26 0-26-25 0-26 26-26h102zm26-255q0 11-7.5 18t-18.5 7h-256q-25 0-25 26v306q0 26-26 26-25 0-25-26V78q0-33 22-55t54-22h256q11 0 18.5 7t7.5 19z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/copy\";\nexport { pathData, ltr, accData };","import { isThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/copy.js\";\nimport { pathData as pathDatav5 } from \"./v5/copy.js\";\n\nconst pathData = isThemeFamily(\"sap_horizon\") ? pathDatav5 : pathDatav4;\n\nexport default \"copy\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"paste\";\nconst pathData = \"M192 224q0-14 9-23t23-9h224q13 0 22.5 9t9.5 23v256q0 13-9.5 22.5T448 512H224q-14 0-23-9.5t-9-22.5V224zm32 256h224V224H224v256zM32 96q0-14 9.5-23T65 64h65q11-28 38-32 8-14 23-23t33-9q17 0 32 9t23 23q27 4 38 32h67q13 0 22 9t9 23v64h-31V96h-68q-5 12-12.5 22T281 128H166q-15 0-22.5-10T131 96H65v384h95v32H65q-14 0-23.5-9.5T32 480V96zm143 0h96q7 0 11.5-5t4.5-11q0-16-16-16h-15q0-14-9.5-23T224 32q-14 0-23 9t-9 23h-17q-6 0-11 4.5T159 80q0 6 5 11t11 5zm97 224h128q16 0 16 16 0 6-4.5 11t-11.5 5H272q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5zm0 63h128q16 0 16 16 0 6-4.5 11t-11.5 5H272q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/paste\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"paste\";\nconst pathData = \"M427 244q11 0 17.5 6.5T451 268v219q0 11-6.5 17.5T427 511H232q-24 0-24-24V268q0-24 24-24h195zm-25 48H256v171h146V292zm-97 73q-24 0-24-24t24-24h49q11 0 17.5 6.5T378 341t-6.5 17.5T354 365h-49zm0 73q-24 0-24-24t24-24h49q11 0 17.5 6.5T378 414t-6.5 17.5T354 438h-49zm49-316q0 24-25 24H183q-11 0-17.5-6.5T159 122V98h-49v340h25q11 0 17.5 7t6.5 18-6.5 17.5T135 487H86q-11 0-17.5-6.5T62 463V73q0-11 6.5-17.5T86 49h73V25q0-11 6.5-18T183 0h146q25 0 25 25v97zm-49-73h-97v49h97V49z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/paste\";\nexport { pathData, ltr, accData };","import { isThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/paste.js\";\nimport { pathData as pathDatav5 } from \"./v5/paste.js\";\n\nconst pathData = isThemeFamily(\"sap_horizon\") ? pathDatav5 : pathDatav4;\n\nexport default \"paste\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"download-from-cloud\";\nconst pathData = \"M493.037 211.587q17.965 22.955 17.965 55.89 0 17.965-6.986 30.94-2.995 7.985-7.985 14.97l-9.98 13.974q-5.989 6.986-10.48 9.98t-12.475 5.988q-18.963 7.985-33.934 7.985h-13.973v-31.938h13.973q6.986 0 21.957-4.99 4.99-1.996 6.487-2.994t4.491-3.992q3.993-4.99 6.987-9.98t4.99-9.981l1.996-3.993q2.994-5.988 2.994-15.968 0-23.954-10.978-35.93-8.983-11.977-29.942-17.965l-40.92-10.979 21.957-35.93q3.992-6.986 3.992-17.964 0-24.952-16.966-40.92-15.97-15.97-41.919-15.97-20.959 0-35.93 11.977l-32.935 28.944-16.967-39.922q-12.975-27.946-36.928-43.915-22.955-16.966-57.887-16.966-12.974 0-31.937 7.984-16.967 7.984-33.934 22.955-10.979 9.98-20.96 30.94-6.985 13.972-6.985 34.932 0 18.963 8.982 33.933l21.957 36.928-41.918 9.98q-21.957 5.989-32.936 19.962l-.998.998v.998q-12.974 14.97-12.974 35.93 0 8.982 4.99 18.963.998 1.996 4.99 7.984t16.967 16.967q1.996 1.996 12.975 4.99t39.922 2.994v31.938q-22.955 0-42.917-2.994t-30.94-12.975q-23.952-20.959-30.939-35.93T0 267.478q0-34.932 20.96-57.887 18.962-22.956 49.902-30.94-12.975-21.957-12.975-49.902 0-28.944 9.98-48.905 10.979-23.953 27.946-40.92 17.965-16.967 41.918-27.945T183.641 0q44.913 0 75.852 21.957 31.938 21.957 47.907 57.887 22.955-19.961 56.888-19.961 38.924 0 63.876 24.951 26.947 25.95 26.947 63.876 0 18.963-8.982 33.933 27.945 6.987 46.908 28.944zM279.454 502.019Q269.474 512 256.5 512t-21.957-9.98L132.74 401.215q-11.977-11.976 0-22.955 4.99-4.99 10.978-4.99t10.979 4.99l84.834 84.835V192.624q0-15.969 15.969-15.969t15.969 15.969v272.468l86.83-86.83q10.979-10.98 22.955 0 10.979 10.978 0 22.954z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v4\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v4/download-from-cloud\";\nexport { pathData, ltr, accData };","import { registerIcon } from \"@ui5/webcomponents-base/dist/asset-registries/Icons.js\";\n\nconst name = \"download-from-cloud\";\nconst pathData = \"M491 267q9 0 15 5.5t6 15.5q0 26-10 49.5t-27.5 41-41 27.5-49.5 10H107q-22 0-41.5-8.5T32 385 9.5 351 1 309q0-45 30.5-75.5T107 203h2q4-27 17-50.5t32.5-41 44.5-27 53-9.5q10 0 16 6t6 15q0 22-30 22-19 0-37 8t-31.5 21.5-21.5 31-8 36.5q0 17-6 23.5t-15 6.5h-22q-27 0-45.5 18.5T43 309t18.5 45.5T107 373h277q18 0 33.5-6.5t27-17.5 18-25.5T469 294q0-27 22-27zm-207-49q-6-8-6-15 0-9 6-15t15-6 15 6l28 28V54q0-21 21-21t21 21v162l28-28q6-6 15-6 8 0 15 6 6 6 6 15 0 7-6 15l-62 61q-7 9-17 9-12 0-17-9z\";\nconst ltr = false;\nconst accData = null;\nconst collection = \"SAP-icons-v5\";\nconst packageName = \"@ui5/webcomponents-icons\";\n\nregisterIcon(name, { pathData, ltr, collection, packageName });\n\nexport default \"SAP-icons-v5/download-from-cloud\";\nexport { pathData, ltr, accData };","import { isThemeFamily } from \"@ui5/webcomponents-base/dist/config/Theme.js\";\nimport { pathData as pathDatav4, ltr, accData } from \"./v4/download-from-cloud.js\";\nimport { pathData as pathDatav5 } from \"./v5/download-from-cloud.js\";\n\nconst pathData = isThemeFamily(\"sap_horizon\") ? pathDatav5 : pathDatav4;\n\nexport default \"download-from-cloud\";\nexport { pathData, ltr, accData };","export default \"The `TreeItem` represents a node in a tree structure, shown as a `List`.  \\nThis is the item to use inside a `Tree`. You can represent an arbitrary tree structure by recursively nesting tree items.\\n\\n### CSS Shadow Parts\\n\\n<ui5-link target=\\\"_blank\\\" href=\\\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\\\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.  \\nThe `TreeItem` exposes the following CSS Shadow Parts:\\n\\n- title - Used to style the title of the tree list item\\n- additionalText - Used to style the additionalText of the tree list item\\n- icon - Used to style the icon of the tree list item\\n\"","export default \"The `TreeItemCustom` represents a node in a tree structure, shown as a `List`.  \\nThis is the item to use inside a `Tree`. You can represent an arbitrary tree structure by recursively nesting tree items. You can use this item to put any custom content inside the tree item.\\n\\n### CSS Shadow Parts\\n\\n<ui5-link target=\\\"_blank\\\" href=\\\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\\\">CSS Shadow Parts</ui5-link> allow developers to style elements inside the Shadow DOM.  \\nThe `TreeItemCustom` exposes the following CSS Shadow Parts:\\n\\n- title - Used to style the title of the tree list item\\n- additionalText - Used to style the additionalText of the tree list item\\n- icon - Used to style the icon of the tree list item\\n\"","import { Canvas, Markdown, Meta, Story } from '@storybook/blocks';\nimport { Tree } from './index';\nimport { BusyIndicator } from '../BusyIndicator';\nimport { TreeItem } from '../TreeItem';\nimport { ListMode } from '../../enums/ListMode';\nimport { ArgsTableWithNote, DocsHeader, DomRefTable, Footer } from '@sb/components';\nimport Description from './TreeDescription.md?raw';\nimport copyIcon from '@ui5/webcomponents-icons/dist/copy.js';\nimport pasteIcon from '@ui5/webcomponents-icons/dist/paste.js';\nimport wrenchIcon from '@ui5/webcomponents-icons/dist/wrench.js';\nimport sunIcon from '@ui5/webcomponents-icons/dist/general-leave-request.js';\nimport dlCloutIcon from '@ui5/webcomponents-icons/dist/download-from-cloud.js';\nimport { useState } from 'react';\nimport { ValueState } from '../../enums';\nimport SubcomponentsSection from '@sb/docs/SubcomponentsSection.md?raw';\nimport TreeItemDescription from '../TreeItem/TreeItemDescription.md?raw';\nimport TreeItemCustomDescription from '../TreeItemCustom/TreeItemCustomDescription.md?raw';\nimport TreeDomRef from './TreeDomRef.json';\nimport { TreeItemCustom } from '../TreeItemCustom';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Text } from '../../components/Text';\n\n<Meta\n  title=\"Data Display / Tree\"\n  component={Tree}\n  subcomponents={{ TreeItem, TreeItemCustom }}\n  argTypes={{\n    children: { control: { disable: true } },\n    header: { control: { disable: true } }\n  }}\n  args={{\n    mode: ListMode.None\n  }}\n/>\n\n<DocsHeader since=\"0.10.0\" />\n\n<br />\n\n## Example\n\n<Canvas>\n  <Story name=\"Default\">\n    {(args) => {\n      return (\n        <Tree {...args}>\n          <TreeItem expanded text=\"Tree 1\" icon={pasteIcon} selected>\n            <TreeItem expanded text=\"Tree 1.1\" selected>\n              <TreeItem text=\"Tree 1.1.1\" />\n              <TreeItem text=\"Tree 1.1.2\" />\n            </TreeItem>\n          </TreeItem>\n          <TreeItem text=\"Tree 2\" icon={copyIcon}>\n            <TreeItem text=\"Tree 2.1\">\n              <TreeItem text=\"Tree 2.1.1\" />\n              <TreeItem text=\"Tree 2.1.2\">\n                <TreeItem text=\"Tree 2.1.2.1\" />\n                <TreeItem text=\"Tree 2.1.2.2\" />\n                <TreeItem text=\"Tree 2.1.2.3\" />\n                <TreeItem text=\"Tree 2.1.2.5\" />\n              </TreeItem>\n            </TreeItem>\n            <TreeItem text=\"Tree 2.2\" />\n          </TreeItem>\n          <TreeItem text=\"Tree 3 (no icon)\" />\n          <TreeItemCustom\n            content={\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <Icon name={sunIcon} style={{ marginInlineEnd: '2rem' }} />\n                <Text>I'm a fully customizable TreeItemCustom!</Text>\n                <Button>Btn</Button>\n                <Icon name={sunIcon} style={{ marginInlineStart: '2rem' }} />\n              </div>\n            }\n          />\n        </Tree>\n      );\n    }}\n  </Story>\n</Canvas>\n\n## Properties\n\n<ArgsTableWithNote story=\"Default\" />\n\n<Markdown>{Description}</Markdown>\n\n<DomRefTable rows={TreeDomRef} />\n\n# More Examples\n\n<br />\n\n## Tree with customizable (standard) TreeItem\n\nThis is the item to use inside a <code>Tree</code>. You can represent an arbitrary tree structure by recursively nesting\ntree items.\n\n<Canvas>\n  <Story\n    name=\"with customizable TreeItem\"\n    args={{\n      expanded: true,\n      hasChildren: true,\n      icon: { wrenchIcon },\n      selected: false,\n      text: 'Customizable TreeItem',\n      additionalText: 'Additional Text',\n      additionalTextState: ValueState.None,\n      indeterminate: false\n    }}\n    argTypes={{\n      expanded: {\n        description: `Defines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.`\n      },\n      hasChildren: {\n        description: `Defines whether the tree node has children, even if currently no other tree nodes are slotted inside. <br> <i>Note:</i> This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons. Set this to <code>true</code> for nodes you intend to load lazily, when the user clicks the expand button. It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.`\n      },\n      icon: { description: `If set, an icon will be displayed before the text, representing the tree item.` },\n      selected: {\n        description: `Defines whether the tree node is selected by the user. Only has effect if the <code>Tree</code> is in one of the following modes: in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code>.`\n      },\n      additionalText: { description: `Defines the \\`additionalText\\`, displayed in the end of the tree item.` },\n      additionalTextState: {\n        description: `Defines the state of the \\`additionalText\\`.\\n\\nAvailable options are: \\`\"None\"\\` (by default), \\`\"Success\"\\`, \\`\"Warning\"\\`, \\`\"Information\"\\` and \\`\"Erorr\"\\`.`,\n        control: { type: 'select', options: ValueState }\n      },\n      text: { description: `Defines the text of the tree item.` },\n      children: { description: `Defines the items of this <code>TreeItem</code>.` },\n      indeterminate: {\n        description: `Defines whether the selection of a tree node is displayed as partially selected.\\n\\n**Note:** The indeterminate state can be set only programatically and can’t be achieved by user interaction, meaning that the resulting visual state depends on the values of the \\`indeterminate\\` and \\`selected\\` properties: \\n* If a tree node has both \\`selected\\` and \\`indeterminate\\` set to \\`true\\`, it is displayed as partially selected.\\n*   If a tree node has \\`selected\\` set to \\`true\\` and \\`indeterminate\\` set to \\`false\\`, it is displayed as selected.\\n*   If a tree node has \\`selected\\` set to \\`false\\`, it is displayed as not selected regardless of the value of the \\`indeterminate\\` property.\\n\\n**Note:** This property takes effect only when the \\`Tree\\` is in \\`MultiSelect\\` mode.`\n      },\n      footerText: { table: { disable: true } },\n      headerText: { table: { disable: true } },\n      mode: { table: { disable: true } },\n      noDataText: { table: { disable: true } },\n      header: { table: { disable: true } },\n      onItemClick: { table: { disable: true } },\n      onItemDelete: { table: { disable: true } },\n      onItemToggle: { table: { disable: true } },\n      onSelectionChange: { table: { disable: true } },\n      onItemMouseout: { table: { disable: true } },\n      className: { table: { disable: true } },\n      style: { table: { disable: true } },\n      onItemMouseover: { table: { disable: true } }\n    }}\n  >\n    {(args) => {\n      return (\n        <Tree>\n          <TreeItem {...args}>\n            <TreeItem expanded text=\"Tree 1.1\" selected>\n              <TreeItem text=\"Tree 1.1.1\" />\n              <TreeItem text=\"Tree 1.1.2\" />\n            </TreeItem>\n          </TreeItem>\n        </Tree>\n      );\n    }}\n  </Story>\n</Canvas>\n\n<ArgsTableWithNote\n  story=\"with customizable TreeItem\"\n  noteText={`The props in the table below are part of the \"TreeItem\" component and not of the \"Tree\".`}\n/>\n\n<br />\n\n## Lazy Load TreeItems\n\n<Canvas>\n  <Story name=\"Lazy Loading\">\n    {(args) => {\n      const [lazyChildren, setLazyChildren] = useState(null);\n      const [loading, setLoading] = useState(false);\n      const handleItemToggle = (e) => {\n        if (e.detail.item.dataset.id === 'lazychildren' && !lazyChildren) {\n          e.preventDefault();\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n            setLazyChildren(\n              <>\n                <TreeItem text=\"Tree 3.1\" />\n                <TreeItem text=\"Tree 3.2\" />\n              </>\n            );\n            e.detail.item.toggle();\n          }, 3000);\n        }\n      };\n      return (\n        <BusyIndicator active={loading} style={{ width: '100%' }}>\n          <Tree {...args} onItemToggle={handleItemToggle}>\n            <TreeItem text=\"Has pre-loaded children\">\n              <TreeItem text=\"Tree 1.1\" />\n              <TreeItem text=\"Tree 1.2\" />\n            </TreeItem>\n            <TreeItem text=\"Has no children\" />\n            <TreeItem text=\"Has children but not yet loaded\" hasChildren icon={dlCloutIcon} data-id=\"lazychildren\">\n              {lazyChildren}\n            </TreeItem>\n          </Tree>\n        </BusyIndicator>\n      );\n    }}\n  </Story>\n</Canvas>\n\n### Code\n\n```jsx\nconst LazyLoadingTree = () => {\n  const [lazyChildren, setLazyChildren] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleItemToggle = (e) => {\n    if (e.detail.item.dataset.id === 'lazychildren' && !lazyChildren) {\n      e.preventDefault();\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false);\n        setLazyChildren(\n          <>\n            <TreeItem text=\"Tree 3.1\" />\n            <TreeItem text=\"Tree 3.2\" />\n          </>\n        );\n        e.detail.item.toggle();\n      }, 3000);\n    }\n  };\n  return (\n    <BusyIndicator active={loading} style={{ width: '100%' }}>\n      <Tree onItemToggle={handleItemToggle}>\n        <TreeItem text=\"Has pre-loaded children\">\n          <TreeItem text=\"Tree 1.1\" />\n          <TreeItem text=\"Tree 1.2\" />\n        </TreeItem>\n        <TreeItem text=\"Has no children\" />\n        <TreeItem text=\"Has children but not yet loaded\" hasChildren icon={dlCloutIcon} data-id=\"lazychildren\">\n          {lazyChildren}\n        </TreeItem>\n      </Tree>\n    </BusyIndicator>\n  );\n};\n```\n\n<Markdown>{SubcomponentsSection}</Markdown>\n\n## TreeItem\n\n<Markdown>{TreeItemDescription}</Markdown>\n\n## TreeItemCustom\n\n<Markdown>{TreeItemCustomDescription}</Markdown>\n\n<Footer />\n"],"names":["Tree","withWebComponent","__vitePreload","n","ListMode","TreeItem","ValueState","ListItemType","TreeItemCustom","Description","name","pathData","ltr","collection","packageName","registerIcon","isThemeFamily","copyIcon","pasteIcon","dlCloutIcon","TreeItemDescription","TreeItemCustomDescription","MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","DocsHeader","Canvas","Story","args","Icon","sunIcon","Text","Button","ArgsTableWithNote","Markdown","DomRefTable","TreeDomRef","wrenchIcon","lazyChildren","setLazyChildren","useState","loading","setLoading","BusyIndicator","e","SubcomponentsSection","Footer","defaultStory","withCustomizableTreeItem","lazyLoading","componentMeta","__namedExportsOrder"],"mappings":"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"}