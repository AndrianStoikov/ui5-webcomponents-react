import{j as o}from"./jsx-runtime-5926aa06.js";import{d as p}from"./DomRefTable.module-8f34a183.js";import{M as n,C as s}from"./chunk-PCJTTTQV-62f36a12.js";import"./index-ebeaab24.js";import{F as l}from"./Footer-d2d9ca2f.js";import{e as a}from"./AnalyticalTable.stories-e75cfb8a.js";import{u as m}from"./index-bda0bad7.js";import"./react-jss.esm-022ab528.js";import"./inheritsLoose-93e09647.js";import"./index-81c4f7c8.js";import"./iframe-0e5478f2.js";import"../sb-preview/runtime.js";import"./UI5Element-01913b1f.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./withWebComponent-7b9bd1ee.js";import"./utils-69f7a0e0.js";import"./useIsomorphicLayoutEffect-38a48652.js";import"./slot-76e48863.js";import"./Icon-0a4d58ef.js";import"./Icons-d46a51e9.js";import"./decline-1fd321dc.js";import"./i18n-defaults-80781f7e.js";import"./information-c8e84372.js";import"./class-map-6a9bd920.js";import"./Button-3960a0de.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./Device-99b8bbf4.js";import"./i18n-defaults-ac1c9dde.js";import"./index-562e1433.js";import"./clsx.m-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-cd9e7ac3.js";import"./index-41cc0703.js";import"./Integer-f7f172c9.js";import"./index-49bbaebe.js";import"./Avatar-0a66eae5.js";import"./ResizeHandler-edd29a36.js";import"./employee-a105984c.js";import"./index-3f04a494.js";import"./index-af3f90e9.js";import"./Link-daa8ef8a.js";import"./WrappingType-b81e595a.js";import"./react-18-3d03c2cf.js";import"./mapValues-0a776dd9.js";import"./_baseForOwn-800a0312.js";import"./index-9c09ad76.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./_getPrototype-593546d2.js";import"./_baseUniq-4c215180.js";import"./index-356e4a49.js";import"./index-ea625d40.js";import"./index-e705922c.js";import"./Label-a83eb715.js";import"./index-d49f54f4.js";import"./index-e3c1aaf5.js";import"./Popover-6ae302f4.js";import"./PopupUtils-4b9a91b6.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-d689758d.js";import"./FocusableElements-426d0dfa.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-0c64293c.js";import"./delete-c433582e.js";import"./ListItem-abf45448.js";import"./ListItemBase-b0580930.js";import"./ItemNavigation-0521282e.js";import"./TabbableElements-8e49b367.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-6bf4f6b5.js";import"./RadioButton-4257c8bc.js";import"./ValueState-2c5e5904.js";import"./CheckBox-caaa73da.js";import"./accept-132472e4.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-d59cc39f.js";import"./settings-3b96dde8.js";import"./i18n-defaults-d9fa5553.js";import"./I18nContext-cdb50611.js";import"./useIsomorphicId-4be7c5e3.js";import"./debounce-b93ea6a0.js";import"./index-99d317a4.js";import"./CssSizeVariables-cd649ef5.js";import"./CustomVariables-d3e297a0.js";import"./filter-dcaf8e1c.js";import"./group-2-3ac98e90.js";import"./index-a89243d7.js";import"./stopPropagation-da74d54e.js";import"./index-d495cfe7.js";import"./CustomListItem-0be83e50.js";import"./index-d49b51bf.js";import"./index-022cacf3.js";import"./StandardListItem-4970aa78.js";import"./ValueState-ab6838cc.js";import"./index-d2381bcd.js";import"./Input-6eb7f2f5.js";import"./Suggestions.css-0630882b.js";import"./ResponsivePopoverCommon.css-4e26f9b9.js";import"./ValueStateMessage.css-c26568b3.js";import"./navigation-down-arrow-70e2b28a.js";import"./navigation-right-arrow-1c66d072.js";import"./useCurrentTheme-0281f63d.js";import"./index-b2349760.js";import"./index-0a6848f1.js";import"./GlobalStyleClasses-7209358d.js";import"./index-55268306.js";import"./Title-d41046e1.js";import"./index-fe879c2d.js";import"./slim-arrow-down-d543dce5.js";import"./GroupHeaderListItem-cea3bb42.js";import"./Tokenizer-75168782.js";import"./ScrollEnablement-5e135290.js";import"./animate-1a16ba20.js";import"./ResponsivePopover-7f48ba13.js";import"./Dialog-1a1d34fb.js";import"./Token-ea84ea9c.js";import"./ToggleButton-4501e591.js";import"./ComboBoxItem-7aa3879b.js";import"./index-6cdb5576.js";import"./index-a0e7a5b1.js";import"./InvisibleMessage-e5379970.js";import"./index-8da61512.js";import"./index-d0480a5b.js";function Di(t={}){const{wrapper:r}=Object.assign({},m(),t.components);return r?o.jsx(r,Object.assign({},t,{children:o.jsx(e,{})})):e();function e(){const i=Object.assign({h1:"h1",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre"},m(),t.components);return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin: useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(p,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(s,{sourceState:"none",of:a}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = (e) => {
    console.log(e.columnWidth, e.header);
  };
  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={[
        AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
          liveUpdate: false,
          wait: 100
        })
      ]}
    />
  );
};
`})}),`
`,o.jsx(l,{})]})}}export{Di as default};
//# sourceMappingURL=PluginOnColumnResize-7729e42e.js.map
