{"version":3,"file":"VariantManagement.stories-8b4336e3.js","sources":["../../packages/main/src/components/VariantManagement/CodeGen.tsx","../../packages/main/src/components/VariantManagement/VariantManagement.stories.mdx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { ValueState } from '../../enums';\nimport { VariantManagement } from './index';\nimport { VariantItem } from './VariantItem';\n\nexport const VariantManagementWithCustomValidation = ({ selectedByIndex = 1 }) => {\n  const [valueStateSaveView, setValueStateSaveView] = useState(undefined);\n  const [customSaveViewVariantText, setCustomSaveViewVariantText] = useState(\n    'Only alphanumeric chars in Save View input'\n  );\n  const [valueStateManageViews, setValueStateManageViews] = useState(undefined);\n  const [customManageViewsVariantText, setCustomManageViewsVariantText] = useState('Max 12 chars');\n\n  const handleSaveViewInput = (e) => {\n    // only allow alphanumeric and space characters\n    if (!e.target.value.match(/^[a-z0-9\\s]+$/i)) {\n      // mark variant as invalid (prevent internal logic from being applied)\n      e.isInvalid = true;\n      setValueStateSaveView(ValueState.Error);\n    } else {\n      // mark variant as valid again\n      e.isInvalid = false;\n      setValueStateSaveView(undefined);\n    }\n  };\n  const handleSaveAs = (e) => {\n    setCustomSaveViewVariantText(e.detail.children);\n  };\n\n  const handleManageViewInput = (e) => {\n    // only 12 or fewer characters\n    if (e.target.value.length > 12) {\n      // mark variant as invalid (prevent internal logic from being applied)\n      e.isInvalid = true;\n      setValueStateManageViews(ValueState.Error);\n    } else {\n      // mark variant as valid again\n      e.isInvalid = false;\n      setValueStateManageViews(undefined);\n    }\n  };\n  const handleSaveManageViews = (e) => {\n    // if is custom manage view variant and is not in error state, set children to new value\n    const isCustomManageViewsItem = e.detail.updatedVariants.find((item) => item['data-custom-manage-views']);\n    if (!valueStateManageViews && isCustomManageViewsItem) {\n      setCustomManageViewsVariantText(isCustomManageViewsItem.children);\n    }\n  };\n  return (\n    <VariantManagement onSaveAs={handleSaveAs} onSaveManageViews={handleSaveManageViews}>\n      <VariantItem\n        data-custom-save-view\n        selected={selectedByIndex === 0}\n        saveViewInputProps={{\n          valueState: valueStateSaveView,\n          valueStateMessage: valueStateSaveView ? (\n            <div>Only alphanumeric and space characters allowed!</div>\n          ) : undefined,\n          onInput: handleSaveViewInput,\n          'data-testid': 'alphanumeric'\n        }}\n      >\n        {customSaveViewVariantText}\n      </VariantItem>\n      <VariantItem\n        data-custom-manage-views\n        selected={selectedByIndex === 1}\n        manageViewsInputProps={{\n          valueState: valueStateManageViews,\n          valueStateMessage: valueStateManageViews ? <div>No more than 12 characters allowed!</div> : undefined,\n          onInput: handleManageViewInput,\n          'data-testid': '12chars'\n        }}\n      >\n        {customManageViewsVariantText}\n      </VariantItem>\n    </VariantManagement>\n  );\n};\n","import { ArgsTableWithNote, DocsHeader, Footer } from '@sb/components';\nimport { Canvas, Meta, Story } from '@storybook/addon-docs';\nimport { PopoverPlacementType } from '../../enums/PopoverPlacementType';\nimport { TitleLevel } from '../../enums/TitleLevel';\nimport { VariantManagement } from './index';\nimport { VariantItem } from './VariantItem';\nimport { VariantManagementWithCustomValidation } from './CodeGen';\nimport { MessageStrip } from '../../webComponents';\n\n<Meta\n  title=\"Inputs / VariantManagement\"\n  component={VariantManagement}\n  subcomponents={{ VariantItem }}\n  args={{\n    placement: PopoverPlacementType.Bottom,\n    level: TitleLevel.H4\n  }}\n/>\n\n<DocsHeader />\n\n<br />\n\n## Example\n\n<Canvas>\n  <Story name=\"Default\">\n    {(props) => {\n      return (\n        <VariantManagement {...props}>\n          <VariantItem inputProps={{ valueState: 'Error', onInput: console.log }}>Default VariantItem</VariantItem>\n          <VariantItem selected>Selected</VariantItem>\n          <VariantItem author=\"SAP\">Author</VariantItem>\n          <VariantItem favorite>Favorite</VariantItem>\n          <VariantItem isDefault>IsDefault</VariantItem>\n          <VariantItem favorite labelReadOnly>\n            Favorite & labelReadOnly\n          </VariantItem>\n          <VariantItem applyAutomatically>ApplyAutomatically</VariantItem>\n          <VariantItem readOnly>ReadOnly</VariantItem>\n          <VariantItem global>Global</VariantItem>\n          <VariantItem global readOnly>\n            Global & readOnly\n          </VariantItem>\n          <VariantItem global>{`Not deletable -> global`}</VariantItem>\n          <VariantItem hideDelete>{`Not deletable -> hideDelete`}</VariantItem>\n          <VariantItem hideDelete={false} global>\n            {`Deletable -> hideDelete: false, global: true`}\n          </VariantItem>\n        </VariantManagement>\n      );\n    }}\n  </Story>\n</Canvas>\n\n## Properties\n\n<ArgsTableWithNote story=\"Default\" />\n\n# More Examples\n\n## VariantManagement with custom Input\n\nYou can customize the inputs inside the configuration dialogs (\"Save View\" and \"Manage Views\") by leveraging the corresponding `inputProps` prop (`saveViewInputProps` and `manageViewsInputProps`) of the `VariantItem` component.\nThese props accept props of the `Input` component with which you are able to overwrite internal implementations. E.g. `valueState` and `valueState` message.\n\n**Note:** To prevent internal logic from being executed on save click, you can mark the `onInput` event of the corresponding `Input` component as invalid by setting `event.isInvalid = true` inside the respective handler.\n\n<MessageStrip hideCloseButton>It is possible to overwrite internally used props. Please use with caution!</MessageStrip>\n\n<Canvas>\n  <Story name=\"with custom validation\" withSource=\"none\">\n    {(props) => {\n      return <VariantManagementWithCustomValidation {...props} />;\n    }}\n  </Story>\n</Canvas>\n\n### Code\n\n<details style={{marginBlockEnd: \"2rem\"}}>\n\n<summary>Show Code</summary>\n\n```jsx\nexport const VariantManagementWithCustomValidation = () => {\n  const [valueStateSaveView, setValueStateSaveView] = useState(undefined);\n  const [customSaveViewVariantText, setCustomSaveViewVariantText] = useState(\n    'Only alphanumeric chars in Save View input'\n  );\n  const [valueStateManageViews, setValueStateManageViews] = useState(undefined);\n  const [customManageViewsVariantText, setCustomManageViewsVariantText] = useState('Max 12 chars');\n\n  const handleSaveViewInput = (e) => {\n    // only allow alphanumeric and space characters\n    if (!e.target.value.match(/^[a-z0-9\\s]+$/i)) {\n      // mark variant as invalid (prevent internal logic from being applied)\n      e.isInvalid = true;\n      setValueStateSaveView(ValueState.Error);\n    } else {\n      // mark variant as valid again\n      e.isInvalid = false;\n      setValueStateSaveView(undefined);\n    }\n  };\n  const handleSaveAs = (e) => {\n    setCustomSaveViewVariantText(e.detail.children);\n  };\n\n  const handleManageViewInput = (e) => {\n    // only 12 or fewer characters\n    if (e.target.value.length > 12) {\n      // mark variant as invalid (prevent internal logic from being applied)\n      e.isInvalid = true;\n      setValueStateManageViews(ValueState.Error);\n    } else {\n      // mark variant as valid again\n      e.isInvalid = false;\n      setValueStateManageViews(undefined);\n    }\n  };\n  const handleSaveManageViews = (e) => {\n    // if is custom manage view variant and is not in error state, set children to new value\n    const isCustomManageViewsItem = e.detail.updatedVariants.find((item) => item['data-custom-manage-views']);\n    if (!valueStateManageViews && isCustomManageViewsItem) {\n      setCustomManageViewsVariantText(isCustomManageViewsItem.children);\n    }\n  };\n  return (\n    <VariantManagement onSaveAs={handleSaveAs} onSaveManageViews={handleSaveManageViews}>\n      <VariantItem\n        data-custom-save-view\n        saveViewInputProps={{\n          valueState: valueStateSaveView,\n          valueStateMessage: valueStateSaveView ? (\n            <div>Only alphanumeric and space characters allowed!</div>\n          ) : undefined,\n          onInput: handleSaveViewInput\n        }}\n      >\n        {customSaveViewVariantText}\n      </VariantItem>\n      <VariantItem\n        data-custom-manage-views\n        selected\n        manageViewsInputProps={{\n          valueState: valueStateManageViews,\n          valueStateMessage: valueStateManageViews ? <div>No more than 12 characters allowed!</div> : undefined,\n          onInput: handleManageViewInput\n        }}\n      >\n        {customManageViewsVariantText}\n      </VariantItem>\n    </VariantManagement>\n  );\n};\n```\n\n</details>\n\n<Footer />\n"],"names":["VariantManagementWithCustomValidation","selectedByIndex","valueStateSaveView","setValueStateSaveView","useState","customSaveViewVariantText","setCustomSaveViewVariantText","valueStateManageViews","setValueStateManageViews","customManageViewsVariantText","setCustomManageViewsVariantText","jsxs","VariantManagement","e","isCustomManageViewsItem","item","jsx","VariantItem","ValueState","MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","PopoverPlacementType","TitleLevel","DocsHeader","Canvas","Story","ArgsTableWithNote","MessageStrip","Footer","defaultStory","withCustomValidation","componentMeta","__namedExportsOrder"],"mappings":"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"}