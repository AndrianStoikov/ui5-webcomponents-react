import{M as c,C as d,f as u}from"./chunk-PCJTTTQV-b332e0bb.js";import{T as e}from"./index-12c0516d.js";import{B as m}from"./Button-c3cdbc47.js";import"./employee-397ee2c5.js";import{e as g}from"./DomRefTable.module-f9fa5af6.js";import{D as f}from"./DocsHeader-0c47c3d1.js";import{F as h}from"./Footer-87804c68.js";import{j as t}from"./jsx-runtime-5926aa06.js";import"./index-ebeaab24.js";import{D as x}from"./DomRefTable-a4c05d35.js";import{u as p}from"./index-bda0bad7.js";import"./iframe-8001a06d.js";import"../sb-preview/runtime.js";import"./react-18-3d03c2cf.js";import"./mapValues-0a776dd9.js";import"./_baseForOwn-800a0312.js";import"./index-9c09ad76.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./inheritsLoose-93e09647.js";import"./_getPrototype-593546d2.js";import"./_baseUniq-4c215180.js";import"./index-356e4a49.js";import"./ToggleButton-ee711be0.js";import"./withWebComponent-7b9bd1ee.js";import"./utils-69f7a0e0.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./useIsomorphicLayoutEffect-38a48652.js";import"./Icons-24533df9.js";import"./UI5Element-978c7ec7.js";import"./Device-99b8bbf4.js";import"./Icon-87626f33.js";import"./slot-76e48863.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./i18n-defaults-ac1c9dde.js";import"./react-jss.esm-022ab528.js";import"./index-2692ea53.js";import"./decline-2dc3f691.js";import"./i18n-defaults-80781f7e.js";import"./information-573ff8e0.js";import"./class-map-6a9bd920.js";import"./index-562e1433.js";import"./clsx.m-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-0421cb7d.js";import"./index-42008e49.js";import"./Integer-f7f172c9.js";import"./index-fbb3efce.js";import"./Avatar-02045306.js";import"./ResizeHandler-d96d99c4.js";import"./index-ca06b9a5.js";import"./index-eca7ea3e.js";import"./Link-a59da54b.js";import"./WrappingType-b81e595a.js";import"./index-b9e92427.js";import"./TableOfContent-e34a6ba5.js";import"./index-1632e114.js";import"./Label-3a4ee32a.js";import"./index-d4639950.js";import"./index-508f3274.js";import"./Popover-24cfcc49.js";import"./PopupUtils-7b496d9b.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-aca8c783.js";import"./FocusableElements-ba36fca8.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-0c64293c.js";const b=[{name:"accessibilityAttributes",visibility:"public",since:"1.2.0",type:"object",noattribute:"true",description:`An object of strings that defines several additional accessibility attribute values for customization depending on the use case.

It supports the following fields:

<ul> <li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> </li> <li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog</code></li> <li><code>Grid</code></li> <li><code>ListBox</code></li> <li><code>Menu</code></li> <li><code>Tree</code></li> </ul> </li> <li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li> </ul>`}];function j(o={}){const{wrapper:i}=Object.assign({},p(),o.components);return i?t.jsx(i,{...o,children:t.jsx(n,{})}):n();function n(){const s=Object.assign({h2:"h2"},p(),o.components);return t.jsxs(t.Fragment,{children:[t.jsx(c,{title:"Inputs / ToggleButton",component:e,argTypes:{children:{control:"text"}},args:{design:m.Default,icon:"employee",children:"ToggleButton Text"}}),`
`,t.jsx(f,{}),`
`,t.jsx("br",{}),`
`,t.jsx(s.h2,{id:"example",children:"Example"}),`
`,t.jsx(d,{children:t.jsx(u,{name:"Default",children:a=>t.jsx(e,{...a})})}),`
`,t.jsx(s.h2,{id:"properties",children:"Properties"}),`
`,t.jsx(g,{story:"Default"}),`
`,t.jsx(x,{rows:b}),`
`,t.jsx(h,{})]})}}const l=o=>t.jsx(e,{...o});l.storyName="Default";l.parameters={storySource:{source:`args => {
  return <ToggleButton {...args} />;
}`}};const r={title:"Inputs / ToggleButton",component:e,args:{design:m.Default,icon:"employee",children:"ToggleButton Text"},argTypes:{children:{control:"text"}},tags:["stories-mdx"],includeStories:["defaultStory"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:j};const Rt=["defaultStory"];export{Rt as __namedExportsOrder,r as default,l as defaultStory};
//# sourceMappingURL=ToggleButton.stories-06bbff13.js.map
