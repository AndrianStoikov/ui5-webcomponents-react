import{M as c,C as d,f as u}from"./chunk-PCJTTTQV-b0180856.js";import{T as e}from"./index-7937c484.js";import{a as m}from"./Button-3c41aad1.js";import"./employee-0153a597.js";import{d as g}from"./DomRefTable.module-2539c24a.js";import{D as f}from"./DocsHeader-9714759e.js";import{F as h}from"./Footer-56d98619.js";import{j as t}from"./jsx-runtime-b5ed1ca8.js";import"./index-64f120e9.js";import{D as x}from"./DomRefTable-65651b98.js";import{u as p}from"./index-de4e61b4.js";import"./iframe-6a31bc73.js";import"../sb-preview/runtime.mjs";import"./react-18-1e96cd1b.js";import"./mapValues-30a52a16.js";import"./_baseForOwn-931ad773.js";import"./index-7bf58b0a.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./inheritsLoose-93e09647.js";import"./_getPrototype-e1b46df2.js";import"./_baseUniq-5a3eb61c.js";import"./index-356e4a49.js";import"./ToggleButton-38bba196.js";import"./withWebComponent-d0e572fe.js";import"./utils-d29e59c7.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./useIsomorphicLayoutEffect-4a8db993.js";import"./Icons-5b18f7d2.js";import"./UI5Element-e8adceda.js";import"./Device-208919c6.js";import"./Icon-46afc304.js";import"./slot-76e48863.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./i18n-defaults-254d6b69.js";import"./chunk-R4NKYYJA-96bb58e6.js";import"./react-jss.esm-a429ae4e.js";import"./index-eed85d68.js";import"./decline-7cb41e3a.js";import"./i18n-defaults-80781f7e.js";import"./information-2c502181.js";import"./class-map-fc32fe45.js";import"./index-336951e7.js";import"./clsx.m-1229b3e0.js";import"./index-d460da36.js";import"./ThemingParameters-f4b4144e.js";import"./Import-f19a2ffd.js";import"./TableOfContent-18b07dd7.js";import"./index-25317c5d.js";import"./Link-20aa90b6.js";import"./WrappingType-b81e595a.js";import"./index-639f8eb3.js";import"./Label-51e2d33c.js";import"./index-e85c7628.js";import"./Popover-f0a3f494.js";import"./Integer-f7f172c9.js";import"./PopupUtils-6ec841a6.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-2a26d007.js";import"./FocusableElements-5012f8d0.js";import"./isElementHidden-01c07146.js";import"./BrowserScrollbar.css-e40faf20.js";import"./ResizeHandler-9d370fcd.js";import"./MediaRange-25b98f31.js";import"./style-map-02d033ae.js";const b=[{name:"accessibilityAttributes",visibility:"public",since:"1.2.0",type:"object",noattribute:"true",description:`An object of strings that defines several additional accessibility attribute values for customization depending on the use case.

It supports the following fields:

<ul> <li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> </li> <li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog</code></li> <li><code>Grid</code></li> <li><code>ListBox</code></li> <li><code>Menu</code></li> <li><code>Tree</code></li> </ul> </li> <li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li> </ul>`}];function j(o={}){const{wrapper:i}=Object.assign({},p(),o.components);return i?t.jsx(i,{...o,children:t.jsx(n,{})}):n();function n(){const s=Object.assign({h2:"h2"},p(),o.components);return t.jsxs(t.Fragment,{children:[t.jsx(c,{title:"Inputs / ToggleButton",component:e,argTypes:{children:{control:"text"}},args:{design:m.Default,icon:"employee",children:"ToggleButton Text"}}),`
`,t.jsx(f,{}),`
`,t.jsx("br",{}),`
`,t.jsx(s.h2,{id:"example",children:"Example"}),`
`,t.jsx(d,{children:t.jsx(u,{name:"Default",children:a=>t.jsx(e,{...a})})}),`
`,t.jsx(s.h2,{id:"properties",children:"Properties"}),`
`,t.jsx(g,{story:"Default"}),`
`,t.jsx(x,{rows:b}),`
`,t.jsx(h,{})]})}}const l=o=>t.jsx(e,{...o});l.storyName="Default";l.parameters={storySource:{source:`args => {
  return <ToggleButton {...args} />;
}`}};const r={title:"Inputs / ToggleButton",component:e,args:{design:m.Default,icon:"employee",children:"ToggleButton Text"},argTypes:{children:{control:"text"}},tags:["stories-mdx"],includeStories:["defaultStory"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:j};const Et=["defaultStory"];export{Et as __namedExportsOrder,r as default,l as defaultStory};
//# sourceMappingURL=ToggleButton.stories-7b8f1976.js.map
