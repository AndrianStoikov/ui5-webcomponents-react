import{j as t}from"./jsx-runtime-5926aa06.js";import{d as e}from"./DomRefTable.module-85c8720d.js";import{M as a,C as n}from"./chunk-PCJTTTQV-d250ba1c.js";import"./index-ebeaab24.js";import{F as l}from"./Footer-66ebd09e.js";import{d as s}from"./AnalyticalTable.stories-daa871df.js";import{u as p}from"./index-bda0bad7.js";import"./react-jss.esm-022ab528.js";import"./inheritsLoose-93e09647.js";import"./index-5448e852.js";import"./iframe-f5af30ef.js";import"../sb-preview/runtime.js";import"./UI5Element-01913b1f.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./withWebComponent-7b9bd1ee.js";import"./utils-69f7a0e0.js";import"./useIsomorphicLayoutEffect-38a48652.js";import"./slot-76e48863.js";import"./Icon-0a4d58ef.js";import"./Icons-d46a51e9.js";import"./decline-1fd321dc.js";import"./i18n-defaults-80781f7e.js";import"./information-c8e84372.js";import"./class-map-6a9bd920.js";import"./Button-3960a0de.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./Device-99b8bbf4.js";import"./i18n-defaults-ac1c9dde.js";import"./index-562e1433.js";import"./clsx.m-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-cd9e7ac3.js";import"./index-c209e6c0.js";import"./Integer-f7f172c9.js";import"./index-6d76da7e.js";import"./Avatar-0a66eae5.js";import"./ResizeHandler-edd29a36.js";import"./employee-a105984c.js";import"./index-c9a250aa.js";import"./index-b1fa7878.js";import"./Link-daa8ef8a.js";import"./WrappingType-b81e595a.js";import"./react-18-3d03c2cf.js";import"./mapValues-0a776dd9.js";import"./_baseForOwn-800a0312.js";import"./index-9c09ad76.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./_getPrototype-593546d2.js";import"./_baseUniq-4c215180.js";import"./index-356e4a49.js";import"./index-2c77de22.js";import"./index-67145140.js";import"./Label-a83eb715.js";import"./index-4115aeae.js";import"./index-9c36b504.js";import"./Popover-6ae302f4.js";import"./PopupUtils-4b9a91b6.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-d689758d.js";import"./FocusableElements-426d0dfa.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-0c64293c.js";import"./delete-c433582e.js";import"./ListItem-abf45448.js";import"./ListItemBase-b0580930.js";import"./ItemNavigation-0521282e.js";import"./TabbableElements-8e49b367.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-6bf4f6b5.js";import"./RadioButton-4257c8bc.js";import"./ValueState-2c5e5904.js";import"./CheckBox-caaa73da.js";import"./accept-132472e4.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-d59cc39f.js";import"./settings-3b96dde8.js";import"./i18n-defaults-d9fa5553.js";import"./I18nContext-cdb50611.js";import"./useIsomorphicId-4be7c5e3.js";import"./debounce-b93ea6a0.js";import"./index-99d317a4.js";import"./CssSizeVariables-cd649ef5.js";import"./CustomVariables-d3e297a0.js";import"./filter-dcaf8e1c.js";import"./group-2-3ac98e90.js";import"./index-e85892e8.js";import"./stopPropagation-da74d54e.js";import"./index-c784f219.js";import"./CustomListItem-0be83e50.js";import"./index-f0648495.js";import"./index-c3a51a80.js";import"./StandardListItem-4970aa78.js";import"./ValueState-ab6838cc.js";import"./index-d36e94d0.js";import"./Input-6eb7f2f5.js";import"./Suggestions.css-0630882b.js";import"./ResponsivePopoverCommon.css-4e26f9b9.js";import"./ValueStateMessage.css-c26568b3.js";import"./navigation-down-arrow-70e2b28a.js";import"./navigation-right-arrow-1c66d072.js";import"./useCurrentTheme-0281f63d.js";import"./index-b2349760.js";import"./index-cd9bb3ab.js";import"./GlobalStyleClasses-7209358d.js";import"./index-c917b34c.js";import"./Title-d41046e1.js";import"./index-9f52940b.js";import"./slim-arrow-down-d543dce5.js";import"./GroupHeaderListItem-cea3bb42.js";import"./Tokenizer-75168782.js";import"./ScrollEnablement-5e135290.js";import"./animate-1a16ba20.js";import"./ResponsivePopover-7f48ba13.js";import"./Dialog-1a1d34fb.js";import"./Token-ea84ea9c.js";import"./ToggleButton-4501e591.js";import"./ComboBoxItem-7aa3879b.js";import"./index-b8a34c30.js";import"./index-e766c511.js";import"./InvisibleMessage-e5379970.js";import"./index-7469fd63.js";import"./index-c947458f.js";function Do(i={}){const{wrapper:r}=Object.assign({},p(),i.components);return r?t.jsx(r,Object.assign({},i,{children:t.jsx(m,{})})):m();function m(){const o=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre"},p(),i.components);return t.jsxs(t.Fragment,{children:[t.jsx(a,{title:"Data Display / AnalyticalTable / Plugin: useManualRowSelect"}),`
`,t.jsx(o.h1,{id:"analyticaltable-plugin-usemanualrowselect",children:"AnalyticalTable Plugin: useManualRowSelect"}),`
`,t.jsx(e,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,t.jsxs(o.p,{children:["The ",t.jsx(o.code,{children:"useManualRowSelect"})," plugin hook allows controlling the selected rows manually. It accepts a parameter (",t.jsx(o.code,{children:"manualRowSelectedKey"}),") which defaults to ",t.jsx(o.code,{children:"isSelected"}),`.
If this key is found on the original data row, and it is `,t.jsx(o.code,{children:"true"}),", this row will be manually selected."]}),`
`,t.jsx(o.h2,{id:"example",children:"Example"}),`
`,t.jsx(n,{sourceState:"none",of:s}),`
`,t.jsx(o.pre,{children:t.jsx(o.code,{className:"language-jsx",children:`<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.MultiSelect}
  data={data}
  columns={columns}
  // you could also omit the \`'isSelected'\`, as this is the default value
  tableHooks={[AnalyticalTableHooks.useManualRowSelect('isSelected')]}
/>
`})}),`
`,t.jsx(l,{})]})}}export{Do as default};
//# sourceMappingURL=PluginManualRowSelect-5305c2fe.js.map
