{"version":3,"file":"TimeLineChart-1d49e7de.js","sources":["../../packages/charts/src/components/TimelineChart/TimeLineChart.mdx"],"sourcesContent":["import { ControlsWithNote, DocsHeader, Footer } from '@sb/components';\nimport { Canvas, Meta, Markdown, ArgTypes } from '@storybook/blocks';\nimport SubcomponentsSection from '@sb/docs/SubcomponentsSection.md?raw';\nimport * as ComponentStories from './TimeLineChart.stories';\nimport { TimelineChartAnnotation } from './TimelineChartAnnotation';\n\n<Meta of={ComponentStories} />\n\n<DocsHeader since=\"1.10.0\" />\n\n<Canvas of={ComponentStories.Default} />\n\n## Properties\n\n<ControlsWithNote of={ComponentStories.Default} />\n\n<br />\n<br />\n\n## More Examples\n\n### With Annotations\n\nThis example shows how the `TimelineChart` is used to visualize a simple simulation of the\n[<b>Earliest Deadline First</b>](https://en.wikipedia.org/wiki/Earliest_deadline_first_scheduling) scheduling\nalgorithm. The tasks are shown in the chart and the annotations are added on top and used to indicate the\narrival time, period and deadline of the tasks. The `TimelineChartAnnotation` component provides a way to specify the row\nthe annotations are applied to. For the annotations to scale well with the scaling of the width of the timeline, when\nzooming is done, a **ResizeObserver** could be used if desired. But for most purposes, the `TimelineChartBodyCtx` provided\nshould suffice. Using the React `useContext` hook to get the context and the _chartBodyWidth_ property should help with\nthe scaling. This will prevent having to create too many ResizeObservers and affecting performance.\n\nThe annotations are drawn using the HTML canvas and all the annotations for the same row are drawn at the same time using\nthe `TimingFigure` custom component created for this specific example. As can be seen, the annotations scale neatly without\nblurring when the timeline is zoomed. A valueFormat `(x) => Number.parseFloat(x).toFixed(2)` has also been applied to the\nticks and tooltip numbers.\n\n<Canvas of={ComponentStories.WithAnnotations} />\n\n#### TimingFigure Code\n\n<details>\n\n<summary>Show Code</summary>\n\n```jsx\nexport const TimingFigure = ({ arrival, period, deadline, totalDuration }) => {\n  const ref = useRef();\n  const verticalSpacing = 2;\n  const halfArrowWidth = 4;\n  const chartBodyCtx = useContext(TimelineChartBodyCtx);\n\n  useEffect(() => {\n    const canvas = ref.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set the canvas dimensions to avoid blurring\n    canvas.width = canvas.getBoundingClientRect().width;\n    canvas.height = canvas.getBoundingClientRect().height;\n\n    const width = canvas.width;\n    const height = canvas.height;\n    const one5thHeight = height / 5;\n    const four5thHeight = 4 * one5thHeight;\n\n    const interval = (period / totalDuration) * width;\n    const arrivalOffset = (arrival / totalDuration) * width;\n    const deadlineOffset = (deadline / totalDuration) * width;\n\n    ctx.beginPath();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = getComputedStyle(document.documentElement).getPropertyValue('--sapTextColor');\n\n    // Draw the up-pointing arrows for the arrival\n    for (let i = 0; i * interval + arrivalOffset < width; i++) {\n      const offset = i * interval + arrivalOffset;\n      ctx.moveTo(offset, verticalSpacing);\n      ctx.lineTo(offset, height - verticalSpacing);\n      ctx.moveTo(offset, verticalSpacing);\n      ctx.lineTo(offset - halfArrowWidth, one5thHeight);\n      ctx.moveTo(offset, verticalSpacing);\n      ctx.lineTo(offset + halfArrowWidth, one5thHeight);\n    }\n\n    // Draw the down-pointing arrows for the deadline\n    for (let i = 0; i * interval + arrivalOffset + deadlineOffset < width; i++) {\n      const offset = i * interval + arrivalOffset + deadlineOffset;\n      ctx.moveTo(offset, verticalSpacing);\n      ctx.lineTo(offset, height - verticalSpacing);\n      ctx.lineTo(offset - halfArrowWidth, four5thHeight);\n      ctx.moveTo(offset, height - verticalSpacing);\n      ctx.lineTo(offset + halfArrowWidth, four5thHeight);\n    }\n\n    ctx.stroke();\n  });\n\n  return <canvas ref={ref} style={{ width: chartBodyCtx.chartBodyWidth, height: '100%' }}></canvas>;\n};\n```\n\n</details>\n\n### With Annotations Only\n\nUsing annotations can be so powerful. This allows a very good customization of the timeline as desired. The\nchart can be made to contain only custom annotations that utilize the other features available in the\n`TimelineChart`. By default, the annotations are set so that they dont interact with the mouse. If an\ninteraction with the mouse is needed for the custom annotation, the annotation should have the\n`pointerEvents` set to _auto_ in its own style.\n\nThe example below shows the timeline for the some of the most momentuous inventions in the\nlast 6000 years from the year 2022. These annotations have been made using SVG just to\ndemonstrate that any valid element can be used for making the annotations.\n\n<Canvas of={ComponentStories.WithAnnotationsOnly} />\n\n### With More Customization\n\nA lot more things can be customized in the `TimelineChart`. These include:\n\n- The color of each item on a row.\n- The label of each item on a row.\n- The kind of connections between two different items:\n  1. Start-To-Start\n  2. Start-To-Finish\n  3. Finish-To-Start\n  4. Finish-To-Finish\n\n<Canvas of={ComponentStories.WithMoreCustomization} />\n\n### Loading Placeholder\n\n<Canvas of={ComponentStories.LoadingPlaceholder} />\n\n<Markdown>{SubcomponentsSection}</Markdown>\n\n## TimelineChartAnnotation\n\nThe `TimelineChartAnnotation` is designed to be used for creating custom annotations, markers\nor illustrations on the timeline of the chart.\n\n<ArgTypes of={TimelineChartAnnotation} />\n\n<Footer />\n"],"names":["MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","ComponentStories","DocsHeader","Canvas","ComponentStories.Default","ControlsWithNote","ComponentStories.WithAnnotations","ComponentStories.WithAnnotationsOnly","ComponentStories.WithMoreCustomization","ComponentStories.LoadingPlaceholder","Markdown","SubcomponentsSection","ArgTypes","TimelineChartAnnotation","Footer"],"mappings":"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"}