import{j as o}from"./jsx-runtime-d079401a.js";import{I as p}from"./DomRefTable.module-1c2d88e9.js";import{M as n,C as s}from"./chunk-S4VUQJ4A-aeb34aa5.js";import"./index-f1f2c4b1.js";import{F as l}from"./Footer-33cbd49c.js";import{a}from"./AnalyticalTable.stories-0c6b15af.js";import{u as m}from"./index-59d6410c.js";import"./react-jss.esm-c310038c.js";import"./inheritsLoose-93e09647.js";import"./index-7348359f.js";import"./iframe-2bd37414.js";import"../sb-preview/runtime.js";import"./UI5Element-11982a12.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./withWebComponent-99b005ba.js";import"./utils-626dc1bf.js";import"./useIsomorphicLayoutEffect-c49de97d.js";import"./slot-76e48863.js";import"./Icon-31253496.js";import"./Icons-234bf59e.js";import"./decline-23c167e4.js";import"./i18n-defaults-2d2bf0b6.js";import"./information-1886de07.js";import"./class-map-b4d8f3b0.js";import"./Button-cea1a8d0.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./Device-6afa24d0.js";import"./i18n-defaults-183ab1a9.js";import"./index-47d0a85a.js";import"./clsx-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-783dc33d.js";import"./index-b482ede8.js";import"./Integer-f7f172c9.js";import"./index-e9f5a1c9.js";import"./Avatar-5dbee8fc.js";import"./ResizeHandler-9ebe913c.js";import"./employee-e34ffee2.js";import"./index-a94544aa.js";import"./index-5afe9f81.js";import"./Link-5f9413e3.js";import"./WrappingType-b81e595a.js";import"./index-92d824d3.js";import"./index-c74c9f7f.js";import"./mapValues-57c90777.js";import"./_baseForOwn-2252ef3e.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./_getPrototype-73159a4c.js";import"./_baseUniq-61c59340.js";import"./index-356e4a49.js";import"./index-14ef1273.js";import"./index-8c8e0562.js";import"./Label-715c9061.js";import"./index-1f6a6804.js";import"./index-b83994a7.js";import"./Popover-2c2db418.js";import"./PopupsCommon.css-57708035.js";import"./FocusableElements-708d1a4e.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-56038137.js";import"./BrowserScrollbar.css-527f9f64.js";import"./delete-0ff9b3e2.js";import"./ListItem-e17fcfe4.js";import"./ListItemBase-2bee9969.js";import"./ItemNavigation-a882fb90.js";import"./TabbableElements-8e49b367.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-9c77b370.js";import"./RadioButton-dc3e74e5.js";import"./ValueState-2c5e5904.js";import"./CheckBox-bea14c51.js";import"./accept-6c83709e.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-c0f59065.js";import"./settings-c8e373b7.js";import"./i18n-defaults-c60b9a37.js";import"./I18nContext-dd74d568.js";import"./useIsomorphicId-ed1d334d.js";import"./debounce-be6825b8.js";import"./index-99d317a4.js";import"./CssSizeVariables-17481929.js";import"./CustomVariables-df17d38c.js";import"./filter-02d0ede0.js";import"./group-2-110971c2.js";import"./index-7a947b71.js";import"./stopPropagation-da74d54e.js";import"./index-bd87eb5d.js";import"./CustomListItem-00dbe902.js";import"./index-fe2f8e01.js";import"./index-8e5c6942.js";import"./StandardListItem-63c10fff.js";import"./ValueState-ab6838cc.js";import"./index-1fd7f966.js";import"./Input-f70de4ea.js";import"./Suggestions.css-a2899748.js";import"./ResponsivePopoverCommon.css-c96ec8b5.js";import"./ValueStateMessage.css-e53cdf31.js";import"./navigation-down-arrow-129d3555.js";import"./navigation-right-arrow-a67142b4.js";import"./useCurrentTheme-d1a74a79.js";import"./index-e80fa1bf.js";import"./index-1a2501c5.js";import"./GlobalStyleClasses-7209358d.js";import"./index-07d445fb.js";import"./Title-3276c542.js";import"./index-744da9b3.js";import"./InvisibleMessage-e4263a1a.js";import"./slim-arrow-down-f82584de.js";import"./ResponsivePopover-5dd29d2d.js";import"./Dialog-b8b389fd.js";import"./index-84e99827.js";import"./index-fa4e1acf.js";import"./ToggleButton-b3781d96.js";import"./index-8222d92f.js";import"./GroupHeaderListItem-db07ab19.js";import"./Tokenizer-670aa3fd.js";import"./ScrollEnablement-dd3a6392.js";import"./animate-1a16ba20.js";import"./Token-b56bad05.js";import"./ComboBoxItem-1b805b0a.js";import"./index-ddb2ee84.js";function vi(t={}){const{wrapper:r}=Object.assign({},m(),t.components);return r?o.jsx(r,Object.assign({},t,{children:o.jsx(e,{})})):e();function e(){const i=Object.assign({h1:"h1",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre"},m(),t.components);return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin: useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(p,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(s,{sourceState:"none",of:a}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = (e) => {
    console.log(e.columnWidth, e.header);
  };
  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={[
        AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
          liveUpdate: false,
          wait: 100
        })
      ]}
    />
  );
};
`})}),`
`,o.jsx(l,{})]})}}export{vi as default};
//# sourceMappingURL=PluginOnColumnResize-4aab2f50.js.map
