import{j as t,a as p,F as a}from"./jsx-runtime-670450c2.js";import{a as n}from"./Import-1aa54025.js";import{M as l,C as c}from"./index-97c42bde.js";import{d as s}from"./AnalyticalTable.stories-f0bc30f3.js";import{u as e}from"./index-4fb8b842.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./chunk-4XCFV5WA-3dd5dc32.js";import"./iframe-592514ad.js";import"../sb-preview/runtime.mjs";import"./index-96c5f47c.js";import"./chunk-R4NKYYJA-96bb58e6.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./inheritsLoose-93e09647.js";import"./_baseForOwn-c7d9bea5.js";import"./mapValues-2de54f78.js";import"./_getPrototype-bd05e126.js";import"./_baseUniq-51545746.js";import"./index-356e4a49.js";import"./index-61436d32.js";import"./delete-0d639d92.js";import"./UI5Element-727d48d7.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./Icons-5bcf1e3f.js";import"./decline-ff534003.js";import"./ListItem-9550e3d3.js";import"./Integer-8010a7ae.js";import"./MarkedEvents-0e37da6f.js";import"./AriaLabelHelper-dee23f38.js";import"./withWebComponent-63dd52a0.js";import"./utils-ed90fb1b.js";import"./class-map-abcca105.js";import"./FocusableElements-5a723910.js";import"./Keys-50a1cb5a.js";import"./getActiveElement-bcae01ed.js";import"./ResizeHandler-c56abc92.js";import"./MediaRange-25b98f31.js";import"./style-map-7b3eb5df.js";import"./ListItemBase-ef18a748.js";import"./ItemNavigation-4b509b49.js";import"./fastNavigation-ebf07f1c.js";import"./TabbableElements-21c27087.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-59c61392.js";import"./Label-6707bdfc.js";import"./WrappingType-b81e595a.js";import"./RadioButton-d0c7abe6.js";import"./ValueState-2c5e5904.js";import"./CheckBox-2890456e.js";import"./accept-70258933.js";import"./Button-2e5054c2.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-a1b07349.js";import"./settings-259db384.js";import"./index-6923d62a.js";import"./clsx.m-1229b3e0.js";import"./react-jss.esm-e54d2f1d.js";import"./index-2eaff221.js";import"./ThemingParameters-f4b4144e.js";import"./i18n-defaults-a62b2e2b.js";import"./I18nContext-bef5b452.js";import"./useIsomorphicId-78860c77.js";import"./useIsRTL-fcdcb328.js";import"./index-99d317a4.js";import"./CssSizeVariables-bd372cde.js";import"./CustomVariables-fd831c35.js";import"./filter-6ced0fd8.js";import"./group-2-2d57a811.js";import"./index-fc216f90.js";import"./Popover-97ca01c1.js";import"./stopPropagation-da74d54e.js";import"./index-d94fb7e2.js";import"./CustomListItem-57877d6f.js";import"./index-8ae8f387.js";import"./index-373c62f4.js";import"./index-aac649d7.js";import"./StandardListItem-cb5818d4.js";import"./Avatar-b22f5314.js";import"./employee-10cd14ab.js";import"./ValueState-ab6838cc.js";import"./index-92c418c1.js";import"./Input-a6aac6bd.js";import"./Suggestions.css-1f63061d.js";import"./ResponsivePopoverCommon.css-bc05f183.js";import"./ValueStateMessage.css-6e86a950.js";import"./navigation-down-arrow-131293e3.js";import"./navigation-right-arrow-9e098972.js";import"./useCurrentTheme-cb0d6a4d.js";import"./addCustomCSSWithScoping-b4da4774.js";import"./index-d43c2d98.js";import"./index-0d4b1695.js";import"./index-5840dbc9.js";import"./GlobalStyleClasses-7209358d.js";import"./index-d55a1fbe.js";import"./Title-18f6d5a1.js";import"./debounce-5c77766a.js";import"./index-e6397236.js";import"./slim-arrow-down-f36436a6.js";import"./GroupHeaderListItem-ba035fbc.js";import"./Tokenizer-2c01de3a.js";import"./ScrollEnablement-fd5196de.js";import"./animate-1a16ba20.js";import"./ResponsivePopover-bf5faf8e.js";import"./Dialog-859ab2f5.js";import"./Token-2b1b5395.js";import"./ToggleButton-a83fc587.js";import"./ComboBoxItem-9c4ebead.js";import"./index-ef9ace7b.js";import"./index-c5c76396.js";import"./InvisibleMessage-7e46d068.js";import"./index-86a0085f.js";import"./index-912cfb90.js";import"./index-aab05ed1.js";function yo(i={}){const{wrapper:r}=Object.assign({},e(),i.components);return r?t(r,Object.assign({},i,{children:t(m,{})})):m();function m(){const o=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre"},e(),i.components);return p(a,{children:[t(l,{title:"Data Display / AnalyticalTable / Plugin: useManualRowSelect"}),`
`,t(o.h1,{children:"AnalyticalTable Plugin: useManualRowSelect"}),`
`,t(n,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,p(o.p,{children:["The ",t(o.code,{children:"useManualRowSelect"})," plugin hook allows controlling the selected rows manually. It accepts a parameter (",t(o.code,{children:"manualRowSelectedKey"}),") which defaults to ",t(o.code,{children:"isSelected"}),`.
If this key is found on the original data row, and it is `,t(o.code,{children:"true"}),", this row will be manually selected."]}),`
`,t(o.h2,{children:"Example"}),`
`,t(c,{sourceState:"none",of:s}),`
`,t(o.pre,{children:t(o.code,{className:"language-jsx",children:`<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.MultiSelect}
  data={data}
  columns={columns}
  // you could also omit the \`'isSelected'\`, as this is the default value
  tableHooks={[AnalyticalTableHooks.useManualRowSelect('isSelected')]}
/>
`})})]})}}export{yo as default};
//# sourceMappingURL=PluginManualRowSelect-70b8b8f9.js.map
