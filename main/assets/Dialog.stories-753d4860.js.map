{"version":3,"file":"Dialog.stories-753d4860.js","sources":["../../packages/main/src/webComponents/Dialog/Dialog.stories.tsx"],"sourcesContent":["import { isChromatic } from '@sb/utils';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport settingsIcon from '@ui5/webcomponents-icons/dist/settings.js';\nimport React, { forwardRef, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { BarDesign } from '../../enums';\nimport { Bar, Button, DialogDomRef, DialogPropTypes, Icon, List, StandardListItem, Title } from '../index.js';\nimport { Dialog as OriginalDialog } from './index';\nconst meta = ({\n  title: 'Modals & Popovers / Dialog',\n  component: OriginalDialog,\n  argTypes: {\n    footer: {\n      control: {\n        disable: true\n      }\n    },\n    header: {\n      control: {\n        disable: true\n      }\n    }\n  },\n  args: {\n    children: 'Press \"Escape\" to close the Dialog.',\n    headerText: 'Dialog Header',\n    open: false\n  }\n} satisfies Meta<typeof OriginalDialog>);\n\n// todo remove once portals are supported inline, or general popovers are supported w/o having to mount them to the body\nconst Dialog = forwardRef<DialogDomRef, DialogPropTypes>((args, ref) => createPortal(<OriginalDialog {...args} ref={ref} />, document.body));\nDialog.displayName = 'Dialog';\nexport default meta;\ntype Story = StoryObj<typeof meta>;\nexport const Default: Story = {\n  render: args => {\n    const [dialogOpen, setDialogOpen] = useState(isChromatic || args.open);\n    useEffect(() => {\n      setDialogOpen(args.open);\n    }, [args.open]);\n    return <>\n        <Button onClick={() => {\n        setDialogOpen(true);\n      }}>\n          Open Dialog\n        </Button>\n        <Dialog {...args} open={dialogOpen} onAfterClose={e => {\n        args.onAfterClose(e);\n        setDialogOpen(false);\n      }} footer={<Bar design={BarDesign.Footer} endContent={<Button onClick={() => {\n        setDialogOpen(false);\n      }}>\n                  Close\n                </Button>} />} />\n      </>;\n  }\n};\nexport const WithContent: Story = {\n  render: args => {\n    const [dialogIsOpen, setDialogIsOpen] = useState(false);\n    const onButtonClick = () => {\n      setDialogIsOpen(true);\n    };\n    const handleClose = () => {\n      setDialogIsOpen(false);\n    };\n    return <>\n        <Button onClick={onButtonClick}>Open Dialog</Button>\n        <Dialog {...args} open={dialogIsOpen} header={<Bar endContent={<Icon name={settingsIcon} />}>\n              <Title>Dialog</Title>\n            </Bar>} footer={<Bar endContent={<Button onClick={handleClose}>Close</Button>} />}>\n          <List>\n            <StandardListItem additionalText=\"3\">List Item 1</StandardListItem>\n            <StandardListItem additionalText=\"2\">List Item 2</StandardListItem>\n            <StandardListItem additionalText=\"1\">List Item 3</StandardListItem>\n          </List>\n        </Dialog>\n      </>;\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => {\\n    const [dialogOpen, setDialogOpen] = useState(isChromatic || args.open);\\n    useEffect(() => {\\n      setDialogOpen(args.open);\\n    }, [args.open]);\\n    return <>\\n        <Button onClick={() => {\\n        setDialogOpen(true);\\n      }}>\\n          Open Dialog\\n        </Button>\\n        <Dialog {...args} open={dialogOpen} onAfterClose={e => {\\n        args.onAfterClose(e);\\n        setDialogOpen(false);\\n      }} footer={<Bar design={BarDesign.Footer} endContent={<Button onClick={() => {\\n        setDialogOpen(false);\\n      }}>\\n                  Close\\n                </Button>} />} />\\n      </>;\\n  }\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nWithContent.parameters = {\n  ...WithContent.parameters,\n  docs: {\n    ...WithContent.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => {\\n    const [dialogIsOpen, setDialogIsOpen] = useState(false);\\n    const onButtonClick = () => {\\n      setDialogIsOpen(true);\\n    };\\n    const handleClose = () => {\\n      setDialogIsOpen(false);\\n    };\\n    return <>\\n        <Button onClick={onButtonClick}>Open Dialog</Button>\\n        <Dialog {...args} open={dialogIsOpen} header={<Bar endContent={<Icon name={settingsIcon} />}>\\n              <Title>Dialog</Title>\\n            </Bar>} footer={<Bar endContent={<Button onClick={handleClose}>Close</Button>} />}>\\n          <List>\\n            <StandardListItem additionalText=\\\"3\\\">List Item 1</StandardListItem>\\n            <StandardListItem additionalText=\\\"2\\\">List Item 2</StandardListItem>\\n            <StandardListItem additionalText=\\\"1\\\">List Item 3</StandardListItem>\\n          </List>\\n        </Dialog>\\n      </>;\\n  }\\n}\",\n      ...WithContent.parameters?.docs?.source\n    }\n  }\n};"],"names":["meta","OriginalDialog","Dialog","forwardRef","args","ref","createPortal","jsx","Default","dialogOpen","setDialogOpen","useState","useEffect","jsxs","Fragment","Button","e","Bar","BarDesign","WithContent","dialogIsOpen","setDialogIsOpen","Icon","settingsIcon","Title","List","StandardListItem","_a","_c","_b"],"mappings":"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"}