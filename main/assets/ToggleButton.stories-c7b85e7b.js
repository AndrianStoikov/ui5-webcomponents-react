import{M as c,C as d,e as u}from"./chunk-S4VUQJ4A-2f00d13c.js";import{T as e}from"./index-19dd089d.js";import{B as m}from"./Button-1a04ac66.js";import"./employee-e34ffee2.js";import{A as g}from"./DomRefTable.module-0cb57df1.js";import{D as f}from"./DocsHeader-991d32fe.js";import{F as h}from"./Footer-3f8faf83.js";import{j as t}from"./jsx-runtime-d079401a.js";import"./index-f1f2c4b1.js";import{D as x}from"./DomRefTable-730c5000.js";import{u as p}from"./index-59d6410c.js";import"./iframe-95e95fd4.js";import"../sb-preview/runtime.js";import"./index-92d824d3.js";import"./index-c74c9f7f.js";import"./mapValues-57c90777.js";import"./_baseForOwn-2252ef3e.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./inheritsLoose-93e09647.js";import"./_getPrototype-73159a4c.js";import"./_baseUniq-61c59340.js";import"./index-356e4a49.js";import"./ToggleButton-95818995.js";import"./withWebComponent-8885c1b6.js";import"./utils-626dc1bf.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./useIsomorphicLayoutEffect-c49de97d.js";import"./Icons-234bf59e.js";import"./UI5Element-11982a12.js";import"./Device-6afa24d0.js";import"./Icon-6459d230.js";import"./slot-76e48863.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./i18n-defaults-183ab1a9.js";import"./react-jss.esm-c310038c.js";import"./index-099fdb19.js";import"./decline-23c167e4.js";import"./i18n-defaults-2d2bf0b6.js";import"./information-1886de07.js";import"./class-map-2a13820b.js";import"./index-47d0a85a.js";import"./clsx-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-783dc33d.js";import"./index-f092546e.js";import"./Integer-f7f172c9.js";import"./index-abc2cc05.js";import"./Avatar-60ab180c.js";import"./ResizeHandler-9ebe913c.js";import"./index-81ae69cd.js";import"./index-5644339f.js";import"./Link-6bda31f4.js";import"./WrappingType-b81e595a.js";import"./index-14ef1273.js";import"./TableOfContent-0ec8ba6f.js";import"./index-4b7fcd1e.js";import"./Label-78e0be96.js";import"./index-9e4a4085.js";import"./index-acff0a7f.js";import"./Popover-d6899044.js";import"./PopupsCommon.css-a62fa435.js";import"./FocusableElements-708d1a4e.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-4f876188.js";import"./BrowserScrollbar.css-7fb20ad4.js";const b=[{name:"accessibilityAttributes",visibility:"public",since:"1.2.0",type:"object",noattribute:"true",description:`An object of strings that defines several additional accessibility attribute values for customization depending on the use case.

It supports the following fields:

<ul> <li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> </li> <li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog</code></li> <li><code>Grid</code></li> <li><code>ListBox</code></li> <li><code>Menu</code></li> <li><code>Tree</code></li> </ul> </li> <li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li> </ul>`}];function j(o={}){const{wrapper:i}=Object.assign({},p(),o.components);return i?t.jsx(i,{...o,children:t.jsx(n,{})}):n();function n(){const s=Object.assign({h2:"h2"},p(),o.components);return t.jsxs(t.Fragment,{children:[t.jsx(c,{title:"Inputs / ToggleButton",component:e,argTypes:{children:{control:"text"}},args:{design:m.Default,icon:"employee",children:"ToggleButton Text"}}),`
`,t.jsx(f,{}),`
`,t.jsx("br",{}),`
`,t.jsx(s.h2,{id:"example",children:"Example"}),`
`,t.jsx(d,{children:t.jsx(u,{name:"Default",children:a=>t.jsx(e,{...a})})}),`
`,t.jsx(s.h2,{id:"properties",children:"Properties"}),`
`,t.jsx(g,{story:"Default"}),`
`,t.jsx(x,{rows:b}),`
`,t.jsx(h,{})]})}}const l=o=>t.jsx(e,{...o});l.storyName="Default";l.parameters={storySource:{source:`args => {
  return <ToggleButton {...args} />;
}`}};const r={title:"Inputs / ToggleButton",component:e,args:{design:m.Default,icon:"employee",children:"ToggleButton Text"},argTypes:{children:{control:"text"}},tags:["stories-mdx"],includeStories:["defaultStory"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:j};const Ot=["defaultStory"];export{Ot as __namedExportsOrder,r as default,l as defaultStory};
//# sourceMappingURL=ToggleButton.stories-c7b85e7b.js.map
