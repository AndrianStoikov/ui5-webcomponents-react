import{M as k,C as l,j as p,a as g}from"./index-fc65de3d.js";import{C as t}from"./index-6615cc49.js";import{V as r}from"./ValueState-ab6838cc.js";import{A as y}from"./DomRefTable.module-fb210060.js";import{D as S}from"./DocsHeader-b1974699.js";import{F as b}from"./Footer-54fe8402.js";import{j as e,a as i,F as c}from"./jsx-runtime-670450c2.js";import"./index-f1f749bf.js";import{u as m}from"./index-4fb8b842.js";import"./iframe-51c9489d.js";import"../sb-preview/runtime.mjs";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index-96c5f47c.js";import"./_commonjsHelpers-042e6b4d.js";import"./inheritsLoose-93e09647.js";import"./_baseForOwn-c7d9bea5.js";import"./mapValues-2de54f78.js";import"./_getPrototype-bd05e126.js";import"./_baseUniq-51545746.js";import"./index-356e4a49.js";import"./index-61436d32.js";import"./CheckBox-5c169af0.js";import"./class-map-60f59e95.js";import"./utils-ed90fb1b.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./withWebComponent-34dd487e.js";import"./useIsomorphicLayoutEffect-a838da4a.js";import"./UI5Element-386cb3f6.js";import"./AriaLabelHelper-dee23f38.js";import"./MarkedEvents-0e37da6f.js";import"./ValueState-2c5e5904.js";import"./Keys-50a1cb5a.js";import"./accept-39710bd2.js";import"./Icons-03f19c25.js";import"./Button-981a9381.js";import"./Label-f9741f9c.js";import"./WrappingType-b81e595a.js";import"./chunk-G4YQS2SV-3a764711.js";import"./react-18-2bb9dade.js";import"./chunk-R4NKYYJA-96bb58e6.js";import"./react-jss.esm-e54d2f1d.js";import"./index-cbce79a2.js";import"./decline-48ecb430.js";import"./index-b4aa831c.js";import"./clsx.m-1229b3e0.js";import"./index-2eaff221.js";import"./ThemingParameters-f4b4144e.js";import"./Import-8d74f27b.js";import"./TableOfContent-9c193c7f.js";import"./index-e644fe70.js";import"./index-224c0e2b.js";import"./Footer.module-c4f3b823.js";import"./index-273db19e.js";import"./Popover-ff8f156e.js";import"./Integer-5fa4beea.js";import"./FocusableElements-13161f05.js";import"./getActiveElement-bcae01ed.js";import"./ResizeHandler-b3fcb37c.js";import"./MediaRange-25b98f31.js";import"./style-map-63946e4f.js";const C='## Usage\n\nYou can define the checkbox text with via the `text` property. If the text exceeds the available width, it is truncated by default. In case you prefer text to wrap, set the `wrappingType` property to "Normal". The touchable area for toggling the `CheckBox` ends where the text ends.  \n  \nYou can disable the `CheckBox` by setting the `disabled` property to `true`, or use the `CheckBox` in read-only mode by setting the `readonly` property to `true`.  \n  \n\n## Keyboard Handling\n\nThe user can use the following keyboard shortcuts to toggle the checked state of the `CheckBox`.\n\n*   \\[SPACE, ENTER\\] - Toggles between different states: checked, not checked.';function f(o={}){const{wrapper:d}=Object.assign({},m(),o.components);return d?e(d,{...o,children:e(s,{})}):s();function s(){const a=Object.assign({h2:"h2",h1:"h1"},m(),o.components);return i(c,{children:[e(k,{title:"Inputs / CheckBox",component:t,args:{valueState:r.None,text:"CheckBox"}}),`
`,e(S,{}),`
`,e("br",{}),`
`,e(a.h2,{children:"Example"}),`
`,e(l,{children:e(p,{name:"Default",children:x=>e(t,{...x})})}),`
`,e(a.h2,{children:"Properties"}),`
`,e(y,{story:"Default"}),`
`,e(g,{children:C}),`
`,e(a.h1,{children:"More Examples"}),`
`,e("br",{}),`
`,e(a.h2,{children:"CheckBox states"}),`
`,e(l,{children:e(p,{name:"CheckBox states",children:()=>i(c,{children:[e(t,{text:"Error",valueState:r.Error}),e(t,{text:"Warning",valueState:r.Warning}),e(t,{text:"Disabled",disabled:!0,checked:!0}),e(t,{text:"Readonly",readonly:!0,checked:!0}),e(t,{text:"Error disabled",disabled:!0,valueState:r.Error,checked:!0}),e(t,{text:"Warning disabled ",disabled:!0,valueState:r.Warning,checked:!0}),e(t,{text:"Error readonly",readonly:!0,valueState:r.Error,checked:!0}),e(t,{text:"Warning readonly",readonly:!0,valueState:r.Warning,checked:!0})]})})}),`
`,e(b,{})]})}}const u=o=>e(t,{...o});u.storyName="Default";u.parameters={storySource:{source:`args => {
  return <CheckBox {...args} />;
}`}};const h=()=>i(c,{children:[e(t,{text:"Error",valueState:r.Error}),e(t,{text:"Warning",valueState:r.Warning}),e(t,{text:"Disabled",disabled:!0,checked:!0}),e(t,{text:"Readonly",readonly:!0,checked:!0}),e(t,{text:"Error disabled",disabled:!0,valueState:r.Error,checked:!0}),e(t,{text:"Warning disabled ",disabled:!0,valueState:r.Warning,checked:!0}),e(t,{text:"Error readonly",readonly:!0,valueState:r.Error,checked:!0}),e(t,{text:"Warning readonly",readonly:!0,valueState:r.Warning,checked:!0})]});h.storyName="CheckBox states";h.parameters={storySource:{source:`() => {
  return <>
          <CheckBox text="Error" valueState={ValueState.Error} />
          <CheckBox text="Warning" valueState={ValueState.Warning} />
          <CheckBox text="Disabled" disabled checked />
          <CheckBox text="Readonly" readonly checked />
          <CheckBox text="Error disabled" disabled valueState={ValueState.Error} checked />
          <CheckBox text="Warning disabled " disabled valueState={ValueState.Warning} checked />
          <CheckBox text="Error readonly" readonly valueState={ValueState.Error} checked />
          <CheckBox text="Warning readonly" readonly valueState={ValueState.Warning} checked />
        </>;
}`}};const n={title:"Inputs / CheckBox",component:t,args:{valueState:r.None,text:"CheckBox"},tags:["stories-mdx"],includeStories:["defaultStory","checkBoxStates"]};n.parameters=n.parameters||{};n.parameters.docs={...n.parameters.docs||{},page:f};const Ve=["defaultStory","checkBoxStates"];export{Ve as __namedExportsOrder,h as checkBoxStates,n as default,u as defaultStory};
//# sourceMappingURL=CheckBox.stories-1f289243.js.map
