import{M as k,C as p,j as m,a as g}from"./index-ebc6f2a8.js";import{C as t}from"./index-0720dd5f.js";import{V as r}from"./ValueState-ab6838cc.js";import{b as y}from"./DomRefTable.module-ecca9f20.js";import{D as S}from"./DocsHeader-e27afa3d.js";import{F as b}from"./Footer-2c1d1d32.js";import{j as e,a as i,F as c}from"./jsx-runtime-670450c2.js";import"./index-f1f749bf.js";import{u as l}from"./index-4fb8b842.js";import"./iframe-922b4986.js";import"../sb-preview/runtime.mjs";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index-96c5f47c.js";import"./_commonjsHelpers-042e6b4d.js";import"./inheritsLoose-93e09647.js";import"./_baseForOwn-c7d9bea5.js";import"./mapValues-2de54f78.js";import"./_getPrototype-bd05e126.js";import"./_baseUniq-51545746.js";import"./index-356e4a49.js";import"./index-61436d32.js";import"./CheckBox-90578acd.js";import"./Device-208919c6.js";import"./UI5Element-427ec721.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./withWebComponent-e4481254.js";import"./utils-ed90fb1b.js";import"./useIsomorphicLayoutEffect-a838da4a.js";import"./slot-634e3e91.js";import"./event-97133b94.js";import"./ValueState-2c5e5904.js";import"./AriaLabelHelper-43a261ec.js";import"./Keys-3acbae73.js";import"./accept-a98baca8.js";import"./Icons-7b82f601.js";import"./Icon-459702a7.js";import"./Label-040efebd.js";import"./WrappingType-b81e595a.js";import"./class-map-5d8e4b2b.js";import"./i18n-defaults-d66b3d5e.js";import"./chunk-PCJTTTQV-29a63e2d.js";import"./react-18-2bb9dade.js";import"./chunk-R4NKYYJA-96bb58e6.js";import"./react-jss.esm-e54d2f1d.js";import"./index-69579fa7.js";import"./decline-f2b294b3.js";import"./i18n-defaults-80781f7e.js";import"./information-50e1ad0f.js";import"./Button-04bad9a0.js";import"./MarkedEvents-b83081e9.js";import"./index-da505e61.js";import"./clsx.m-1229b3e0.js";import"./index-2eaff221.js";import"./ThemingParameters-f4b4144e.js";import"./Import-b6629dfa.js";import"./TableOfContent-3c2e47f0.js";import"./index-b539d5f9.js";import"./Link-6d546ee9.js";import"./index-6172aa9c.js";import"./Footer.module-f90cad7d.js";import"./index-a68ca2ac.js";import"./Popover-907d427e.js";import"./Integer-f7f172c9.js";import"./PopupUtils-a2e37749.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-7d9fbba1.js";import"./FocusableElements-7e25663e.js";import"./isElementHidden-01c07146.js";import"./BrowserScrollbar.css-615afd63.js";import"./ResizeHandler-1fa8a094.js";import"./MediaRange-25b98f31.js";import"./style-map-77d201d2.js";const C='## Usage\n\nYou can define the checkbox text with via the `text` property. If the text exceeds the available width, it is truncated by default. In case you prefer text to wrap, set the `wrappingType` property to "Normal". The touchable area for toggling the `CheckBox` ends where the text ends.  \n  \nYou can disable the `CheckBox` by setting the `disabled` property to `true`, or use the `CheckBox` in read-only mode by setting the `readonly` property to `true`.  \n  \n\n## Keyboard Handling\n\nThe user can use the following keyboard shortcuts to toggle the checked state of the `CheckBox`.\n\n*   \\[SPACE, ENTER\\] - Toggles between different states: checked, not checked.';function f(o={}){const{wrapper:d}=Object.assign({},l(),o.components);return d?e(d,{...o,children:e(s,{})}):s();function s(){const a=Object.assign({h2:"h2",h1:"h1"},l(),o.components);return i(c,{children:[e(k,{title:"Inputs / CheckBox",component:t,args:{valueState:r.None,text:"CheckBox"}}),`
`,e(S,{}),`
`,e("br",{}),`
`,e(a.h2,{children:"Example"}),`
`,e(p,{children:e(m,{name:"Default",children:x=>e(t,{...x})})}),`
`,e(a.h2,{children:"Properties"}),`
`,e(y,{story:"Default"}),`
`,e(g,{children:C}),`
`,e(a.h1,{children:"More Examples"}),`
`,e("br",{}),`
`,e(a.h2,{children:"CheckBox states"}),`
`,e(p,{children:e(m,{name:"CheckBox states",children:()=>i(c,{children:[e(t,{text:"Error",valueState:r.Error}),e(t,{text:"Warning",valueState:r.Warning}),e(t,{text:"Disabled",disabled:!0,checked:!0}),e(t,{text:"Readonly",readonly:!0,checked:!0}),e(t,{text:"Error disabled",disabled:!0,valueState:r.Error,checked:!0}),e(t,{text:"Warning disabled ",disabled:!0,valueState:r.Warning,checked:!0}),e(t,{text:"Error readonly",readonly:!0,valueState:r.Error,checked:!0}),e(t,{text:"Warning readonly",readonly:!0,valueState:r.Warning,checked:!0})]})})}),`
`,e(b,{})]})}}const u=o=>e(t,{...o});u.storyName="Default";u.parameters={storySource:{source:`args => {
  return <CheckBox {...args} />;
}`}};const h=()=>i(c,{children:[e(t,{text:"Error",valueState:r.Error}),e(t,{text:"Warning",valueState:r.Warning}),e(t,{text:"Disabled",disabled:!0,checked:!0}),e(t,{text:"Readonly",readonly:!0,checked:!0}),e(t,{text:"Error disabled",disabled:!0,valueState:r.Error,checked:!0}),e(t,{text:"Warning disabled ",disabled:!0,valueState:r.Warning,checked:!0}),e(t,{text:"Error readonly",readonly:!0,valueState:r.Error,checked:!0}),e(t,{text:"Warning readonly",readonly:!0,valueState:r.Warning,checked:!0})]});h.storyName="CheckBox states";h.parameters={storySource:{source:`() => {
  return <>
          <CheckBox text="Error" valueState={ValueState.Error} />
          <CheckBox text="Warning" valueState={ValueState.Warning} />
          <CheckBox text="Disabled" disabled checked />
          <CheckBox text="Readonly" readonly checked />
          <CheckBox text="Error disabled" disabled valueState={ValueState.Error} checked />
          <CheckBox text="Warning disabled " disabled valueState={ValueState.Warning} checked />
          <CheckBox text="Error readonly" readonly valueState={ValueState.Error} checked />
          <CheckBox text="Warning readonly" readonly valueState={ValueState.Warning} checked />
        </>;
}`}};const n={title:"Inputs / CheckBox",component:t,args:{valueState:r.None,text:"CheckBox"},tags:["stories-mdx"],includeStories:["defaultStory","checkBoxStates"]};n.parameters=n.parameters||{};n.parameters.docs={...n.parameters.docs||{},page:f};const Pe=["defaultStory","checkBoxStates"];export{Pe as __namedExportsOrder,h as checkBoxStates,n as default,u as defaultStory};
//# sourceMappingURL=CheckBox.stories-6683d497.js.map
