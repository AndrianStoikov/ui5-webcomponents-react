import{j as t,a as p,F as a}from"./jsx-runtime-670450c2.js";import{a as n}from"./Import-2bb789f5.js";import{M as l,C as c}from"./index-afbbd947.js";import{d as s}from"./AnalyticalTable.stories-c06aff1b.js";import{u as e}from"./index-4fb8b842.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./chunk-G4YQS2SV-420b4ede.js";import"./iframe-0f619c81.js";import"../sb-preview/runtime.mjs";import"./react-18-2bb9dade.js";import"./index-96c5f47c.js";import"./chunk-R4NKYYJA-96bb58e6.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./inheritsLoose-93e09647.js";import"./_baseForOwn-c7d9bea5.js";import"./mapValues-2de54f78.js";import"./_getPrototype-bd05e126.js";import"./_baseUniq-51545746.js";import"./index-356e4a49.js";import"./index-61436d32.js";import"./delete-16a185eb.js";import"./UI5Element-386cb3f6.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./Icons-03f19c25.js";import"./decline-48ecb430.js";import"./ListItem-5a448e1e.js";import"./Integer-5fa4beea.js";import"./MarkedEvents-0e37da6f.js";import"./AriaLabelHelper-dee23f38.js";import"./withWebComponent-34dd487e.js";import"./utils-ed90fb1b.js";import"./useIsomorphicLayoutEffect-a838da4a.js";import"./class-map-60f59e95.js";import"./FocusableElements-13161f05.js";import"./Keys-50a1cb5a.js";import"./getActiveElement-bcae01ed.js";import"./ResizeHandler-b3fcb37c.js";import"./MediaRange-25b98f31.js";import"./style-map-63946e4f.js";import"./ListItemBase-a71fd372.js";import"./ItemNavigation-a1cb3c20.js";import"./fastNavigation-ebf07f1c.js";import"./TabbableElements-98652d50.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-344b418d.js";import"./Label-f9741f9c.js";import"./WrappingType-b81e595a.js";import"./RadioButton-bb0fefa8.js";import"./ValueState-2c5e5904.js";import"./CheckBox-5c169af0.js";import"./accept-39710bd2.js";import"./Button-981a9381.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-dcb3f847.js";import"./settings-6ab1e637.js";import"./index-7ac1a15f.js";import"./clsx.m-1229b3e0.js";import"./react-jss.esm-e54d2f1d.js";import"./index-2eaff221.js";import"./ThemingParameters-f4b4144e.js";import"./i18n-defaults-fdda04bc.js";import"./I18nContext-bef5b452.js";import"./useIsomorphicId-78860c77.js";import"./useIsRTL-2dc6fd10.js";import"./index-99d317a4.js";import"./CssSizeVariables-bd372cde.js";import"./CustomVariables-fd831c35.js";import"./filter-c9ac4870.js";import"./group-2-8b8b441b.js";import"./index-68060125.js";import"./Popover-ff8f156e.js";import"./stopPropagation-da74d54e.js";import"./index-084e8c4e.js";import"./CustomListItem-0552ac45.js";import"./index-2c1abc1c.js";import"./index-0b25d04c.js";import"./index-c6465c4c.js";import"./StandardListItem-d042803f.js";import"./Avatar-f74ae24a.js";import"./employee-dc85b60f.js";import"./ValueState-ab6838cc.js";import"./index-675ee80e.js";import"./Input-85591656.js";import"./Suggestions.css-5424627b.js";import"./ResponsivePopoverCommon.css-c2b66233.js";import"./ValueStateMessage.css-88180c67.js";import"./navigation-down-arrow-91f758fd.js";import"./navigation-right-arrow-2bfe54ed.js";import"./useCurrentTheme-a028eacb.js";import"./addCustomCSSWithScoping-6aa4fe38.js";import"./index-c8ec2ad5.js";import"./index-b3213c5e.js";import"./index-550b08e1.js";import"./GlobalStyleClasses-7209358d.js";import"./index-f8b5afaf.js";import"./Title-256f7c0a.js";import"./debounce-5c77766a.js";import"./index-b4340904.js";import"./slim-arrow-down-fdce342b.js";import"./GroupHeaderListItem-7623f393.js";import"./Tokenizer-30e438e3.js";import"./ScrollEnablement-94c75092.js";import"./animate-1a16ba20.js";import"./ResponsivePopover-f9a06272.js";import"./Dialog-30b3aaf0.js";import"./Token-577c66a1.js";import"./ToggleButton-00cd8a20.js";import"./ComboBoxItem-6efaa886.js";import"./index-695fd913.js";import"./index-6a47f5fd.js";import"./InvisibleMessage-0cf18861.js";import"./index-f0c486c8.js";import"./index-ea63c4fb.js";import"./index-dfb05037.js";function bo(i={}){const{wrapper:r}=Object.assign({},e(),i.components);return r?t(r,Object.assign({},i,{children:t(m,{})})):m();function m(){const o=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre"},e(),i.components);return p(a,{children:[t(l,{title:"Data Display / AnalyticalTable / Plugin: useManualRowSelect"}),`
`,t(o.h1,{children:"AnalyticalTable Plugin: useManualRowSelect"}),`
`,t(n,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,p(o.p,{children:["The ",t(o.code,{children:"useManualRowSelect"})," plugin hook allows controlling the selected rows manually. It accepts a parameter (",t(o.code,{children:"manualRowSelectedKey"}),") which defaults to ",t(o.code,{children:"isSelected"}),`.
If this key is found on the original data row, and it is `,t(o.code,{children:"true"}),", this row will be manually selected."]}),`
`,t(o.h2,{children:"Example"}),`
`,t(c,{sourceState:"none",of:s}),`
`,t(o.pre,{children:t(o.code,{className:"language-jsx",children:`<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.MultiSelect}
  data={data}
  columns={columns}
  // you could also omit the \`'isSelected'\`, as this is the default value
  tableHooks={[AnalyticalTableHooks.useManualRowSelect('isSelected')]}
/>
`})})]})}}export{bo as default};
//# sourceMappingURL=PluginManualRowSelect-e4900fa4.js.map
