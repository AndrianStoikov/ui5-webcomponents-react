import{j as o}from"./jsx-runtime-5926aa06.js";import{d as p}from"./DomRefTable.module-fea6f879.js";import{M as n,C as s}from"./chunk-PCJTTTQV-4f7a6d40.js";import"./index-ebeaab24.js";import{F as l}from"./Footer-3525217e.js";import{e as a}from"./AnalyticalTable.stories-3f5b4a83.js";import{u as m}from"./index-bda0bad7.js";import"./react-jss.esm-022ab528.js";import"./inheritsLoose-93e09647.js";import"./index-0b9089b0.js";import"./iframe-9085ae47.js";import"../sb-preview/runtime.js";import"./UI5Element-a8445a25.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./withWebComponent-884f99a7.js";import"./utils-69f7a0e0.js";import"./useIsomorphicLayoutEffect-38a48652.js";import"./slot-76e48863.js";import"./Icon-3e9cb840.js";import"./Icons-c55d12a5.js";import"./decline-c4793abd.js";import"./i18n-defaults-80781f7e.js";import"./information-e6fe8610.js";import"./class-map-323a92fb.js";import"./Button-f1768a08.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./Device-208919c6.js";import"./i18n-defaults-fca59c5d.js";import"./react-18-3d03c2cf.js";import"./mapValues-0a776dd9.js";import"./_baseForOwn-800a0312.js";import"./index-9c09ad76.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./_getPrototype-593546d2.js";import"./_baseUniq-4c215180.js";import"./index-356e4a49.js";import"./index-8330eb1d.js";import"./clsx.m-1229b3e0.js";import"./index-0edb6340.js";import"./Label-6cefa2d2.js";import"./WrappingType-b81e595a.js";import"./index-e52a334d.js";import"./Link-8b80096c.js";import"./index-45440674.js";import"./Popover-2f417d64.js";import"./Integer-f7f172c9.js";import"./PopupUtils-b38c74c1.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-3239006e.js";import"./FocusableElements-69e44a9d.js";import"./isElementHidden-01c07146.js";import"./ResizeHandler-cea672cf.js";import"./MediaRange-25b98f31.js";import"./style-map-34e6b8f4.js";import"./delete-e30a738e.js";import"./ListItem-a92cce8b.js";import"./ListItemBase-124add92.js";import"./ItemNavigation-cb92b87f.js";import"./TabbableElements-8e49b367.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-8d822d0c.js";import"./RadioButton-021a694f.js";import"./ValueState-2c5e5904.js";import"./CheckBox-33235970.js";import"./accept-2ae5e2eb.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-70b47038.js";import"./settings-34131f1f.js";import"./index-562e1433.js";import"./ThemingParameters-7e2e4e30.js";import"./i18n-defaults-2b7c3fd4.js";import"./I18nContext-cdb50611.js";import"./useIsomorphicId-4be7c5e3.js";import"./debounce-c13310e6.js";import"./index-99d317a4.js";import"./CssSizeVariables-02fb2fd8.js";import"./CustomVariables-fd831c35.js";import"./filter-6cb7da5b.js";import"./group-2-f06acedb.js";import"./index-12f303d9.js";import"./stopPropagation-da74d54e.js";import"./index-7dba519f.js";import"./CustomListItem-4a6187c7.js";import"./index-73a13dd3.js";import"./index-7b269634.js";import"./StandardListItem-8dc8c287.js";import"./Avatar-3e4df27c.js";import"./employee-d55343ff.js";import"./ValueState-ab6838cc.js";import"./index-36c6d30c.js";import"./Input-c2f4aa77.js";import"./Suggestions.css-2ef2fda5.js";import"./ResponsivePopoverCommon.css-04f065a8.js";import"./ValueStateMessage.css-111bf458.js";import"./navigation-down-arrow-1751e708.js";import"./navigation-right-arrow-b38baa43.js";import"./useCurrentTheme-54e82370.js";import"./index-089c87d1.js";import"./index-1c2846c9.js";import"./index-02b534c8.js";import"./GlobalStyleClasses-7209358d.js";import"./index-4f304493.js";import"./Title-a5ea80a2.js";import"./index-f416afb6.js";import"./slim-arrow-down-91425847.js";import"./GroupHeaderListItem-bd8efaa6.js";import"./Tokenizer-26722e19.js";import"./ScrollEnablement-4353003c.js";import"./animate-1a16ba20.js";import"./ResponsivePopover-1eb02d4a.js";import"./Dialog-effa1776.js";import"./Token-55bee0ec.js";import"./ToggleButton-49eb273a.js";import"./ComboBoxItem-346fa075.js";import"./index-385aca82.js";import"./index-11653eda.js";import"./InvisibleMessage-c74dbb24.js";import"./index-47df024b.js";import"./index-0570793c.js";function Oi(t={}){const{wrapper:r}=Object.assign({},m(),t.components);return r?o.jsx(r,Object.assign({},t,{children:o.jsx(e,{})})):e();function e(){const i=Object.assign({h1:"h1",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre"},m(),t.components);return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin: useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(p,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(s,{sourceState:"none",of:a}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = (e) => {
    console.log(e.columnWidth, e.header);
  };
  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={[
        AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
          liveUpdate: false,
          wait: 100
        })
      ]}
    />
  );
};
`})}),`
`,o.jsx(l,{})]})}}export{Oi as default};
//# sourceMappingURL=PluginOnColumnResize-0e354872.js.map
