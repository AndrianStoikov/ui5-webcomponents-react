import{M as u,C as c,f as d,a as h}from"./chunk-PCJTTTQV-43b793e3.js";import{C as t}from"./index-32c1ba1b.js";import{V as r}from"./ValueState-ab6838cc.js";import{d as k}from"./DomRefTable.module-5a9628f2.js";import{D as g}from"./DocsHeader-5bb3c237.js";import{F as j}from"./Footer-feef355a.js";import{j as e}from"./jsx-runtime-ccada58e.js";import"./index-f1f749bf.js";import{u as l}from"./index-4fb8b842.js";import"./iframe-f12bdbd6.js";import"../sb-preview/runtime.mjs";import"./react-18-718b9f73.js";import"./mapValues-2de54f78.js";import"./_baseForOwn-c7d9bea5.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-96c5f47c.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./inheritsLoose-93e09647.js";import"./_getPrototype-bd05e126.js";import"./_baseUniq-51545746.js";import"./index-356e4a49.js";import"./CheckBox-d3cb6aeb.js";import"./Device-208919c6.js";import"./UI5Element-e8adceda.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./withWebComponent-791919b7.js";import"./utils-ed90fb1b.js";import"./useIsomorphicLayoutEffect-a838da4a.js";import"./slot-76e48863.js";import"./Icon-b04dccd7.js";import"./Icons-5b18f7d2.js";import"./ValueState-2c5e5904.js";import"./AriaLabelHelper-43a261ec.js";import"./accept-9744f30a.js";import"./Label-0e5fa470.js";import"./WrappingType-b81e595a.js";import"./class-map-dc0989fc.js";import"./i18n-defaults-254d6b69.js";import"./chunk-R4NKYYJA-96bb58e6.js";import"./react-jss.esm-2e28eff7.js";import"./index-2fee304c.js";import"./decline-7cb41e3a.js";import"./i18n-defaults-80781f7e.js";import"./information-2c502181.js";import"./Button-08c55dbf.js";import"./MarkedEvents-b83081e9.js";import"./index-58200449.js";import"./clsx.m-1229b3e0.js";import"./index-334d9c45.js";import"./ThemingParameters-f4b4144e.js";import"./Import-eaff1c83.js";import"./TableOfContent-591e18eb.js";import"./index-4a77869c.js";import"./Link-756c9448.js";import"./index-81878ded.js";import"./index-36ea5a65.js";import"./Popover-a5930009.js";import"./Integer-f7f172c9.js";import"./PopupUtils-6ec841a6.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-4412d83b.js";import"./FocusableElements-5012f8d0.js";import"./isElementHidden-01c07146.js";import"./BrowserScrollbar.css-0dbd5acf.js";import"./ResizeHandler-9d370fcd.js";import"./MediaRange-25b98f31.js";import"./style-map-d22cbf2f.js";const y='## Usage\n\nYou can define the checkbox text with via the `text` property. If the text exceeds the available width, it is truncated by default. In case you prefer text to wrap, set the `wrappingType` property to "Normal". The touchable area for toggling the `CheckBox` ends where the text ends.\n\nYou can disable the `CheckBox` by setting the `disabled` property to `true`, or use the `CheckBox` in read-only mode by setting the `readonly` property to `true`.\n\n## Keyboard Handling\n\nThe user can use the following keyboard shortcuts to toggle the checked state of the `CheckBox`.\n\n- \\[SPACE, ENTER\\] - Toggles between different states: checked, not checked.\n';function S(o={}){const{wrapper:i}=Object.assign({},l(),o.components);return i?e.jsx(i,{...o,children:e.jsx(s,{})}):s();function s(){const a=Object.assign({h2:"h2",h1:"h1"},l(),o.components);return e.jsxs(e.Fragment,{children:[e.jsx(u,{title:"Inputs / CheckBox",component:t,args:{valueState:r.None,text:"CheckBox"}}),`
`,e.jsx(g,{}),`
`,e.jsx("br",{}),`
`,e.jsx(a.h2,{id:"example",children:"Example"}),`
`,e.jsx(c,{children:e.jsx(d,{name:"Default",children:x=>e.jsx(t,{...x})})}),`
`,e.jsx(a.h2,{id:"properties",children:"Properties"}),`
`,e.jsx(k,{story:"Default"}),`
`,e.jsx(h,{children:y}),`
`,e.jsx(a.h1,{id:"more-examples",children:"More Examples"}),`
`,e.jsx("br",{}),`
`,e.jsx(a.h2,{id:"checkbox-states",children:"CheckBox states"}),`
`,e.jsx(c,{children:e.jsx(d,{name:"CheckBox states",children:()=>e.jsxs(e.Fragment,{children:[e.jsx(t,{text:"Error",valueState:r.Error}),e.jsx(t,{text:"Warning",valueState:r.Warning}),e.jsx(t,{text:"Disabled",disabled:!0,checked:!0}),e.jsx(t,{text:"Readonly",readonly:!0,checked:!0}),e.jsx(t,{text:"Error disabled",disabled:!0,valueState:r.Error,checked:!0}),e.jsx(t,{text:"Warning disabled ",disabled:!0,valueState:r.Warning,checked:!0}),e.jsx(t,{text:"Error readonly",readonly:!0,valueState:r.Error,checked:!0}),e.jsx(t,{text:"Warning readonly",readonly:!0,valueState:r.Warning,checked:!0})]})})}),`
`,e.jsx(j,{})]})}}const m=o=>e.jsx(t,{...o});m.storyName="Default";m.parameters={storySource:{source:`args => {
  return <CheckBox {...args} />;
}`}};const p=()=>e.jsxs(e.Fragment,{children:[e.jsx(t,{text:"Error",valueState:r.Error}),e.jsx(t,{text:"Warning",valueState:r.Warning}),e.jsx(t,{text:"Disabled",disabled:!0,checked:!0}),e.jsx(t,{text:"Readonly",readonly:!0,checked:!0}),e.jsx(t,{text:"Error disabled",disabled:!0,valueState:r.Error,checked:!0}),e.jsx(t,{text:"Warning disabled ",disabled:!0,valueState:r.Warning,checked:!0}),e.jsx(t,{text:"Error readonly",readonly:!0,valueState:r.Error,checked:!0}),e.jsx(t,{text:"Warning readonly",readonly:!0,valueState:r.Warning,checked:!0})]});p.storyName="CheckBox states";p.parameters={storySource:{source:`() => {
  return <>
          <CheckBox text="Error" valueState={ValueState.Error} />
          <CheckBox text="Warning" valueState={ValueState.Warning} />
          <CheckBox text="Disabled" disabled checked />
          <CheckBox text="Readonly" readonly checked />
          <CheckBox text="Error disabled" disabled valueState={ValueState.Error} checked />
          <CheckBox text="Warning disabled " disabled valueState={ValueState.Warning} checked />
          <CheckBox text="Error readonly" readonly valueState={ValueState.Error} checked />
          <CheckBox text="Warning readonly" readonly valueState={ValueState.Warning} checked />
        </>;
}`}};const n={title:"Inputs / CheckBox",component:t,args:{valueState:r.None,text:"CheckBox"},tags:["stories-mdx"],includeStories:["defaultStory","checkBoxStates"]};n.parameters=n.parameters||{};n.parameters.docs={...n.parameters.docs||{},page:S};const Re=["defaultStory","checkBoxStates"];export{Re as __namedExportsOrder,p as checkBoxStates,n as default,m as defaultStory};
//# sourceMappingURL=CheckBox.stories-35947edb.js.map
