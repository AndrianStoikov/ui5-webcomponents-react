{"version":3,"file":"AvatarGroup.stories-16428adc.js","sources":["../../node_modules/@ui5/webcomponents/dist/types/AvatarGroupType.js","../../node_modules/@ui5/webcomponents/dist/generated/templates/AvatarGroupTemplate.lit.js","../../node_modules/@ui5/webcomponents/dist/generated/themes/AvatarGroup.css.js","../../node_modules/@ui5/webcomponents/dist/AvatarGroup.js","../../packages/main/src/webComponents/AvatarGroup/index.tsx","../../packages/main/src/webComponents/AvatarGroup/AvatarGroupDescription.md?raw","../../packages/main/src/webComponents/AvatarGroup/CodeGen.tsx","../../packages/main/src/webComponents/AvatarGroup/AvatarGroup.stories.mdx"],"sourcesContent":["/**\n * Different types of AvatarGroupType.\n *\n * @class\n * @enum {string}\n * @public\n * @author SAP SE\n * @alias sap.ui.webc.main.types.AvatarGroupType\n */\nvar AvatarGroupType;\n(function (AvatarGroupType) {\n    /**\n     * The avatars are displayed as partially overlapped on top of each other and the entire group has one click or tap area.\n     *\n     * @public\n     * @type {Group}\n     */\n    AvatarGroupType[\"Group\"] = \"Group\";\n    /**\n     * The avatars are displayed side-by-side and each avatar has its own click or tap area.\n     *\n     * @public\n     * @type {Individual}\n     */\n    AvatarGroupType[\"Individual\"] = \"Individual\";\n})(AvatarGroupType || (AvatarGroupType = {}));\nexport default AvatarGroupType;\n//# sourceMappingURL=AvatarGroupType.js.map","/* eslint no-unused-vars: 0 */\nimport { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\n\nconst block0 = (context, tags, suffix) => html`<div class=\"ui5-avatar-group-root\"><div class=\"ui5-avatar-group-items\" @keyup=\"${context._onkeyup}\" @keydown=\"${context._onkeydown}\" @focusin=\"${context._onfocusin}\" tabindex=\"${ifDefined(context._groupTabIndex)}\" @click=\"${context._onClick}\" @ui5-click=\"${ifDefined(context._onUI5Click)}\" aria-label=\"${ifDefined(context._ariaLabelText)}\" role=\"${ifDefined(context._role)}\" aria-haspopup=\"${ifDefined(context._containerAriaHasPopup)}\"><slot></slot>${ context._customOverflowButton ? block1(context, tags, suffix) : block2(context, tags, suffix) }</div></div>`;\nconst block1 = (context, tags, suffix) => html`<slot name=\"overflowButton\"></slot>`;\nconst block2 = (context, tags, suffix) => suffix ? html`<${scopeTag(\"ui5-button\", tags, suffix)} .accessibilityAttributes=\"${ifDefined(context._overflowButtonAccAttributes)}\" aria-label=\"${ifDefined(context._overflowButtonAriaLabelText)}\" ?hidden=\"${context._overflowBtnHidden}\" ?non-interactive=${context._isGroup} class=\"${classMap(context.classes.overflowButton)}\">${ifDefined(context._overflowButtonText)}</${scopeTag(\"ui5-button\", tags, suffix)}>` : html`<ui5-button .accessibilityAttributes=\"${ifDefined(context._overflowButtonAccAttributes)}\" aria-label=\"${ifDefined(context._overflowButtonAriaLabelText)}\" ?hidden=\"${context._overflowBtnHidden}\" ?non-interactive=${context._isGroup} class=\"${classMap(context.classes.overflowButton)}\">${ifDefined(context._overflowButtonText)}</ui5-button>`;\n\n\nexport default block0;","import { registerThemePropertiesLoader } from \"@ui5/webcomponents-base/dist/asset-registries/Themes.js\";\n\nimport defaultThemeBase from \"@ui5/webcomponents-theming/dist/generated/themes/sap_fiori_3/parameters-bundle.css.js\";\nimport defaultTheme from \"./sap_fiori_3/parameters-bundle.css.js\";\n\nregisterThemePropertiesLoader(\"@ui5/webcomponents-theming\", \"sap_fiori_3\", () => defaultThemeBase);\nregisterThemePropertiesLoader(\"@ui5/webcomponents\", \"sap_fiori_3\", () => defaultTheme);\nexport default {packageName:\"@ui5/webcomponents\",fileName:\"themes/AvatarGroup.css\",content:\":host{-webkit-tap-highlight-color:rgba(0,0,0,0)}:host(:not([hidden])){display:block}.ui5-avatar-group-items:focus{outline:none}:host([type=Group]) .ui5-avatar-group-items:focus{outline:var(--_ui5_avatar_outline);outline-offset:var(--_ui5_avatar_focus_offset);border-radius:var(--_ui5_avatar_group_focus_border_radius)}.ui5-avatar-group-root{display:flex}.ui5-avatar-group-items{white-space:nowrap;position:relative;display:inline-flex}:host([type=Group]) .ui5-avatar-group-items{cursor:pointer}:host([type=Group]) ::slotted([ui5-avatar]),:host([type=Group]) ::slotted([ui5-button]){pointer-events:none}.ui5-avatar-group-overflow-btn:not([hidden]),::slotted([ui5-button]:not([hidden])){--_ui5_button_base_padding:0;border-radius:50%;display:inline-flex;text-overflow:clip;z-index:0}.ui5-avatar-group-overflow-btn[focused],::slotted([ui5-button][focused]){outline:var(--_ui5_avatar_outline);outline-offset:var(--_ui5_avatar_focus_offset)}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-xs{height:2rem;width:2rem;min-width:2rem;font-size:.75rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-s,::slotted([ui5-button]){height:3rem;width:3rem;min-width:3rem;font-size:1.125rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-m{height:4rem;width:4rem;min-width:4rem;font-size:1.625rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-l{height:5rem;width:5rem;min-width:5rem;font-size:2rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-xl{height:7rem;width:7rem;min-width:7rem;font-size:2.75rem}\"}","import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\n\nimport {\n\tisEnter,\n\tisSpace,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { isChrome } from \"@ui5/webcomponents-base/dist/Device.js\";\n\nimport {\n\tAVATAR_GROUP_DISPLAYED_HIDDEN_LABEL,\n\tAVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL,\n\tAVATAR_GROUP_ARIA_LABEL_INDIVIDUAL,\n\tAVATAR_GROUP_ARIA_LABEL_GROUP,\n\tAVATAR_GROUP_MOVE,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\";\n// Styles\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\n\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarColorScheme from \"./types/AvatarColorScheme.js\";\n\nconst OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nconst AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;\n\n// based on RTL/LTR a margin-left/right is set respectfully\nconst offsets = {\n\t[AvatarSize.XS]: {\n\t\t[AvatarGroupType.Individual]: \"0.0625rem\",\n\t\t[AvatarGroupType.Group]: \"-0.75rem\",\n\t},\n\t[AvatarSize.S]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.25rem\",\n\t},\n\t[AvatarSize.M]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.625rem\",\n\t},\n\t[AvatarSize.L]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \" -2rem\",\n\t},\n\t[AvatarSize.XL]: {\n\t\t[AvatarGroupType.Individual]: \"0.25rem\",\n\t\t[AvatarGroupType.Group]: \"-2.75rem\",\n\t},\n};\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-avatar-group\",\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webc.main.AvatarGroup.prototype */  {\n\n\t\t/**\n\t \t * Defines the mode of the <code>AvatarGroup</code>.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>Group</code></li>\n\t\t * <li><code>Individual</code></li>\n\t\t * </ul>\n\t\t * @type {sap.ui.webc.main.types.AvatarGroupType}\n\t\t * @defaultValue \"Group\"\n\t\t * @public\n\t\t */\n\t\ttype: {\n\t\t\ttype: AvatarGroupType,\n\t\t\tdefaultValue: AvatarGroupType.Group,\n\t\t},\n\n\t\t/**\n\t\t * Defines the aria-haspopup value of the component on:\n\t\t * <br><br>\n\t\t * <ul>\n\t\t * <li> the whole container when <code>type</code> property is <code>Group</code></li>\n\t\t * <li> the default \"More\" overflow button when <code>type</code> is <code>Individual</code></li>\n\t\t * </ul>\n\t\t * <br><br>\n\t\t * @type String\n\t\t * @since 1.0.0-rc.15\n\t\t * @protected\n\t\t */\n\t\tariaHaspopup: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_overflowButtonText: {\n\t\t\ttype: String,\n\t\t\tnoAttribute: true,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webc.main.AvatarGroup.prototype */ {\n\t\t/**\n\t\t * Defines the items of the component. Use the <code>ui5-avatar</code> component as an item.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The UX guidelines recommends using avatars with \"Circle\" shape.\n\t\t * Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency\n\t\t * as the built-in overflow action has \"Circle\" shape.\n\t\t * @type {sap.ui.webc.main.IAvatar[]}\n\t\t * @slot items\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: HTMLElement,\n\t\t\tpropertyName: \"items\",\n\t\t},\n\t\t/**\n\t\t * Defines the overflow button of the component.\n\t\t * <b>Note:</b> We recommend using the <code>ui5-button</code> component.\n\t\t * <br><br>\n\t\t * <b>Note:</b> If this slot is not used, the component will\n\t\t * display the built-in overflow button.\n\t\t * @type {HTMLElement}\n\t\t * @slot overflowButton\n\t\t * @public\n\t\t * @since 1.0.0-rc.13\n\t\t */\n\t\t overflowButton: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webc.main.AvatarGroup.prototype */ {\n\t\t/**\n\t\t* Fired when the component is activated either with a\n\t\t* click/tap or by using the Enter or Space key.\n\t\t* @param {HTMLElement} targetRef The DOM ref of the clicked item.\n\t\t* @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n\t\t* @event\n\t\t* @public\n\t\t* @since 1.0.0-rc.11\n\t\t*/\n\t\tclick: {\n\t\t\tdetail: {\n\t\t\t\ttargetRef: { type: HTMLElement },\n\t\t\t\toverflowButtonClicked: { type: Boolean },\n\t\t\t},\n\t\t},\n\t\t/**\n\t\t* Fired when the count of visible <code>ui5-avatar</code> elements in the\n\t\t* component has changed\n\t\t* @event\n\t\t* @public\n\t\t* @since 1.0.0-rc.13\n\t\t*/\n\t\toverflow: {},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The <code>AvatarGroup</code> component has two group types:\n * <ul>\n * <li><code>Group</code> type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.</li>\n * <li><code>Individual</code> type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.</li>\n * </ul>\n *\n * <h3>Responsive Behavior</h3>\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a group of avatars.</li>\n * <li>You want to display several avatars which have something in common.</li>\n * </ul>\n *\n * Do not use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a single avatar.</li>\n * <li>You want to display a gallery for simple images.</li>\n * <li>You want to use it for other visual content than avatars.</li>\n * </ul>\n *\n * <h3>Keyboard Handling</h3>\n * The component provides advanced keyboard handling.\n * When focused, the user can use the following keyboard\n * shortcuts in order to perform a navigation:\n * <br>\n * - <code>type</code> Individual:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the overflow button</li>\n * <li>[LEFT] - Navigate one avatar to the left</li>\n * <li>[RIGHT] - Navigate one avatar to the right</li>\n * <li>[HOME] - Navigate to the first avatar</li>\n * <li>[END] - Navigate to the last avatar</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n * - <code>type</code> Group:\n * <br>\n * <ul>\n * <li>[TAB] - Move focus to the next interactive element after the component</li>\n * <li>[SPACE],[ENTER],[RETURN] - Trigger <code>ui5-click</code> event</li>\n * </ul>\n * <br>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webc.main.AvatarGroup\n * @extends sap.ui.webc.base.UI5Element\n * @tagname ui5-avatar-group\n * @since 1.0.0-rc.11\n * @public\n */\nclass AvatarGroup extends UI5Element {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tgetItemsCallback: () => {\n\t\t\t\treturn this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);\n\t\t\t},\n\t\t});\n\n\t\tthis._colorIndex = 0;\n\t\tthis._hiddenItems = 0;\n\t\tthis._onResizeHandler = this._onResize.bind(this);\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn AvatarGroupTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn AvatarGroupCss;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tButton,\n\t\t];\n\t}\n\n\tstatic async onDefine() {\n\t\tAvatarGroup.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\t/**\n\t * Returns an array containing the <code>ui5-avatar</code> instances that are currently not displayed due to lack of space.\n\t * @readonly\n\t * @type {HTMLElement[]}\n\t * @defaultValue []\n\t * @public\n\t */\n\tget hiddenItems() {\n\t\treturn this.items.slice(this._hiddenStartIndex);\n\t}\n\n\t/**\n\t * Returns an array containing the <code>AvatarColorScheme</code> values that correspond to the avatars in the component.\n\t * @readonly\n\t * @type {sap.ui.webc.main.types.AvatarColorScheme[]}\n\t * @defaultValue []\n\t * @public\n\t */\n\tget colorScheme() {\n\t\treturn this.items.map(avatar => avatar._effectiveBackgroundColor);\n\t}\n\n\tget _customOverflowButton() {\n\t\treturn this.overflowButton.length ? this.overflowButton[0] : undefined;\n\t}\n\n\tget _ariaLabelText() {\n\t\tconst hiddenItemsCount = this.hiddenItems.length;\n\t\tconst typeLabelKey = this._isGroup ? AVATAR_GROUP_ARIA_LABEL_GROUP : AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL;\n\n\t\t// avatar type label\n\t\tlet text = AvatarGroup.i18nBundle.getText(typeLabelKey);\n\n\t\t// add displayed-hidden avatars label\n\t\ttext += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, this._itemsCount - hiddenItemsCount, hiddenItemsCount)}`;\n\n\t\tif (this._isGroup) {\n\t\t\t// the container role is \"button\", add the message for complete list activation\n\t\t\ttext += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL)}`;\n\t\t} else {\n\t\t\t// the container role is \"group\", add the \"how to navigate\" message\n\t\t\ttext += ` ${AvatarGroup.i18nBundle.getText(AVATAR_GROUP_MOVE)}`;\n\t\t}\n\n\t\treturn text;\n\t}\n\n\tget _overflowButtonAriaLabelText() {\n\t\treturn this._isGroup ? undefined : AvatarGroup.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL);\n\t}\n\n\tget _containerAriaHasPopup() {\n\t\treturn this._isGroup ? this._getAriaHasPopup() : undefined;\n\t}\n\n\tget _overflowButtonAccAttributes() {\n\t\treturn {\n\t\t\thasPopup: this._isGroup ? undefined : this._getAriaHasPopup(),\n\t\t};\n\t}\n\n\tget _role() {\n\t\treturn this._isGroup ? \"button\" : \"group\";\n\t}\n\n\tget _hiddenStartIndex() {\n\t\treturn this._itemsCount - this._hiddenItems;\n\t}\n\n\tget _overflowBtnHidden() {\n\t\treturn this._hiddenItems === 0;\n\t}\n\n\tget _isGroup() {\n\t\treturn this.type === AvatarGroupType.Group;\n\t}\n\n\tget _itemsCount() {\n\t\treturn this.items.length;\n\t}\n\n\tget _groupTabIndex() {\n\t\treturn this._isGroup ? \"0\" : \"-1\";\n\t}\n\n\tget _overflowButton() {\n\t\treturn this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n\t}\n\n\t/**\n\t * Return the effective overflow button width\n\t * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n\t *\n\t * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n\t * 2) In case of \"Individual\" group type width is directly taken from button element\n\t * @private\n\t */\n\tget _overflowButtonEffectiveWidth() {\n\t\tconst button = this._customOverflowButton ? this._customOverflowButton : this._overflowButton;\n\t\t// if in \"Group\" mode overflow button size is equal to the offset from second item\n\t\tif (this._isGroup) {\n\t\t\tlet item = this.items[1];\n\t\t\tlet ltrEffectiveWidth;\n\n\t\t\t// in some cases when second avatar is overflowed the offset of the button is the right one\n\t\t\tif (!item || item.hidden) {\n\t\t\t\titem = button;\n\t\t\t}\n\n\t\t\tltrEffectiveWidth = item.offsetLeft;\n\n\t\t\tif (!isChrome()) {\n\t\t\t\t// additional subtractions required for non-Chromium browsers\n\t\t\t\tltrEffectiveWidth = item.offsetLeft - this.offsetLeft;\n\t\t\t}\n\n\t\t\treturn this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : ltrEffectiveWidth;\n\t\t}\n\n\t\treturn button.offsetWidth;\n\t}\n\n\tget firstAvatarSize() {\n\t\treturn this.items[0].size;\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\toverflowButton: {\n\t\t\t\t\"ui5-avatar-group-overflow-btn\": true,\n\t\t\t\t\"ui5-avatar-group-overflow-btn-xs\": this.firstAvatarSize === \"XS\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-s\": this.firstAvatarSize === \"S\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-m\": this.firstAvatarSize === \"M\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-l\": this.firstAvatarSize === \"L\",\n\t\t\t\t\"ui5-avatar-group-overflow-btn-xl\": this.firstAvatarSize === \"XL\",\n\t\t\t},\n\t\t};\n\t}\n\n\tonAfterRendering() {\n\t\tthis._overflowItems();\n\t}\n\n\tonBeforeRendering() {\n\t\tif (this._customOverflowButton) {\n\t\t\tthis._customOverflowButton.nonInteractive = this._isGroup;\n\t\t}\n\n\t\tthis._prepareAvatars();\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._onResizeHandler);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._onResizeHandler);\n\t}\n\n\t_onResize() {\n\t\tthis._overflowItems();\n\t}\n\n\t_onkeydown(event) {\n\t\t// when type is \"Individual\" the ui5-avatar and ui5-button both\n\t\t// fire \"click\" event when SPACE or ENTER are pressed and\n\t\t// AvatarGroup \"click\" is fired in their handlers (_onClick, _onUI5Click).\n\t\tif (this._isGroup) {\n\t\t\tif (isEnter(event)) {\n\t\t\t\tthis._fireGroupEvent(event.target);\n\t\t\t} else if (isSpace(event)) {\n\t\t\t\t// prevent scrolling\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (!event.shiftKey && isSpace(event) && this._isGroup) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t_fireGroupEvent(targetRef) {\n\t\tconst isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS) || targetRef === this._customOverflowButton;\n\n\t\tthis.fireEvent(\"click\", {\n\t\t\ttargetRef,\n\t\t\toverflowButtonClicked: isOverflowButtonClicked,\n\t\t});\n\t}\n\n\t_onClick(event) {\n\t\t// no matter the value of noConflict, the ui5-button and the group container (div) always fire a native click event\n\t\tconst isButton = event.target.hasAttribute(\"ui5-button\");\n\t\tevent.stopPropagation();\n\n\t\tif (this._isGroup || isButton) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\t}\n\n\t_onUI5Click(event) {\n\t\t// when noConflict=true only ui5-avatar will fire ui5-click event\n\t\tconst isAvatar = event.target.hasAttribute(\"ui5-avatar\");\n\t\tevent.stopPropagation();\n\n\t\tif (isAvatar) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\t}\n\n\t/**\n\t * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n\t * Set the margins (offsets) based on RTL/LTR.\n\t * @private\n\t */\n\t_prepareAvatars() {\n\t\tconst RTL = this.effectiveDir === \"rtl\";\n\t\tthis._colorIndex = 0;\n\n\t\tthis.items.forEach((avatar, index) => {\n\t\t\tconst colorIndex = this._getNextBackgroundColor();\n\t\t\tavatar.interactive = !this._isGroup;\n\n\t\t\tif (!avatar.getAttribute(\"_color-scheme\")) {\n\t\t\t\t// AvatarGroup respects colors set to ui5-avatar\n\t\t\t\tavatar.setAttribute(\"_color-scheme\", AvatarColorScheme[`Accent${colorIndex}`]);\n\t\t\t}\n\n\t\t\t// last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n\t\t\tif (index !== this._itemsCount - 1 || this._customOverflowButton) {\n\t\t\t\t// based on RTL margin left or right is set to avatars\n\t\t\t\tavatar.style[`margin-${RTL ? \"left\" : \"right\"}`] = offsets[avatar._effectiveSize][this.type];\n\t\t\t}\n\t\t});\n\t}\n\n\t_onfocusin(event) {\n\t\tconst target = event.target;\n\t\tthis._itemNavigation.setCurrentItem(target);\n\t}\n\n\t/**\n\t * Returns the total width to item excluding the item width\n\t * RTL/LTR aware\n\t * @private\n\t * @param {HTMLElement} item\n\t */\n\t_getWidthToItem(item) {\n\t\tconst isRTL = this.effectiveDir === \"rtl\";\n\t\tlet ltrWidthToItem;\n\n\t\tif (isRTL) {\n\t\t\t// in RTL the total width is equal to difference of the parent container width and\n\t\t\t// how much is the item offset to the left minus its offsetWidth\n\t\t\treturn item.offsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n\t\t}\n\n\t\t// in LTR the width is equal to item.offsetLeft\n\t\tltrWidthToItem = item.offsetLeft;\n\n\t\tif (!isChrome()) {\n\t\t\t// for non-Chromium browsers offsetLeft may differ\n\t\t\t// to normalize it, the Avatar Group's offset-left is subtracted\n\t\t\tltrWidthToItem = item.offsetLeft - this.offsetLeft;\n\t\t}\n\n\t\treturn ltrWidthToItem;\n\t}\n\n\t/**\n\t * Overflows items that were not able to fit the container\n\t * @private\n\t */\n\t_overflowItems() {\n\t\tif (this.items.length < 2) {\n\t\t\t// no need to overflow avatars\n\t\t\treturn;\n\t\t}\n\n\t\tlet hiddenItems = 0;\n\n\t\tfor (let index = 0; index < this._itemsCount; index++) {\n\t\t\tconst item = this.items[index];\n\n\t\t\t// show item to determine if it will fit the new container size\n\t\t\titem.hidden = false;\n\n\t\t\t// container width to current item + item width (avatar)\n\t\t\t// used to determine whether the following items will fit the container or not\n\t\t\tlet totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n\n\t\t\tif (index !== this._itemsCount - 1 || this._customOverflowButton) {\n\t\t\t\ttotalWidth += this._overflowButtonEffectiveWidth;\n\t\t\t}\n\n\t\t\tif (totalWidth > this.offsetWidth) {\n\t\t\t\thiddenItems = this._itemsCount - index;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// hide the items that did not fit the container size\n\t\tthis._setHiddenItems(hiddenItems);\n\t}\n\n\t_getNextBackgroundColor() {\n\t\t// counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n\t\tif (++this._colorIndex > 10) {\n\t\t\tthis._colorIndex = 1;\n\t\t}\n\t\treturn this._colorIndex;\n\t}\n\n\t_setHiddenItems(hiddenItems) {\n\t\tconst shouldFireEvent = this._hiddenItems !== hiddenItems;\n\n\t\tthis._hiddenItems = hiddenItems;\n\n\t\tthis.items.forEach((item, index) => {\n\t\t\titem.hidden = index >= this._hiddenStartIndex;\n\t\t});\n\n\t\tthis._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;\n\n\t\tif (shouldFireEvent) {\n\t\t\tthis.fireEvent(\"overflow\");\n\t\t}\n\t}\n\n\t_getAriaHasPopup() {\n\t\tif (this.ariaHaspopup === \"\") {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.ariaHaspopup;\n\t}\n}\n\nAvatarGroup.define();\n\nexport default AvatarGroup;\n","'use client';\n\nimport '@ui5/webcomponents/dist/AvatarGroup.js';\nimport { ReactNode } from 'react';\nimport { AvatarGroupType, AvatarColorScheme } from '../../enums';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { Ui5CustomEvent } from '../../interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '../../interfaces/Ui5DomRef';\nimport { withWebComponent } from '../../internal/withWebComponent';\nimport { UI5WCSlotsNode } from '../../types';\n\ninterface AvatarGroupAttributes {\n  /**\n   * Defines the mode of the `AvatarGroup`.\n   *\n   * Available options are:\n   *\n   * *   `Group`\n   * *   `Individual`\n   */\n  type?: AvatarGroupType | keyof typeof AvatarGroupType;\n}\n\nexport interface AvatarGroupDomRef extends AvatarGroupAttributes, Ui5DomRef {\n  /**\n   * Returns an array containing the `AvatarColorScheme` values that correspond to the avatars in the component.\n   */\n  readonly colorScheme: (AvatarColorScheme | keyof typeof AvatarColorScheme)[];\n  /**\n   * Returns an array containing the `ui5-avatar` instances that are currently not displayed due to lack of space.\n   */\n  readonly hiddenItems: ReactNode | ReactNode[];\n}\n\nexport interface AvatarGroupPropTypes extends AvatarGroupAttributes, Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the items of the component. Use the `Avatar` component as an item.\n   *\n   * **Note:** The UX guidelines recommends using avatars with \"Circle\" shape. Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency as the built-in overflow action has \"Circle\" shape.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the overflow button of the component. **Note:** We recommend using the `Button` component.\n   *\n   * **Note:** If this slot is not used, the component will display the built-in overflow button.\n   *\n   * __Note:__ This prop will be rendered as [slot](https://www.w3schools.com/tags/tag_slot.asp) (`slot=\"overflowButton\"`).\n   * Since you can't change the DOM order of slots when declaring them within a prop, it might prove beneficial to manually mount them as part of the component's children, especially when facing problems with the reading order of screen readers.\n   *\n   * __Note:__ When passing a custom React component to this prop, you have to make sure your component reads the `slot` prop and appends it to the most outer element of your component.\n   * Learn more about it [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/knowledge-base-handling-slots--page).\n   */\n  overflowButton?: UI5WCSlotsNode;\n  /**\n   * Fired when the component is activated either with a click/tap or by using the Enter or Space key.\n   */\n  onClick?: (\n    event: Ui5CustomEvent<AvatarGroupDomRef, { targetRef: HTMLElement; overflowButtonClicked: boolean }>\n  ) => void;\n  /**\n   * Fired when the count of visible `Avatar` elements in the component has changed\n   */\n  onOverflow?: (event: Ui5CustomEvent<AvatarGroupDomRef>) => void;\n}\n\n/**\n * Displays a group of avatars arranged horizontally. It is useful to visually showcase a group of related avatars, such as, project team members or employees. The component allows you to display the avatars in different sizes, depending on your use case. The `AvatarGroup` component has two group types:\n *\n * *   `Group` type: The avatars are displayed as partially overlapped on top of each other and the entire group has one click/tap area.\n * *   `Individual` type: The avatars are displayed side-by-side and each avatar has its own click/tap area.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/AvatarGroup\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst AvatarGroup = withWebComponent<AvatarGroupPropTypes, AvatarGroupDomRef>(\n  'ui5-avatar-group',\n  ['type'],\n  [],\n  ['overflowButton'],\n  ['click', 'overflow'],\n  () => import('@ui5/webcomponents/dist/AvatarGroup.js')\n);\n\nAvatarGroup.displayName = 'AvatarGroup';\n\nAvatarGroup.defaultProps = {\n  type: AvatarGroupType.Group\n};\n\nexport { AvatarGroup };\n","export default \"## Responsive Behavior\\n\\nWhen the available space is less than the width required to display all avatars, an overflow visualization appears as a button placed at the end with the same shape and size as the avatars. The visualization displays the number of avatars that have overflowed and are not currently visible.\\n\\n## Usage\\n\\nUse the `AvatarGroup` if:\\n\\n*   You want to display a group of avatars.\\n*   You want to display several avatars which have something in common.\\n\\nDo not use the `AvatarGroup` if:\\n\\n*   You want to display a single avatar.\\n*   You want to display a gallery for simple images.\\n*   You want to use it for other visual content than avatars.\\n\\n## Keyboard Handling\\n\\nThe component provides advanced keyboard handling. When focused, the user can use the following keyboard shortcuts in order to perform a navigation:  \\n\\\\- `type` Individual:  \\n\\n*   \\\\[TAB\\\\] - Move focus to the overflow button\\n*   \\\\[LEFT\\\\] - Navigate one avatar to the left\\n*   \\\\[RIGHT\\\\] - Navigate one avatar to the right\\n*   \\\\[HOME\\\\] - Navigate to the first avatar\\n*   \\\\[END\\\\] - Navigate to the last avatar\\n*   \\\\[SPACE\\\\],\\\\[ENTER\\\\],\\\\[RETURN\\\\] - Trigger `undefined` event\\n\\n  \\n\\\\- `type` Group:  \\n\\n*   \\\\[TAB\\\\] - Move focus to the next interactive element after the component\\n*   \\\\[SPACE\\\\],\\\\[ENTER\\\\],\\\\[RETURN\\\\] - Trigger `undefined` event\"","import React from 'react';\n\nexport const Avatar1 = (\n  <img src=\"https://sap.github.io/ui5-webcomponents/main/assets/images/avatars/woman_avatar_5.png\" />\n);\nexport const Avatar2 = (\n  <img src=\"https://sap.github.io/ui5-webcomponents/main/assets/images/avatars/man_avatar_3.png\" />\n);\n","import { Canvas, Markdown, Meta, Story } from '@storybook/blocks';\nimport { AvatarGroup } from './index';\nimport { AvatarGroupType } from '../../enums/AvatarGroupType';\nimport { Avatar } from '../Avatar';\nimport { ArgsTableWithNote, DocsHeader, DomRefTable, Footer } from '@sb/components';\nimport Description from './AvatarGroupDescription.md?raw';\nimport AvatarGroupDomRef from './AvatarGroupDomRef.json';\nimport { Avatar1, Avatar2 } from './CodeGen';\n\n<Meta\n  title=\"Data Display / AvatarGroup\"\n  component={AvatarGroup}\n  argTypes={{\n    children: { control: { disable: true } },\n    overflowButton: { control: { disable: true } }\n  }}\n  args={{\n    type: AvatarGroupType.Group\n  }}\n/>\n\n<DocsHeader since=\"0.13.0\" />\n\n<br />\n\n## Example\n\n<Canvas>\n  <Story name=\"Default\">\n    {(args) => {\n      return (\n        <AvatarGroup {...args}>\n          <Avatar icon=\"employee\" />\n          <Avatar initials=\"JD\" />\n          <Avatar>{Avatar1}</Avatar>\n          <Avatar>{Avatar2}</Avatar>\n        </AvatarGroup>\n      );\n    }}\n  </Story>\n</Canvas>\n\n## Properties\n\n<ArgsTableWithNote story=\"Default\" />\n\n<Markdown>{Description}</Markdown>\n\n<DomRefTable rows={AvatarGroupDomRef} />\n\n<Footer />\n"],"names":["AvatarGroupType","AvatarGroupType$1","block0","context","tags","suffix","html","ifDefined","block1","block2","scopeTag","classMap","registerThemePropertiesLoader","defaultThemeBase","defaultTheme","AvatarGroupCss","OVERFLOW_BTN_CLASS","AVATAR_GROUP_OVERFLOW_BTN_SELECTOR","offsets","AvatarSize","metadata","AvatarGroup","UI5Element","ItemNavigation","litRender","AvatarGroupTemplate","Button","getI18nBundle","avatar","hiddenItemsCount","typeLabelKey","AVATAR_GROUP_ARIA_LABEL_GROUP","AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL","text","AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL","AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL","AVATAR_GROUP_MOVE","button","item","ltrEffectiveWidth","isChrome","ResizeHandler","event","isEnter","isSpace","targetRef","isOverflowButtonClicked","isButton","isAvatar","RTL","index","colorIndex","AvatarColorScheme","target","isRTL","ltrWidthToItem","hiddenItems","totalWidth","shouldFireEvent","withWebComponent","__vitePreload","AvatarGroup$2","Description","Avatar1","jsx","Avatar2","MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","DocsHeader","Canvas","Story","args","Avatar","ArgsTableWithNote","Markdown","DomRefTable","AvatarGroupDomRef","Footer","defaultStory","componentMeta","__namedExportsOrder"],"mappings":"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"}