import{j as o}from"./jsx-runtime-5926aa06.js";import{a as p}from"./Import-dac30142.js";import{M as n,C as s}from"./chunk-PCJTTTQV-01f4c324.js";import{e as l}from"./AnalyticalTable.stories-9f559fd1.js";import{u as m}from"./index-bda0bad7.js";import"./index-ebeaab24.js";import"./iframe-35e6022f.js";import"../sb-preview/runtime.js";import"./react-18-3d03c2cf.js";import"./mapValues-0a776dd9.js";import"./_baseForOwn-800a0312.js";import"./index-9c09ad76.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./inheritsLoose-93e09647.js";import"./_getPrototype-593546d2.js";import"./_baseUniq-4c215180.js";import"./index-356e4a49.js";import"./delete-a24e2214.js";import"./UI5Element-74c2a827.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./Icons-94b91597.js";import"./i18n-defaults-80781f7e.js";import"./ListItem-4183041f.js";import"./withWebComponent-d61dcbbc.js";import"./utils-69f7a0e0.js";import"./useIsomorphicLayoutEffect-38a48652.js";import"./Integer-f7f172c9.js";import"./MarkedEvents-b83081e9.js";import"./Icon-a2964213.js";import"./slot-76e48863.js";import"./decline-c0e7c267.js";import"./ListItemBase-c271f906.js";import"./ResizeHandler-0f082c48.js";import"./ItemNavigation-e9bbb1b9.js";import"./getActiveElement-bcae01ed.js";import"./AriaLabelHelper-43a261ec.js";import"./TabbableElements-8e49b367.js";import"./isElementHidden-01c07146.js";import"./BrowserScrollbar.css-362c4d65.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-990cb1ca.js";import"./Label-fcb0092c.js";import"./Device-208919c6.js";import"./WrappingType-b81e595a.js";import"./class-map-519e9c6d.js";import"./i18n-defaults-254d6b69.js";import"./style-map-33b353d0.js";import"./RadioButton-9ea605bf.js";import"./ValueState-2c5e5904.js";import"./CheckBox-5944a432.js";import"./accept-4bb68de0.js";import"./Button-1eb48b4c.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-b979090e.js";import"./settings-5fbbbb3c.js";import"./index-4c0ab015.js";import"./clsx.m-1229b3e0.js";import"./react-jss.esm-022ab528.js";import"./index-562e1433.js";import"./ThemingParameters-7e2e4e30.js";import"./i18n-defaults-fc88400a.js";import"./I18nContext-cdb50611.js";import"./useIsomorphicId-4be7c5e3.js";import"./debounce-208efd13.js";import"./index-99d317a4.js";import"./CssSizeVariables-bd372cde.js";import"./CustomVariables-fd831c35.js";import"./filter-729156a8.js";import"./group-2-73facf66.js";import"./index-c4c4f16d.js";import"./stopPropagation-da74d54e.js";import"./index-c8382bc9.js";import"./CustomListItem-d39f6559.js";import"./index-a6e47f88.js";import"./index-f3432e20.js";import"./Popover-2de3a0ad.js";import"./PopupUtils-db5b49db.js";import"./PopupsCommon.css-c4ad8573.js";import"./FocusableElements-20734289.js";import"./MediaRange-25b98f31.js";import"./index-ed81f046.js";import"./StandardListItem-48aef1ae.js";import"./Avatar-99b7e1ff.js";import"./employee-78b984a5.js";import"./ValueState-ab6838cc.js";import"./index-375d75aa.js";import"./Input-90311e06.js";import"./Suggestions.css-2167eb11.js";import"./information-972c65ef.js";import"./ResponsivePopoverCommon.css-5b3cf680.js";import"./ValueStateMessage.css-0142eeaf.js";import"./navigation-down-arrow-a20e7b64.js";import"./navigation-right-arrow-6da3580e.js";import"./useCurrentTheme-7822237c.js";import"./index-bd13c4ba.js";import"./index-626dcf2d.js";import"./index-a74110af.js";import"./GlobalStyleClasses-7209358d.js";import"./index-1ae9a679.js";import"./Title-85313bbf.js";import"./index-06412ffc.js";import"./slim-arrow-down-4f848b87.js";import"./GroupHeaderListItem-b82baeae.js";import"./Tokenizer-f8bffea1.js";import"./ScrollEnablement-4353003c.js";import"./animate-1a16ba20.js";import"./ResponsivePopover-d37f7fd3.js";import"./Dialog-07218916.js";import"./Token-fa68eb30.js";import"./ToggleButton-9307a40f.js";import"./ComboBoxItem-f6f35dc5.js";import"./index-41350527.js";import"./index-ad63fd57.js";import"./InvisibleMessage-17280599.js";import"./index-2acbc224.js";import"./index-c9ac0977.js";import"./index-8bfd912f.js";function Ci(t={}){const{wrapper:r}=Object.assign({},m(),t.components);return r?o.jsx(r,Object.assign({},t,{children:o.jsx(e,{})})):e();function e(){const i=Object.assign({h1:"h1",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre"},m(),t.components);return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin: useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(p,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(s,{sourceState:"none",of:l}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = (e) => {
    console.log(e.columnWidth, e.header);
  };
  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={[
        AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
          liveUpdate: false,
          wait: 100
        })
      ]}
    />
  );
};
`})})]})}}export{Ci as default};
//# sourceMappingURL=PluginOnColumnResize-1be429a0.js.map
