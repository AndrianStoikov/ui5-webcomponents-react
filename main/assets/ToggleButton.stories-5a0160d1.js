import{M as c,C as d,f as u}from"./chunk-PCJTTTQV-38b99b19.js";import{T as e}from"./index-a5f65d81.js";import{a as s}from"./Button-35e7f923.js";import"./employee-f8bb953b.js";import{d as g}from"./DomRefTable.module-4f3389ee.js";import{D as f}from"./DocsHeader-c7666054.js";import{F as h}from"./Footer-e7e3388e.js";import{j as t,a as b,F as y}from"./jsx-runtime-670450c2.js";import"./index-f1f749bf.js";import{D as x}from"./DomRefTable-4d2ce216.js";import{u as m}from"./index-4fb8b842.js";import"./iframe-7dea36f6.js";import"../sb-preview/runtime.mjs";import"./react-18-718b9f73.js";import"./mapValues-2de54f78.js";import"./_baseForOwn-c7d9bea5.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-96c5f47c.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./inheritsLoose-93e09647.js";import"./_getPrototype-bd05e126.js";import"./_baseUniq-51545746.js";import"./index-356e4a49.js";import"./ToggleButton-f5871530.js";import"./withWebComponent-d280b5c2.js";import"./utils-ed90fb1b.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./useIsomorphicLayoutEffect-a838da4a.js";import"./Icons-85b0e9dd.js";import"./UI5Element-5e77b351.js";import"./Device-208919c6.js";import"./Icon-a70637b5.js";import"./slot-76e48863.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./i18n-defaults-254d6b69.js";import"./chunk-R4NKYYJA-96bb58e6.js";import"./react-jss.esm-2e28eff7.js";import"./index-2624e4d5.js";import"./decline-07b4d490.js";import"./i18n-defaults-80781f7e.js";import"./information-bce3ba82.js";import"./class-map-6d48ebd3.js";import"./index-2bd17005.js";import"./clsx.m-1229b3e0.js";import"./index-479d8097.js";import"./ThemingParameters-f4b4144e.js";import"./Import-53c1bfde.js";import"./TableOfContent-308727db.js";import"./index-097afed0.js";import"./Link-8808efba.js";import"./WrappingType-b81e595a.js";import"./index-ba4bb7c2.js";import"./Label-e24223e9.js";import"./index-40f07246.js";import"./Popover-eac39f76.js";import"./Integer-f7f172c9.js";import"./PopupUtils-d0ec75b7.js";import"./getActiveElement-bcae01ed.js";import"./PopupsCommon.css-ab897c30.js";import"./FocusableElements-2da74965.js";import"./isElementHidden-01c07146.js";import"./BrowserScrollbar.css-b2c643e0.js";import"./ResizeHandler-653daa1f.js";import"./MediaRange-25b98f31.js";import"./style-map-51d6dd91.js";const D=[{name:"accessibilityAttributes",visibility:"public",since:"1.2.0",type:"object",noattribute:"true",description:`An object of strings that defines several additional accessibility attribute values for customization depending on the use case.

It supports the following fields:

<ul> <li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> </li> <li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog</code></li> <li><code>Grid</code></li> <li><code>ListBox</code></li> <li><code>Menu</code></li> <li><code>Tree</code></li> </ul> </li> <li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li> </ul>`}];function T(o={}){const{wrapper:i}=Object.assign({},m(),o.components);return i?t(i,{...o,children:t(n,{})}):n();function n(){const p=Object.assign({h2:"h2"},m(),o.components);return b(y,{children:[t(c,{title:"Inputs / ToggleButton",component:e,argTypes:{children:{control:"text"}},args:{design:s.Default,icon:"employee",children:"ToggleButton Text"}}),`
`,t(f,{}),`
`,t("br",{}),`
`,t(p.h2,{id:"example",children:"Example"}),`
`,t(d,{children:t(u,{name:"Default",children:a=>t(e,{...a})})}),`
`,t(p.h2,{id:"properties",children:"Properties"}),`
`,t(g,{story:"Default"}),`
`,t(x,{rows:D}),`
`,t(h,{})]})}}const l=o=>t(e,{...o});l.storyName="Default";l.parameters={storySource:{source:`args => {
  return <ToggleButton {...args} />;
}`}};const r={title:"Inputs / ToggleButton",component:e,args:{design:s.Default,icon:"employee",children:"ToggleButton Text"},argTypes:{children:{control:"text"}},tags:["stories-mdx"],includeStories:["defaultStory"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:T};const Et=["defaultStory"];export{Et as __namedExportsOrder,r as default,l as defaultStory};
//# sourceMappingURL=ToggleButton.stories-5a0160d1.js.map
