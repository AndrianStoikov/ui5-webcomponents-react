import{M as c,C as d,j as u}from"./index-b2fa1869.js";import{T as e}from"./index-b2bccbf5.js";import{a as s}from"./Button-8d5b0cb6.js";import"./employee-98ce1b38.js";import{b as g}from"./DomRefTable.module-fa9d7949.js";import{D as f}from"./DocsHeader-d396b846.js";import{F as h}from"./Footer-8ae1ebc2.js";import{j as t,a as b,F as y}from"./jsx-runtime-670450c2.js";import"./index-f1f749bf.js";import{D}from"./DomRefTable-97873cfd.js";import{u as m}from"./index-4fb8b842.js";import"./iframe-695c0ea3.js";import"../sb-preview/runtime.mjs";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index-96c5f47c.js";import"./_commonjsHelpers-042e6b4d.js";import"./inheritsLoose-93e09647.js";import"./_baseForOwn-c7d9bea5.js";import"./mapValues-2de54f78.js";import"./_getPrototype-bd05e126.js";import"./_baseUniq-51545746.js";import"./index-356e4a49.js";import"./index-61436d32.js";import"./ToggleButton-d1319c08.js";import"./withWebComponent-e4481254.js";import"./utils-ed90fb1b.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./useIsomorphicLayoutEffect-a838da4a.js";import"./Keys-3acbae73.js";import"./Device-208919c6.js";import"./UI5Element-427ec721.js";import"./i18n-defaults-da1c0a37.js";import"./AriaLabelHelper-c82262ef.js";import"./MarkedEvents-b83081e9.js";import"./Icon-a9b28f0c.js";import"./Icons-7b82f601.js";import"./chunk-PCJTTTQV-e791b56e.js";import"./react-18-2bb9dade.js";import"./chunk-R4NKYYJA-96bb58e6.js";import"./react-jss.esm-fe4dc3ff.js";import"./index-17d85351.js";import"./decline-5eb6d937.js";import"./i18n-defaults-7dff8409.js";import"./information-0837f136.js";import"./class-map-5d8e4b2b.js";import"./index-57eaac56.js";import"./clsx.m-1229b3e0.js";import"./index-c7ba7a71.js";import"./ThemingParameters-f4b4144e.js";import"./Import-9917bab3.js";import"./TableOfContent-b3e6ddb5.js";import"./index-1a45a8f1.js";import"./Link-d055a21d.js";import"./WrappingType-b81e595a.js";import"./index-a6974cfc.js";import"./Label-040efebd.js";import"./Footer.module-f90cad7d.js";import"./index-292d3d32.js";import"./Popover-e2d049c9.js";import"./Integer-d9976c13.js";import"./PopupsCommon.css-c7334d05.js";import"./FocusableElements-7e25663e.js";import"./isElementHidden-01c07146.js";import"./BrowserScrollbar.css-615afd63.js";import"./ResizeHandler-1fa8a094.js";import"./MediaRange-25b98f31.js";import"./style-map-77d201d2.js";const T=[{name:"accessibilityAttributes",visibility:"public",since:"1.2.0",type:"object",noattribute:"true",description:`An object of strings that defines several additional accessibility attribute values for customization depending on the use case.

It supports the following fields:

<ul> <li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> </li> <li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog</code></li> <li><code>Grid</code></li> <li><code>ListBox</code></li> <li><code>Menu</code></li> <li><code>Tree</code></li> </ul> </li> <li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li> </ul>`}];function x(o={}){const{wrapper:i}=Object.assign({},m(),o.components);return i?t(i,{...o,children:t(n,{})}):n();function n(){const p=Object.assign({h2:"h2"},m(),o.components);return b(y,{children:[t(c,{title:"Inputs / ToggleButton",component:e,argTypes:{children:{control:"text"}},args:{design:s.Default,icon:"employee",children:"ToggleButton Text"}}),`
`,t(f,{}),`
`,t("br",{}),`
`,t(p.h2,{children:"Example"}),`
`,t(d,{children:t(u,{name:"Default",children:a=>t(e,{...a})})}),`
`,t(p.h2,{children:"Properties"}),`
`,t(g,{story:"Default"}),`
`,t(D,{rows:T}),`
`,t(h,{})]})}}const l=o=>t(e,{...o});l.storyName="Default";l.parameters={storySource:{source:`args => {
  return <ToggleButton {...args} />;
}`}};const r={title:"Inputs / ToggleButton",component:e,args:{design:s.Default,icon:"employee",children:"ToggleButton Text"},argTypes:{children:{control:"text"}},tags:["stories-mdx"],includeStories:["defaultStory"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:x};const Lt=["defaultStory"];export{Lt as __namedExportsOrder,r as default,l as defaultStory};
//# sourceMappingURL=ToggleButton.stories-2f2d5295.js.map
