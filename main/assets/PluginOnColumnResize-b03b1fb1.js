import{j as o}from"./jsx-runtime-5926aa06.js";import{d as p}from"./DomRefTable.module-352f2393.js";import{M as n,C as s}from"./chunk-PCJTTTQV-4858f6d9.js";import"./index-ebeaab24.js";import{F as l}from"./Footer-26b1bc7a.js";import{e as a}from"./AnalyticalTable.stories-fe513b2a.js";import{u as m}from"./index-bda0bad7.js";import"./react-jss.esm-022ab528.js";import"./inheritsLoose-93e09647.js";import"./index-f564b7e4.js";import"./iframe-c3106ff6.js";import"../sb-preview/runtime.js";import"./UI5Element-fb9ecf93.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./withWebComponent-d4224c1c.js";import"./utils-69f7a0e0.js";import"./useIsomorphicLayoutEffect-38a48652.js";import"./slot-76e48863.js";import"./Icon-ef594e9f.js";import"./Icons-2c98f222.js";import"./decline-3df8c953.js";import"./i18n-defaults-80781f7e.js";import"./information-451d615b.js";import"./class-map-18f572ce.js";import"./Button-4160b137.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./Device-99b8bbf4.js";import"./i18n-defaults-a58643fd.js";import"./index-d56023c9.js";import"./clsx-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-9af65fbe.js";import"./index-c6923ba7.js";import"./Integer-f7f172c9.js";import"./index-94715c30.js";import"./Avatar-3c16d274.js";import"./ResizeHandler-36560530.js";import"./employee-f2f473ef.js";import"./index-fb5f8025.js";import"./index-53578f5f.js";import"./Link-057b3642.js";import"./WrappingType-b81e595a.js";import"./react-18-95218780.js";import"./mapValues-f5a21168.js";import"./_baseForOwn-8b0cf1d5.js";import"./index-9c09ad76.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./_getPrototype-20c8b51e.js";import"./_baseUniq-8051c65b.js";import"./index-356e4a49.js";import"./index-7b456273.js";import"./index-58d332cd.js";import"./Label-7f4aa83d.js";import"./index-42b96b95.js";import"./index-57bc25c8.js";import"./Popover-510446d9.js";import"./PopupsCommon.css-f7aa7df0.js";import"./FocusableElements-6f0cd02a.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-54298215.js";import"./BrowserScrollbar.css-0e9b1550.js";import"./delete-fdc9cc6b.js";import"./ListItem-bb2d09ef.js";import"./ListItemBase-32e7e45c.js";import"./ItemNavigation-c74bf7f7.js";import"./TabbableElements-8e49b367.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-80d43f0f.js";import"./RadioButton-75d95420.js";import"./ValueState-2c5e5904.js";import"./CheckBox-c44317b4.js";import"./accept-756ca6cd.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-a768cef3.js";import"./settings-a47cbcbe.js";import"./i18n-defaults-7eea5c5b.js";import"./I18nContext-cdb50611.js";import"./useIsomorphicId-4be7c5e3.js";import"./debounce-8486f6b5.js";import"./index-99d317a4.js";import"./CssSizeVariables-cd649ef5.js";import"./CustomVariables-d3e297a0.js";import"./filter-98e2cc94.js";import"./group-2-d8455866.js";import"./index-7dfa56df.js";import"./stopPropagation-da74d54e.js";import"./index-ee414a93.js";import"./CustomListItem-0d38c914.js";import"./index-7637fa64.js";import"./index-fa5949bd.js";import"./StandardListItem-049f31eb.js";import"./ValueState-ab6838cc.js";import"./index-aa914f6b.js";import"./Input-1e09e321.js";import"./Suggestions.css-66403272.js";import"./ResponsivePopoverCommon.css-e9e92f0e.js";import"./ValueStateMessage.css-332efe2d.js";import"./navigation-down-arrow-605028bc.js";import"./navigation-right-arrow-2afad8d0.js";import"./useCurrentTheme-583e75bc.js";import"./index-11912e6f.js";import"./index-4fd772a5.js";import"./GlobalStyleClasses-7209358d.js";import"./index-2d498294.js";import"./Title-1daec987.js";import"./index-d42528c9.js";import"./index-c6e01d1d.js";import"./InvisibleMessage-fac05f08.js";import"./slim-arrow-down-d78fcf2d.js";import"./ResponsivePopover-a7253ba3.js";import"./Dialog-2af89d50.js";import"./index-ec8c6af7.js";import"./index-09bc5919.js";import"./ToggleButton-3042cd98.js";import"./index-6cf6b0a8.js";import"./GroupHeaderListItem-84974bca.js";import"./Tokenizer-fc08f21c.js";import"./ScrollEnablement-5e135290.js";import"./animate-1a16ba20.js";import"./Token-a72d0aac.js";import"./ComboBoxItem-647871b6.js";function vi(t={}){const{wrapper:r}=Object.assign({},m(),t.components);return r?o.jsx(r,Object.assign({},t,{children:o.jsx(e,{})})):e();function e(){const i=Object.assign({h1:"h1",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre"},m(),t.components);return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin: useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(p,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(s,{sourceState:"none",of:a}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = (e) => {
    console.log(e.columnWidth, e.header);
  };
  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={[
        AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
          liveUpdate: false,
          wait: 100
        })
      ]}
    />
  );
};
`})}),`
`,o.jsx(l,{})]})}}export{vi as default};
//# sourceMappingURL=PluginOnColumnResize-b03b1fb1.js.map
