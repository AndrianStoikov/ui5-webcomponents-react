import{M as c,C as d,j as u}from"./index-0558a1c5.js";import{T as e}from"./index-6de9bd8f.js";import{a as m}from"./Button-b2f5d653.js";import"./employee-98ce1b38.js";import{b as g}from"./DomRefTable.module-cc32ecfb.js";import{D as f}from"./DocsHeader-7bbbeeed.js";import{F as h}from"./Footer-4983819e.js";import{j as t,a as b,F as y}from"./jsx-runtime-670450c2.js";import"./index-f1f749bf.js";import{D}from"./DomRefTable-fbdfc880.js";import{u as s}from"./index-4fb8b842.js";import"./iframe-48aaf0d0.js";import"../sb-preview/runtime.mjs";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index-96c5f47c.js";import"./_commonjsHelpers-042e6b4d.js";import"./inheritsLoose-93e09647.js";import"./_baseForOwn-c7d9bea5.js";import"./mapValues-2de54f78.js";import"./_getPrototype-bd05e126.js";import"./_baseUniq-51545746.js";import"./index-356e4a49.js";import"./index-61436d32.js";import"./ToggleButton-8a27b40c.js";import"./withWebComponent-e4481254.js";import"./utils-ed90fb1b.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./useIsomorphicLayoutEffect-a838da4a.js";import"./Keys-3acbae73.js";import"./Device-208919c6.js";import"./UI5Element-427ec721.js";import"./i18n-defaults-ffd92f69.js";import"./AriaLabelHelper-c82262ef.js";import"./MarkedEvents-b83081e9.js";import"./Icon-ce854b74.js";import"./Icons-7b82f601.js";import"./chunk-PCJTTTQV-088f8141.js";import"./react-18-2bb9dade.js";import"./chunk-R4NKYYJA-96bb58e6.js";import"./react-jss.esm-fe4dc3ff.js";import"./index-87e7d53b.js";import"./decline-66da1fc6.js";import"./i18n-defaults-8c9b7f08.js";import"./class-map-5d8e4b2b.js";import"./index-5cbed584.js";import"./clsx.m-1229b3e0.js";import"./index-c7ba7a71.js";import"./ThemingParameters-f4b4144e.js";import"./Import-68609c24.js";import"./TableOfContent-e939d828.js";import"./index-0523b946.js";import"./WrappingType-b81e595a.js";import"./index-56f7bf98.js";import"./Label-040efebd.js";import"./Footer.module-c4f3b823.js";import"./index-32f4c626.js";import"./Popover-93eeebac.js";import"./Integer-d9976c13.js";import"./PopupsCommon.css-72d38d0e.js";import"./FocusableElements-c2f39514.js";import"./ResizeHandler-1fa8a094.js";import"./MediaRange-25b98f31.js";import"./style-map-77d201d2.js";const T=[{name:"accessibilityAttributes",visibility:"public",since:"1.2.0",type:"object",noattribute:"true",description:`An object of strings that defines several additional accessibility attribute values for customization depending on the use case.

It supports the following fields:

<ul> <li><code>expanded</code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> </li> <li><code>hasPopup</code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog</code></li> <li><code>Grid</code></li> <li><code>ListBox</code></li> <li><code>Menu</code></li> <li><code>Tree</code></li> </ul> </li> <li><code>controls</code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.</li> </ul>`}];function x(o={}){const{wrapper:i}=Object.assign({},s(),o.components);return i?t(i,{...o,children:t(n,{})}):n();function n(){const p=Object.assign({h2:"h2"},s(),o.components);return b(y,{children:[t(c,{title:"Inputs / ToggleButton",component:e,argTypes:{children:{control:"text"}},args:{design:m.Default,icon:"employee",children:"ToggleButton Text"}}),`
`,t(f,{}),`
`,t("br",{}),`
`,t(p.h2,{children:"Example"}),`
`,t(d,{children:t(u,{name:"Default",children:a=>t(e,{...a})})}),`
`,t(p.h2,{children:"Properties"}),`
`,t(g,{story:"Default"}),`
`,t(D,{rows:T}),`
`,t(h,{})]})}}const l=o=>t(e,{...o});l.storyName="Default";l.parameters={storySource:{source:`args => {
  return <ToggleButton {...args} />;
}`}};const r={title:"Inputs / ToggleButton",component:e,args:{design:m.Default,icon:"employee",children:"ToggleButton Text"},argTypes:{children:{control:"text"}},tags:["stories-mdx"],includeStories:["defaultStory"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:x};const _t=["defaultStory"];export{_t as __namedExportsOrder,r as default,l as defaultStory};
//# sourceMappingURL=ToggleButton.stories-698d888e.js.map
