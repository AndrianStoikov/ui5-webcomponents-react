import{j as o}from"./jsx-runtime-5926aa06.js";import{d as p}from"./DomRefTable.module-7d4feb4b.js";import{M as n,C as s}from"./chunk-PCJTTTQV-722817a8.js";import"./index-ebeaab24.js";import{F as l}from"./Footer-88d5137e.js";import{e as a}from"./AnalyticalTable.stories-078ebae9.js";import{u as m}from"./index-bda0bad7.js";import"./react-jss.esm-022ab528.js";import"./inheritsLoose-93e09647.js";import"./index-cdc8f7a3.js";import"./iframe-8b32191a.js";import"../sb-preview/runtime.js";import"./UI5Element-78be0f3d.js";import"./CustomElementsScopeUtils-137da8c8.js";import"./withWebComponent-d4224c1c.js";import"./utils-69f7a0e0.js";import"./useIsomorphicLayoutEffect-38a48652.js";import"./slot-76e48863.js";import"./Icon-70a9e5b9.js";import"./Icons-26e87c01.js";import"./decline-09ce3004.js";import"./i18n-defaults-80781f7e.js";import"./information-872f55da.js";import"./class-map-18f572ce.js";import"./Button-427cd4bb.js";import"./AriaLabelHelper-43a261ec.js";import"./MarkedEvents-b83081e9.js";import"./Device-99b8bbf4.js";import"./i18n-defaults-f002f496.js";import"./index-562e1433.js";import"./clsx.m-1229b3e0.js";import"./ThemingParameters-7e2e4e30.js";import"./addCustomCSSWithScoping-3e959ad1.js";import"./index-645c2c27.js";import"./Integer-f7f172c9.js";import"./index-3514609f.js";import"./Avatar-e1c9d8f0.js";import"./ResizeHandler-15c77712.js";import"./employee-1c1d2fc1.js";import"./index-be77d9a3.js";import"./index-b4e410b5.js";import"./Link-04c4a519.js";import"./WrappingType-b81e595a.js";import"./react-18-3d03c2cf.js";import"./mapValues-0a776dd9.js";import"./_baseForOwn-800a0312.js";import"./index-9c09ad76.js";import"./index-d475d2ea.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./_getPrototype-593546d2.js";import"./_baseUniq-4c215180.js";import"./index-356e4a49.js";import"./index-ea625d40.js";import"./index-f99ece88.js";import"./Label-263c93f2.js";import"./index-3021d8c3.js";import"./index-71efb4b4.js";import"./Popover-a03c4c52.js";import"./PopupsCommon.css-1eb36bcf.js";import"./FocusableElements-53839075.js";import"./isElementHidden-01c07146.js";import"./MediaRange-25b98f31.js";import"./style-map-54298215.js";import"./BrowserScrollbar.css-119d6915.js";import"./delete-bfb156f6.js";import"./ListItem-6bbd1cb0.js";import"./ListItemBase-d5e2b9fa.js";import"./ItemNavigation-e8f3ce94.js";import"./TabbableElements-8e49b367.js";import"./debounce-9c2fb7dd.js";import"./BusyIndicator-4ada5b66.js";import"./RadioButton-1b157057.js";import"./ValueState-2c5e5904.js";import"./CheckBox-13a91d81.js";import"./accept-18821b02.js";import"./HasPopup-47461347.js";import"./slim-arrow-right-ccb981dd.js";import"./settings-439530af.js";import"./i18n-defaults-ec343d3a.js";import"./I18nContext-cdb50611.js";import"./useIsomorphicId-4be7c5e3.js";import"./debounce-bd3193d4.js";import"./index-99d317a4.js";import"./CssSizeVariables-cd649ef5.js";import"./CustomVariables-d3e297a0.js";import"./filter-b5332a0b.js";import"./group-2-427e5dda.js";import"./index-654a8136.js";import"./stopPropagation-da74d54e.js";import"./index-f0e75269.js";import"./CustomListItem-c77a30c8.js";import"./index-6c8d4d5d.js";import"./index-95a9860c.js";import"./StandardListItem-4f4de76a.js";import"./ValueState-ab6838cc.js";import"./index-d3d34f6e.js";import"./Input-570579b1.js";import"./Suggestions.css-0bf90e55.js";import"./ResponsivePopoverCommon.css-f39aca2a.js";import"./ValueStateMessage.css-998b8922.js";import"./navigation-down-arrow-84959714.js";import"./navigation-right-arrow-a314922a.js";import"./useCurrentTheme-f86b0210.js";import"./index-4d114bb4.js";import"./index-2f4c7c99.js";import"./GlobalStyleClasses-7209358d.js";import"./index-cdb38ab1.js";import"./Title-e1d9d87f.js";import"./index-9ffd3d3c.js";import"./slim-arrow-down-59731cbb.js";import"./GroupHeaderListItem-514e58f4.js";import"./Tokenizer-2f8b2cc2.js";import"./ScrollEnablement-5e135290.js";import"./animate-1a16ba20.js";import"./ResponsivePopover-5ed17489.js";import"./Dialog-35faa92e.js";import"./Token-0d832c36.js";import"./ToggleButton-ebf9d89e.js";import"./ComboBoxItem-d87d1077.js";import"./index-abc2a35d.js";import"./index-fc47e64e.js";import"./InvisibleMessage-0c1781f1.js";import"./index-1fd591d1.js";import"./index-dade9536.js";function vi(t={}){const{wrapper:r}=Object.assign({},m(),t.components);return r?o.jsx(r,Object.assign({},t,{children:o.jsx(e,{})})):e();function e(){const i=Object.assign({h1:"h1",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre"},m(),t.components);return o.jsxs(o.Fragment,{children:[o.jsx(n,{title:"Data Display / AnalyticalTable / Plugin: useOnColumnResize"}),`
`,o.jsx(i.h1,{id:"analyticaltable-plugin-useoncolumnresize",children:"AnalyticalTable Plugin: useOnColumnResize"}),`
`,o.jsx(p,{moduleName:"AnalyticalTableHooks",packageName:"@ui5/webcomponents-react"}),`
`,o.jsxs(i.p,{children:["The ",o.jsx(i.code,{children:"useOnColumnResize"}),` plugin hook allows firing a callback when a columns size has changed by dragging the "Resizer".
The first parameter is the callback itself (`,o.jsx(i.code,{children:"e: { columnWidth: number; header: Record<string, any> }) => void;"}),"), the second one are the optional ",o.jsx(i.code,{children:"options"})," for controlling how often the callback should fire."]}),`
`,o.jsxs(i.p,{children:[o.jsx(i.code,{children:"options"}),":"]}),`
`,o.jsxs(i.ul,{children:[`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"liveUpdate"}),": If ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),", the resize function will fire every time the width has changed depending on the ",o.jsx(i.code,{children:"options.wait"})," delay."]}),`
`,o.jsxs(i.li,{children:[o.jsx(i.code,{children:"wait"}),": The number of milliseconds for which the calls are to be delayed. ",o.jsxs(i.strong,{children:["Defaults to ",o.jsx(i.code,{children:"100"})]}),". (Only has an effect if ",o.jsx(i.code,{children:"liveUpdate"})," is ",o.jsx(i.code,{children:"true"}),")"]}),`
`]}),`
`,o.jsx(i.h2,{id:"example",children:"Example"}),`
`,o.jsx(s,{sourceState:"none",of:a}),`
`,o.jsx(i.pre,{children:o.jsx(i.code,{className:"language-jsx",children:`const TableComponent = (props) => {
  const handleColumResize = (e) => {
    console.log(e.columnWidth, e.header);
  };
  return (
    <AnalyticalTable
      data={props.data}
      columns={props.columns}
      tableHooks={[
        AnalyticalTableHooks.useOnColumnResize(handleColumResize, {
          liveUpdate: false,
          wait: 100
        })
      ]}
    />
  );
};
`})}),`
`,o.jsx(l,{})]})}}export{vi as default};
//# sourceMappingURL=PluginOnColumnResize-70ecc992.js.map
